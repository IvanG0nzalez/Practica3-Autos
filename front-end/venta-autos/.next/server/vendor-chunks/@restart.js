"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@restart";
exports.ids = ["vendor-chunks/@restart"];
exports.modules = {

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/index.js":
/*!**************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nvar _useCallbackRef = _interopRequireDefault(__webpack_require__(/*! ./useCallbackRef */ \"(ssr)/./node_modules/@restart/hooks/cjs/useCallbackRef.js\"));\nexports.useCallbackRef = _useCallbackRef.default;\nvar _useCommittedRef = _interopRequireDefault(__webpack_require__(/*! ./useCommittedRef */ \"(ssr)/./node_modules/@restart/hooks/cjs/useCommittedRef.js\"));\nexports.useCommittedRef = _useCommittedRef.default;\nvar _useEventCallback = _interopRequireDefault(__webpack_require__(/*! ./useEventCallback */ \"(ssr)/./node_modules/@restart/hooks/cjs/useEventCallback.js\"));\nexports.useEventCallback = _useEventCallback.default;\nvar _useEventListener = _interopRequireDefault(__webpack_require__(/*! ./useEventListener */ \"(ssr)/./node_modules/@restart/hooks/cjs/useEventListener.js\"));\nexports.useEventListener = _useEventListener.default;\nvar _useGlobalListener = _interopRequireDefault(__webpack_require__(/*! ./useGlobalListener */ \"(ssr)/./node_modules/@restart/hooks/cjs/useGlobalListener.js\"));\nexports.useGlobalListener = _useGlobalListener.default;\nvar _useInterval = _interopRequireDefault(__webpack_require__(/*! ./useInterval */ \"(ssr)/./node_modules/@restart/hooks/cjs/useInterval.js\"));\nexports.useInterval = _useInterval.default;\nvar _useRafInterval = _interopRequireDefault(__webpack_require__(/*! ./useRafInterval */ \"(ssr)/./node_modules/@restart/hooks/cjs/useRafInterval.js\"));\nexports.useRafInterval = _useRafInterval.default;\nvar _useMergeState = _interopRequireDefault(__webpack_require__(/*! ./useMergeState */ \"(ssr)/./node_modules/@restart/hooks/cjs/useMergeState.js\"));\nexports.useMergeState = _useMergeState.default;\nvar _useMergeStateFromProps = _interopRequireDefault(__webpack_require__(/*! ./useMergeStateFromProps */ \"(ssr)/./node_modules/@restart/hooks/cjs/useMergeStateFromProps.js\"));\nexports.useMergeStateFromProps = _useMergeStateFromProps.default;\nvar _useMounted = _interopRequireDefault(__webpack_require__(/*! ./useMounted */ \"(ssr)/./node_modules/@restart/hooks/cjs/useMounted.js\"));\nexports.useMounted = _useMounted.default;\nvar _usePrevious = _interopRequireDefault(__webpack_require__(/*! ./usePrevious */ \"(ssr)/./node_modules/@restart/hooks/cjs/usePrevious.js\"));\nexports.usePrevious = _usePrevious.default;\nvar _useImage = _interopRequireDefault(__webpack_require__(/*! ./useImage */ \"(ssr)/./node_modules/@restart/hooks/cjs/useImage.js\"));\nexports.useImage = _useImage.default;\nvar _useResizeObserver = _interopRequireDefault(__webpack_require__(/*! ./useResizeObserver */ \"(ssr)/./node_modules/@restart/hooks/cjs/useResizeObserver.js\"));\nexports.useResizeObserver = _useResizeObserver.default;\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLGtCQUFrQixHQUFHO0FBQ3JCLElBQUlFLGtCQUFrQkMsdUJBQXVCQyxtQkFBT0EsQ0FBQyxtRkFBa0I7QUFDdkVKLHNCQUFzQixHQUFHRSxnQkFBZ0JJLE9BQU87QUFDaEQsSUFBSUMsbUJBQW1CSix1QkFBdUJDLG1CQUFPQSxDQUFDLHFGQUFtQjtBQUN6RUosdUJBQXVCLEdBQUdPLGlCQUFpQkQsT0FBTztBQUNsRCxJQUFJRyxvQkFBb0JOLHVCQUF1QkMsbUJBQU9BLENBQUMsdUZBQW9CO0FBQzNFSix3QkFBd0IsR0FBR1Msa0JBQWtCSCxPQUFPO0FBQ3BELElBQUlLLG9CQUFvQlIsdUJBQXVCQyxtQkFBT0EsQ0FBQyx1RkFBb0I7QUFDM0VKLHdCQUF3QixHQUFHVyxrQkFBa0JMLE9BQU87QUFDcEQsSUFBSU8scUJBQXFCVix1QkFBdUJDLG1CQUFPQSxDQUFDLHlGQUFxQjtBQUM3RUoseUJBQXlCLEdBQUdhLG1CQUFtQlAsT0FBTztBQUN0RCxJQUFJUyxlQUFlWix1QkFBdUJDLG1CQUFPQSxDQUFDLDZFQUFlO0FBQ2pFSixtQkFBbUIsR0FBR2UsYUFBYVQsT0FBTztBQUMxQyxJQUFJVyxrQkFBa0JkLHVCQUF1QkMsbUJBQU9BLENBQUMsbUZBQWtCO0FBQ3ZFSixzQkFBc0IsR0FBR2lCLGdCQUFnQlgsT0FBTztBQUNoRCxJQUFJYSxpQkFBaUJoQix1QkFBdUJDLG1CQUFPQSxDQUFDLGlGQUFpQjtBQUNyRUoscUJBQXFCLEdBQUdtQixlQUFlYixPQUFPO0FBQzlDLElBQUllLDBCQUEwQmxCLHVCQUF1QkMsbUJBQU9BLENBQUMsbUdBQTBCO0FBQ3ZGSiw4QkFBOEIsR0FBR3FCLHdCQUF3QmYsT0FBTztBQUNoRSxJQUFJaUIsY0FBY3BCLHVCQUF1QkMsbUJBQU9BLENBQUMsMkVBQWM7QUFDL0RKLGtCQUFrQixHQUFHdUIsWUFBWWpCLE9BQU87QUFDeEMsSUFBSW1CLGVBQWV0Qix1QkFBdUJDLG1CQUFPQSxDQUFDLDZFQUFlO0FBQ2pFSixtQkFBbUIsR0FBR3lCLGFBQWFuQixPQUFPO0FBQzFDLElBQUlxQixZQUFZeEIsdUJBQXVCQyxtQkFBT0EsQ0FBQyx1RUFBWTtBQUMzREosZ0JBQWdCLEdBQUcyQixVQUFVckIsT0FBTztBQUNwQyxJQUFJdUIscUJBQXFCMUIsdUJBQXVCQyxtQkFBT0EsQ0FBQyx5RkFBcUI7QUFDN0VKLHlCQUF5QixHQUFHNkIsbUJBQW1CdkIsT0FBTztBQUN0RCxTQUFTSCx1QkFBdUI0QixHQUFHO0lBQUksT0FBT0EsT0FBT0EsSUFBSTlCLFVBQVUsR0FBRzhCLE1BQU07UUFBRXpCLFNBQVN5QjtJQUFJO0FBQUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92ZW50YS1hdXRvcy8uL25vZGVfbW9kdWxlcy9AcmVzdGFydC9ob29rcy9janMvaW5kZXguanM/Zjk5NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbnZhciBfdXNlQ2FsbGJhY2tSZWYgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3VzZUNhbGxiYWNrUmVmXCIpKTtcbmV4cG9ydHMudXNlQ2FsbGJhY2tSZWYgPSBfdXNlQ2FsbGJhY2tSZWYuZGVmYXVsdDtcbnZhciBfdXNlQ29tbWl0dGVkUmVmID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi91c2VDb21taXR0ZWRSZWZcIikpO1xuZXhwb3J0cy51c2VDb21taXR0ZWRSZWYgPSBfdXNlQ29tbWl0dGVkUmVmLmRlZmF1bHQ7XG52YXIgX3VzZUV2ZW50Q2FsbGJhY2sgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3VzZUV2ZW50Q2FsbGJhY2tcIikpO1xuZXhwb3J0cy51c2VFdmVudENhbGxiYWNrID0gX3VzZUV2ZW50Q2FsbGJhY2suZGVmYXVsdDtcbnZhciBfdXNlRXZlbnRMaXN0ZW5lciA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdXNlRXZlbnRMaXN0ZW5lclwiKSk7XG5leHBvcnRzLnVzZUV2ZW50TGlzdGVuZXIgPSBfdXNlRXZlbnRMaXN0ZW5lci5kZWZhdWx0O1xudmFyIF91c2VHbG9iYWxMaXN0ZW5lciA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdXNlR2xvYmFsTGlzdGVuZXJcIikpO1xuZXhwb3J0cy51c2VHbG9iYWxMaXN0ZW5lciA9IF91c2VHbG9iYWxMaXN0ZW5lci5kZWZhdWx0O1xudmFyIF91c2VJbnRlcnZhbCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdXNlSW50ZXJ2YWxcIikpO1xuZXhwb3J0cy51c2VJbnRlcnZhbCA9IF91c2VJbnRlcnZhbC5kZWZhdWx0O1xudmFyIF91c2VSYWZJbnRlcnZhbCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdXNlUmFmSW50ZXJ2YWxcIikpO1xuZXhwb3J0cy51c2VSYWZJbnRlcnZhbCA9IF91c2VSYWZJbnRlcnZhbC5kZWZhdWx0O1xudmFyIF91c2VNZXJnZVN0YXRlID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi91c2VNZXJnZVN0YXRlXCIpKTtcbmV4cG9ydHMudXNlTWVyZ2VTdGF0ZSA9IF91c2VNZXJnZVN0YXRlLmRlZmF1bHQ7XG52YXIgX3VzZU1lcmdlU3RhdGVGcm9tUHJvcHMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3VzZU1lcmdlU3RhdGVGcm9tUHJvcHNcIikpO1xuZXhwb3J0cy51c2VNZXJnZVN0YXRlRnJvbVByb3BzID0gX3VzZU1lcmdlU3RhdGVGcm9tUHJvcHMuZGVmYXVsdDtcbnZhciBfdXNlTW91bnRlZCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdXNlTW91bnRlZFwiKSk7XG5leHBvcnRzLnVzZU1vdW50ZWQgPSBfdXNlTW91bnRlZC5kZWZhdWx0O1xudmFyIF91c2VQcmV2aW91cyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdXNlUHJldmlvdXNcIikpO1xuZXhwb3J0cy51c2VQcmV2aW91cyA9IF91c2VQcmV2aW91cy5kZWZhdWx0O1xudmFyIF91c2VJbWFnZSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdXNlSW1hZ2VcIikpO1xuZXhwb3J0cy51c2VJbWFnZSA9IF91c2VJbWFnZS5kZWZhdWx0O1xudmFyIF91c2VSZXNpemVPYnNlcnZlciA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdXNlUmVzaXplT2JzZXJ2ZXJcIikpO1xuZXhwb3J0cy51c2VSZXNpemVPYnNlcnZlciA9IF91c2VSZXNpemVPYnNlcnZlci5kZWZhdWx0O1xuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH0iXSwibmFtZXMiOlsiZXhwb3J0cyIsIl9fZXNNb2R1bGUiLCJfdXNlQ2FsbGJhY2tSZWYiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsInVzZUNhbGxiYWNrUmVmIiwiZGVmYXVsdCIsIl91c2VDb21taXR0ZWRSZWYiLCJ1c2VDb21taXR0ZWRSZWYiLCJfdXNlRXZlbnRDYWxsYmFjayIsInVzZUV2ZW50Q2FsbGJhY2siLCJfdXNlRXZlbnRMaXN0ZW5lciIsInVzZUV2ZW50TGlzdGVuZXIiLCJfdXNlR2xvYmFsTGlzdGVuZXIiLCJ1c2VHbG9iYWxMaXN0ZW5lciIsIl91c2VJbnRlcnZhbCIsInVzZUludGVydmFsIiwiX3VzZVJhZkludGVydmFsIiwidXNlUmFmSW50ZXJ2YWwiLCJfdXNlTWVyZ2VTdGF0ZSIsInVzZU1lcmdlU3RhdGUiLCJfdXNlTWVyZ2VTdGF0ZUZyb21Qcm9wcyIsInVzZU1lcmdlU3RhdGVGcm9tUHJvcHMiLCJfdXNlTW91bnRlZCIsInVzZU1vdW50ZWQiLCJfdXNlUHJldmlvdXMiLCJ1c2VQcmV2aW91cyIsIl91c2VJbWFnZSIsInVzZUltYWdlIiwiX3VzZVJlc2l6ZU9ic2VydmVyIiwidXNlUmVzaXplT2JzZXJ2ZXIiLCJvYmoiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/useCallbackRef.js":
/*!***********************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/useCallbackRef.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = useCallbackRef;\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */ function useCallbackRef() {\n    return (0, _react.useState)(null);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZUNhbGxiYWNrUmVmLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLGtCQUFrQixHQUFHO0FBQ3JCQSxrQkFBZSxHQUFHRztBQUNsQixJQUFJQyxTQUFTQyxtQkFBT0EsQ0FBQyx3R0FBTztBQUM1Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0F1QkMsR0FDRCxTQUFTRjtJQUNQLE9BQU8sQ0FBQyxHQUFHQyxPQUFPRSxRQUFRLEVBQUU7QUFDOUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92ZW50YS1hdXRvcy8uL25vZGVfbW9kdWxlcy9AcmVzdGFydC9ob29rcy9janMvdXNlQ2FsbGJhY2tSZWYuanM/YzEyOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IHVzZUNhbGxiYWNrUmVmO1xudmFyIF9yZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbi8qKlxuICogQSBjb252ZW5pZW5jZSBob29rIGFyb3VuZCBgdXNlU3RhdGVgIGRlc2lnbmVkIHRvIGJlIHBhaXJlZCB3aXRoXG4gKiB0aGUgY29tcG9uZW50IFtjYWxsYmFjayByZWZdKGh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9yZWZzLWFuZC10aGUtZG9tLmh0bWwjY2FsbGJhY2stcmVmcykgYXBpLlxuICogQ2FsbGJhY2sgcmVmcyBhcmUgdXNlZnVsIG92ZXIgYHVzZVJlZigpYCB3aGVuIHlvdSBuZWVkIHRvIHJlc3BvbmQgdG8gdGhlIHJlZiBiZWluZyBzZXRcbiAqIGluc3RlYWQgb2YgbGF6aWx5IGFjY2Vzc2luZyBpdCBpbiBhbiBlZmZlY3QuXG4gKlxuICogYGBgdHNcbiAqIGNvbnN0IFtlbGVtZW50LCBhdHRhY2hSZWZdID0gdXNlQ2FsbGJhY2tSZWY8SFRNTERpdkVsZW1lbnQ+KClcbiAqXG4gKiB1c2VFZmZlY3QoKCkgPT4ge1xuICogICBpZiAoIWVsZW1lbnQpIHJldHVyblxuICpcbiAqICAgY29uc3QgY2FsZW5kYXIgPSBuZXcgRnVsbENhbGVuZGFyLkNhbGVuZGFyKGVsZW1lbnQpXG4gKlxuICogICByZXR1cm4gKCkgPT4ge1xuICogICAgIGNhbGVuZGFyLmRlc3Ryb3koKVxuICogICB9XG4gKiB9LCBbZWxlbWVudF0pXG4gKlxuICogcmV0dXJuIDxkaXYgcmVmPXthdHRhY2hSZWZ9IC8+XG4gKiBgYGBcbiAqXG4gKiBAY2F0ZWdvcnkgcmVmc1xuICovXG5mdW5jdGlvbiB1c2VDYWxsYmFja1JlZigpIHtcbiAgcmV0dXJuICgwLCBfcmVhY3QudXNlU3RhdGUpKG51bGwpO1xufSJdLCJuYW1lcyI6WyJleHBvcnRzIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJ1c2VDYWxsYmFja1JlZiIsIl9yZWFjdCIsInJlcXVpcmUiLCJ1c2VTdGF0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/useCallbackRef.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/useCommittedRef.js":
/*!************************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/useCommittedRef.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded before being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */ function useCommittedRef(value) {\n    const ref = (0, _react.useRef)(value);\n    (0, _react.useEffect)(()=>{\n        ref.current = value;\n    }, [\n        value\n    ]);\n    return ref;\n}\nvar _default = useCommittedRef;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZUNvbW1pdHRlZFJlZi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSxrQkFBa0IsR0FBRztBQUNyQkEsa0JBQWUsR0FBRyxLQUFLO0FBQ3ZCLElBQUlHLFNBQVNDLG1CQUFPQSxDQUFDLHdHQUFPO0FBQzVCOzs7Ozs7OztDQVFDLEdBQ0QsU0FBU0MsZ0JBQWdCQyxLQUFLO0lBQzVCLE1BQU1DLE1BQU0sQ0FBQyxHQUFHSixPQUFPSyxNQUFNLEVBQUVGO0lBQzlCLElBQUdILE9BQU9NLFNBQVMsRUFBRTtRQUNwQkYsSUFBSUcsT0FBTyxHQUFHSjtJQUNoQixHQUFHO1FBQUNBO0tBQU07SUFDVixPQUFPQztBQUNUO0FBQ0EsSUFBSUksV0FBV047QUFDZkwsa0JBQWUsR0FBR1ciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92ZW50YS1hdXRvcy8uL25vZGVfbW9kdWxlcy9AcmVzdGFydC9ob29rcy9janMvdXNlQ29tbWl0dGVkUmVmLmpzP2Q1YjciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgX3JlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xuLyoqXG4gKiBDcmVhdGVzIGEgYFJlZmAgd2hvc2UgdmFsdWUgaXMgdXBkYXRlZCBpbiBhbiBlZmZlY3QsIGVuc3VyaW5nIHRoZSBtb3N0IHJlY2VudFxuICogdmFsdWUgaXMgdGhlIG9uZSByZW5kZXJlZCB3aXRoLiBHZW5lcmFsbHkgb25seSByZXF1aXJlZCBmb3IgQ29uY3VycmVudCBtb2RlIHVzYWdlXG4gKiB3aGVyZSBwcmV2aW91cyB3b3JrIGluIGByZW5kZXIoKWAgbWF5IGJlIGRpc2NhcmRlZCBiZWZvcmUgYmVpbmcgdXNlZC5cbiAqXG4gKiBUaGlzIGlzIHNhZmUgdG8gYWNjZXNzIGluIGFuIGV2ZW50IGhhbmRsZXIuXG4gKlxuICogQHBhcmFtIHZhbHVlIFRoZSBgUmVmYCB2YWx1ZVxuICovXG5mdW5jdGlvbiB1c2VDb21taXR0ZWRSZWYodmFsdWUpIHtcbiAgY29uc3QgcmVmID0gKDAsIF9yZWFjdC51c2VSZWYpKHZhbHVlKTtcbiAgKDAsIF9yZWFjdC51c2VFZmZlY3QpKCgpID0+IHtcbiAgICByZWYuY3VycmVudCA9IHZhbHVlO1xuICB9LCBbdmFsdWVdKTtcbiAgcmV0dXJuIHJlZjtcbn1cbnZhciBfZGVmYXVsdCA9IHVzZUNvbW1pdHRlZFJlZjtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6WyJleHBvcnRzIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJfcmVhY3QiLCJyZXF1aXJlIiwidXNlQ29tbWl0dGVkUmVmIiwidmFsdWUiLCJyZWYiLCJ1c2VSZWYiLCJ1c2VFZmZlY3QiLCJjdXJyZW50IiwiX2RlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/useCommittedRef.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/useEventCallback.js":
/*!*************************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/useEventCallback.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = useEventCallback;\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar _useCommittedRef = _interopRequireDefault(__webpack_require__(/*! ./useCommittedRef */ \"(ssr)/./node_modules/@restart/hooks/cjs/useCommittedRef.js\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction useEventCallback(fn) {\n    const ref = (0, _useCommittedRef.default)(fn);\n    return (0, _react.useCallback)(function(...args) {\n        return ref.current && ref.current(...args);\n    }, [\n        ref\n    ]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZUV2ZW50Q2FsbGJhY2suanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsa0JBQWtCLEdBQUc7QUFDckJBLGtCQUFlLEdBQUdHO0FBQ2xCLElBQUlDLFNBQVNDLG1CQUFPQSxDQUFDLHdHQUFPO0FBQzVCLElBQUlDLG1CQUFtQkMsdUJBQXVCRixtQkFBT0EsQ0FBQyxxRkFBbUI7QUFDekUsU0FBU0UsdUJBQXVCQyxHQUFHO0lBQUksT0FBT0EsT0FBT0EsSUFBSVAsVUFBVSxHQUFHTyxNQUFNO1FBQUVOLFNBQVNNO0lBQUk7QUFBRztBQUM5RixTQUFTTCxpQkFBaUJNLEVBQUU7SUFDMUIsTUFBTUMsTUFBTSxDQUFDLEdBQUdKLGlCQUFpQkosT0FBTyxFQUFFTztJQUMxQyxPQUFPLENBQUMsR0FBR0wsT0FBT08sV0FBVyxFQUFFLFNBQVUsR0FBR0MsSUFBSTtRQUM5QyxPQUFPRixJQUFJRyxPQUFPLElBQUlILElBQUlHLE9BQU8sSUFBSUQ7SUFDdkMsR0FBRztRQUFDRjtLQUFJO0FBQ1YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92ZW50YS1hdXRvcy8uL25vZGVfbW9kdWxlcy9AcmVzdGFydC9ob29rcy9janMvdXNlRXZlbnRDYWxsYmFjay5qcz9kOTcyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5kZWZhdWx0ID0gdXNlRXZlbnRDYWxsYmFjaztcbnZhciBfcmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG52YXIgX3VzZUNvbW1pdHRlZFJlZiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdXNlQ29tbWl0dGVkUmVmXCIpKTtcbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5mdW5jdGlvbiB1c2VFdmVudENhbGxiYWNrKGZuKSB7XG4gIGNvbnN0IHJlZiA9ICgwLCBfdXNlQ29tbWl0dGVkUmVmLmRlZmF1bHQpKGZuKTtcbiAgcmV0dXJuICgwLCBfcmVhY3QudXNlQ2FsbGJhY2spKGZ1bmN0aW9uICguLi5hcmdzKSB7XG4gICAgcmV0dXJuIHJlZi5jdXJyZW50ICYmIHJlZi5jdXJyZW50KC4uLmFyZ3MpO1xuICB9LCBbcmVmXSk7XG59Il0sIm5hbWVzIjpbImV4cG9ydHMiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsInVzZUV2ZW50Q2FsbGJhY2siLCJfcmVhY3QiLCJyZXF1aXJlIiwiX3VzZUNvbW1pdHRlZFJlZiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJvYmoiLCJmbiIsInJlZiIsInVzZUNhbGxiYWNrIiwiYXJncyIsImN1cnJlbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/useEventCallback.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/useEventListener.js":
/*!*************************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/useEventListener.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = useEventListener;\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar _useEventCallback = _interopRequireDefault(__webpack_require__(/*! ./useEventCallback */ \"(ssr)/./node_modules/@restart/hooks/cjs/useEventCallback.js\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n/**\n * Attaches an event handler outside directly to specified DOM element\n * bypassing the react synthetic event system.\n *\n * @param element The target to listen for events on\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */ function useEventListener(eventTarget, event, listener, capture = false) {\n    const handler = (0, _useEventCallback.default)(listener);\n    (0, _react.useEffect)(()=>{\n        const target = typeof eventTarget === \"function\" ? eventTarget() : eventTarget;\n        target.addEventListener(event, handler, capture);\n        return ()=>target.removeEventListener(event, handler, capture);\n    }, [\n        eventTarget\n    ]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZUV2ZW50TGlzdGVuZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsa0JBQWtCLEdBQUc7QUFDckJBLGtCQUFlLEdBQUdHO0FBQ2xCLElBQUlDLFNBQVNDLG1CQUFPQSxDQUFDLHdHQUFPO0FBQzVCLElBQUlDLG9CQUFvQkMsdUJBQXVCRixtQkFBT0EsQ0FBQyx1RkFBb0I7QUFDM0UsU0FBU0UsdUJBQXVCQyxHQUFHO0lBQUksT0FBT0EsT0FBT0EsSUFBSVAsVUFBVSxHQUFHTyxNQUFNO1FBQUVOLFNBQVNNO0lBQUk7QUFBRztBQUM5Rjs7Ozs7Ozs7Q0FRQyxHQUNELFNBQVNMLGlCQUFpQk0sV0FBVyxFQUFFQyxLQUFLLEVBQUVDLFFBQVEsRUFBRUMsVUFBVSxLQUFLO0lBQ3JFLE1BQU1DLFVBQVUsQ0FBQyxHQUFHUCxrQkFBa0JKLE9BQU8sRUFBRVM7SUFDOUMsSUFBR1AsT0FBT1UsU0FBUyxFQUFFO1FBQ3BCLE1BQU1DLFNBQVMsT0FBT04sZ0JBQWdCLGFBQWFBLGdCQUFnQkE7UUFDbkVNLE9BQU9DLGdCQUFnQixDQUFDTixPQUFPRyxTQUFTRDtRQUN4QyxPQUFPLElBQU1HLE9BQU9FLG1CQUFtQixDQUFDUCxPQUFPRyxTQUFTRDtJQUMxRCxHQUFHO1FBQUNIO0tBQVk7QUFDbEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92ZW50YS1hdXRvcy8uL25vZGVfbW9kdWxlcy9AcmVzdGFydC9ob29rcy9janMvdXNlRXZlbnRMaXN0ZW5lci5qcz8wYTI1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5kZWZhdWx0ID0gdXNlRXZlbnRMaXN0ZW5lcjtcbnZhciBfcmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG52YXIgX3VzZUV2ZW50Q2FsbGJhY2sgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3VzZUV2ZW50Q2FsbGJhY2tcIikpO1xuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cbi8qKlxuICogQXR0YWNoZXMgYW4gZXZlbnQgaGFuZGxlciBvdXRzaWRlIGRpcmVjdGx5IHRvIHNwZWNpZmllZCBET00gZWxlbWVudFxuICogYnlwYXNzaW5nIHRoZSByZWFjdCBzeW50aGV0aWMgZXZlbnQgc3lzdGVtLlxuICpcbiAqIEBwYXJhbSBlbGVtZW50IFRoZSB0YXJnZXQgdG8gbGlzdGVuIGZvciBldmVudHMgb25cbiAqIEBwYXJhbSBldmVudCBUaGUgRE9NIGV2ZW50IG5hbWVcbiAqIEBwYXJhbSBoYW5kbGVyIEFuIGV2ZW50IGhhbmRsZXJcbiAqIEBwYXJhbSBjYXB0dXJlIFdoZXRoZXIgb3Igbm90IHRvIGxpc3RlbiBkdXJpbmcgdGhlIGNhcHR1cmUgZXZlbnQgcGhhc2VcbiAqL1xuZnVuY3Rpb24gdXNlRXZlbnRMaXN0ZW5lcihldmVudFRhcmdldCwgZXZlbnQsIGxpc3RlbmVyLCBjYXB0dXJlID0gZmFsc2UpIHtcbiAgY29uc3QgaGFuZGxlciA9ICgwLCBfdXNlRXZlbnRDYWxsYmFjay5kZWZhdWx0KShsaXN0ZW5lcik7XG4gICgwLCBfcmVhY3QudXNlRWZmZWN0KSgoKSA9PiB7XG4gICAgY29uc3QgdGFyZ2V0ID0gdHlwZW9mIGV2ZW50VGFyZ2V0ID09PSAnZnVuY3Rpb24nID8gZXZlbnRUYXJnZXQoKSA6IGV2ZW50VGFyZ2V0O1xuICAgIHRhcmdldC5hZGRFdmVudExpc3RlbmVyKGV2ZW50LCBoYW5kbGVyLCBjYXB0dXJlKTtcbiAgICByZXR1cm4gKCkgPT4gdGFyZ2V0LnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnQsIGhhbmRsZXIsIGNhcHR1cmUpO1xuICB9LCBbZXZlbnRUYXJnZXRdKTtcbn0iXSwibmFtZXMiOlsiZXhwb3J0cyIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwidXNlRXZlbnRMaXN0ZW5lciIsIl9yZWFjdCIsInJlcXVpcmUiLCJfdXNlRXZlbnRDYWxsYmFjayIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJvYmoiLCJldmVudFRhcmdldCIsImV2ZW50IiwibGlzdGVuZXIiLCJjYXB0dXJlIiwiaGFuZGxlciIsInVzZUVmZmVjdCIsInRhcmdldCIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/useEventListener.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/useForceUpdate.js":
/*!***********************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/useForceUpdate.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = useForceUpdate;\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */ function useForceUpdate() {\n    // The toggling state value is designed to defeat React optimizations for skipping\n    // updates when they are strictly equal to the last state value\n    const [, dispatch] = (0, _react.useReducer)((state)=>!state, false);\n    return dispatch;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZUZvcmNlVXBkYXRlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLGtCQUFrQixHQUFHO0FBQ3JCQSxrQkFBZSxHQUFHRztBQUNsQixJQUFJQyxTQUFTQyxtQkFBT0EsQ0FBQyx3R0FBTztBQUM1Qjs7Ozs7Ozs7Ozs7Ozs7O0NBZUMsR0FDRCxTQUFTRjtJQUNQLGtGQUFrRjtJQUNsRiwrREFBK0Q7SUFDL0QsTUFBTSxHQUFHRyxTQUFTLEdBQUcsQ0FBQyxHQUFHRixPQUFPRyxVQUFVLEVBQUVDLENBQUFBLFFBQVMsQ0FBQ0EsT0FBTztJQUM3RCxPQUFPRjtBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdmVudGEtYXV0b3MvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZUZvcmNlVXBkYXRlLmpzPzczNmIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSB1c2VGb3JjZVVwZGF0ZTtcbnZhciBfcmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG4vKipcbiAqIFJldHVybnMgYSBmdW5jdGlvbiB0aGF0IHRyaWdnZXJzIGEgY29tcG9uZW50IHVwZGF0ZS4gdGhlIGhvb2sgZXF1aXZhbGVudCB0b1xuICogYHRoaXMuZm9yY2VVcGRhdGUoKWAgaW4gYSBjbGFzcyBjb21wb25lbnQuIEluIG1vc3QgY2FzZXMgdXNpbmcgYSBzdGF0ZSB2YWx1ZSBkaXJlY3RseVxuICogaXMgcHJlZmVyYWJsZSBidXQgbWF5IGJlIHJlcXVpcmVkIGluIHNvbWUgYWR2YW5jZWQgdXNhZ2VzIG9mIHJlZnMgZm9yIGludGVyb3Agb3JcbiAqIHdoZW4gZGlyZWN0IERPTSBtYW5pcHVsYXRpb24gaXMgcmVxdWlyZWQuXG4gKlxuICogYGBgdHNcbiAqIGNvbnN0IGZvcmNlVXBkYXRlID0gdXNlRm9yY2VVcGRhdGUoKTtcbiAqXG4gKiBjb25zdCB1cGRhdGVPbkNsaWNrID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICogIGZvcmNlVXBkYXRlKClcbiAqIH0sIFtmb3JjZVVwZGF0ZV0pXG4gKlxuICogcmV0dXJuIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIG9uQ2xpY2s9e3VwZGF0ZU9uQ2xpY2t9PkhpIHRoZXJlPC9idXR0b24+XG4gKiBgYGBcbiAqL1xuZnVuY3Rpb24gdXNlRm9yY2VVcGRhdGUoKSB7XG4gIC8vIFRoZSB0b2dnbGluZyBzdGF0ZSB2YWx1ZSBpcyBkZXNpZ25lZCB0byBkZWZlYXQgUmVhY3Qgb3B0aW1pemF0aW9ucyBmb3Igc2tpcHBpbmdcbiAgLy8gdXBkYXRlcyB3aGVuIHRoZXkgYXJlIHN0cmljdGx5IGVxdWFsIHRvIHRoZSBsYXN0IHN0YXRlIHZhbHVlXG4gIGNvbnN0IFssIGRpc3BhdGNoXSA9ICgwLCBfcmVhY3QudXNlUmVkdWNlcikoc3RhdGUgPT4gIXN0YXRlLCBmYWxzZSk7XG4gIHJldHVybiBkaXNwYXRjaDtcbn0iXSwibmFtZXMiOlsiZXhwb3J0cyIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwidXNlRm9yY2VVcGRhdGUiLCJfcmVhY3QiLCJyZXF1aXJlIiwiZGlzcGF0Y2giLCJ1c2VSZWR1Y2VyIiwic3RhdGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/useForceUpdate.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/useGlobalListener.js":
/*!**************************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/useGlobalListener.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = useGlobalListener;\nvar _useEventListener = _interopRequireDefault(__webpack_require__(/*! ./useEventListener */ \"(ssr)/./node_modules/@restart/hooks/cjs/useEventListener.js\"));\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n/**\n * Attaches an event handler outside directly to the `document`,\n * bypassing the react synthetic event system.\n *\n * ```ts\n * useGlobalListener('keydown', (event) => {\n *  console.log(event.key)\n * })\n * ```\n *\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */ function useGlobalListener(event, handler, capture = false) {\n    const documentTarget = (0, _react.useCallback)(()=>document, []);\n    return (0, _useEventListener.default)(documentTarget, event, handler, capture);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZUdsb2JhbExpc3RlbmVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLGtCQUFrQixHQUFHO0FBQ3JCQSxrQkFBZSxHQUFHRztBQUNsQixJQUFJQyxvQkFBb0JDLHVCQUF1QkMsbUJBQU9BLENBQUMsdUZBQW9CO0FBQzNFLElBQUlDLFNBQVNELG1CQUFPQSxDQUFDLHdHQUFPO0FBQzVCLFNBQVNELHVCQUF1QkcsR0FBRztJQUFJLE9BQU9BLE9BQU9BLElBQUlQLFVBQVUsR0FBR08sTUFBTTtRQUFFTixTQUFTTTtJQUFJO0FBQUc7QUFDOUY7Ozs7Ozs7Ozs7Ozs7Q0FhQyxHQUNELFNBQVNMLGtCQUFrQk0sS0FBSyxFQUFFQyxPQUFPLEVBQUVDLFVBQVUsS0FBSztJQUN4RCxNQUFNQyxpQkFBaUIsQ0FBQyxHQUFHTCxPQUFPTSxXQUFXLEVBQUUsSUFBTUMsVUFBVSxFQUFFO0lBQ2pFLE9BQU8sQ0FBQyxHQUFHVixrQkFBa0JGLE9BQU8sRUFBRVUsZ0JBQWdCSCxPQUFPQyxTQUFTQztBQUN4RSIsInNvdXJjZXMiOlsid2VicGFjazovL3ZlbnRhLWF1dG9zLy4vbm9kZV9tb2R1bGVzL0ByZXN0YXJ0L2hvb2tzL2Nqcy91c2VHbG9iYWxMaXN0ZW5lci5qcz9jZTA2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5kZWZhdWx0ID0gdXNlR2xvYmFsTGlzdGVuZXI7XG52YXIgX3VzZUV2ZW50TGlzdGVuZXIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3VzZUV2ZW50TGlzdGVuZXJcIikpO1xudmFyIF9yZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG4vKipcbiAqIEF0dGFjaGVzIGFuIGV2ZW50IGhhbmRsZXIgb3V0c2lkZSBkaXJlY3RseSB0byB0aGUgYGRvY3VtZW50YCxcbiAqIGJ5cGFzc2luZyB0aGUgcmVhY3Qgc3ludGhldGljIGV2ZW50IHN5c3RlbS5cbiAqXG4gKiBgYGB0c1xuICogdXNlR2xvYmFsTGlzdGVuZXIoJ2tleWRvd24nLCAoZXZlbnQpID0+IHtcbiAqICBjb25zb2xlLmxvZyhldmVudC5rZXkpXG4gKiB9KVxuICogYGBgXG4gKlxuICogQHBhcmFtIGV2ZW50IFRoZSBET00gZXZlbnQgbmFtZVxuICogQHBhcmFtIGhhbmRsZXIgQW4gZXZlbnQgaGFuZGxlclxuICogQHBhcmFtIGNhcHR1cmUgV2hldGhlciBvciBub3QgdG8gbGlzdGVuIGR1cmluZyB0aGUgY2FwdHVyZSBldmVudCBwaGFzZVxuICovXG5mdW5jdGlvbiB1c2VHbG9iYWxMaXN0ZW5lcihldmVudCwgaGFuZGxlciwgY2FwdHVyZSA9IGZhbHNlKSB7XG4gIGNvbnN0IGRvY3VtZW50VGFyZ2V0ID0gKDAsIF9yZWFjdC51c2VDYWxsYmFjaykoKCkgPT4gZG9jdW1lbnQsIFtdKTtcbiAgcmV0dXJuICgwLCBfdXNlRXZlbnRMaXN0ZW5lci5kZWZhdWx0KShkb2N1bWVudFRhcmdldCwgZXZlbnQsIGhhbmRsZXIsIGNhcHR1cmUpO1xufSJdLCJuYW1lcyI6WyJleHBvcnRzIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJ1c2VHbG9iYWxMaXN0ZW5lciIsIl91c2VFdmVudExpc3RlbmVyIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfcmVhY3QiLCJvYmoiLCJldmVudCIsImhhbmRsZXIiLCJjYXB0dXJlIiwiZG9jdW1lbnRUYXJnZXQiLCJ1c2VDYWxsYmFjayIsImRvY3VtZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/useGlobalListener.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/useImage.js":
/*!*****************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/useImage.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = useImage;\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/**\n * Fetch and load an image for programatic use such as in a `<canvas>` element.\n *\n * @param imageOrUrl The `HtmlImageElement` or image url to load\n * @param crossOrigin The `crossorigin` attribute to set\n *\n * ```ts\n * const { image, error } = useImage('/static/kittens.png')\n * const ref = useRef<HTMLCanvasElement>()\n *\n * useEffect(() => {\n *   const ctx = ref.current.getContext('2d')\n *\n *   if (image) {\n *     ctx.drawImage(image, 0, 0)\n *   }\n * }, [ref, image])\n *\n * return (\n *   <>\n *     {error && \"there was a problem loading the image\"}\n *     <canvas ref={ref} />\n *   </>\n * ```\n */ function useImage(imageOrUrl, crossOrigin) {\n    const [state, setState] = (0, _react.useState)({\n        image: null,\n        error: null\n    });\n    (0, _react.useEffect)(()=>{\n        if (!imageOrUrl) return undefined;\n        let image;\n        if (typeof imageOrUrl === \"string\") {\n            image = new Image();\n            if (crossOrigin) image.crossOrigin = crossOrigin;\n            image.src = imageOrUrl;\n        } else {\n            image = imageOrUrl;\n            if (image.complete && image.naturalHeight > 0) {\n                setState({\n                    image,\n                    error: null\n                });\n                return;\n            }\n        }\n        function onLoad() {\n            setState({\n                image,\n                error: null\n            });\n        }\n        function onError(error) {\n            setState({\n                image,\n                error\n            });\n        }\n        image.addEventListener(\"load\", onLoad);\n        image.addEventListener(\"error\", onError);\n        return ()=>{\n            image.removeEventListener(\"load\", onLoad);\n            image.removeEventListener(\"error\", onError);\n        };\n    }, [\n        imageOrUrl,\n        crossOrigin\n    ]);\n    return state;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZUltYWdlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLGtCQUFrQixHQUFHO0FBQ3JCQSxrQkFBZSxHQUFHRztBQUNsQixJQUFJQyxTQUFTQyxtQkFBT0EsQ0FBQyx3R0FBTztBQUM1Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBd0JDLEdBQ0QsU0FBU0YsU0FBU0csVUFBVSxFQUFFQyxXQUFXO0lBQ3ZDLE1BQU0sQ0FBQ0MsT0FBT0MsU0FBUyxHQUFHLENBQUMsR0FBR0wsT0FBT00sUUFBUSxFQUFFO1FBQzdDQyxPQUFPO1FBQ1BDLE9BQU87SUFDVDtJQUNDLElBQUdSLE9BQU9TLFNBQVMsRUFBRTtRQUNwQixJQUFJLENBQUNQLFlBQVksT0FBT1E7UUFDeEIsSUFBSUg7UUFDSixJQUFJLE9BQU9MLGVBQWUsVUFBVTtZQUNsQ0ssUUFBUSxJQUFJSTtZQUNaLElBQUlSLGFBQWFJLE1BQU1KLFdBQVcsR0FBR0E7WUFDckNJLE1BQU1LLEdBQUcsR0FBR1Y7UUFDZCxPQUFPO1lBQ0xLLFFBQVFMO1lBQ1IsSUFBSUssTUFBTU0sUUFBUSxJQUFJTixNQUFNTyxhQUFhLEdBQUcsR0FBRztnQkFDN0NULFNBQVM7b0JBQ1BFO29CQUNBQyxPQUFPO2dCQUNUO2dCQUNBO1lBQ0Y7UUFDRjtRQUNBLFNBQVNPO1lBQ1BWLFNBQVM7Z0JBQ1BFO2dCQUNBQyxPQUFPO1lBQ1Q7UUFDRjtRQUNBLFNBQVNRLFFBQVFSLEtBQUs7WUFDcEJILFNBQVM7Z0JBQ1BFO2dCQUNBQztZQUNGO1FBQ0Y7UUFDQUQsTUFBTVUsZ0JBQWdCLENBQUMsUUFBUUY7UUFDL0JSLE1BQU1VLGdCQUFnQixDQUFDLFNBQVNEO1FBQ2hDLE9BQU87WUFDTFQsTUFBTVcsbUJBQW1CLENBQUMsUUFBUUg7WUFDbENSLE1BQU1XLG1CQUFtQixDQUFDLFNBQVNGO1FBQ3JDO0lBQ0YsR0FBRztRQUFDZDtRQUFZQztLQUFZO0lBQzVCLE9BQU9DO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92ZW50YS1hdXRvcy8uL25vZGVfbW9kdWxlcy9AcmVzdGFydC9ob29rcy9janMvdXNlSW1hZ2UuanM/NDIxZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IHVzZUltYWdlO1xudmFyIF9yZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbi8qKlxuICogRmV0Y2ggYW5kIGxvYWQgYW4gaW1hZ2UgZm9yIHByb2dyYW1hdGljIHVzZSBzdWNoIGFzIGluIGEgYDxjYW52YXM+YCBlbGVtZW50LlxuICpcbiAqIEBwYXJhbSBpbWFnZU9yVXJsIFRoZSBgSHRtbEltYWdlRWxlbWVudGAgb3IgaW1hZ2UgdXJsIHRvIGxvYWRcbiAqIEBwYXJhbSBjcm9zc09yaWdpbiBUaGUgYGNyb3Nzb3JpZ2luYCBhdHRyaWJ1dGUgdG8gc2V0XG4gKlxuICogYGBgdHNcbiAqIGNvbnN0IHsgaW1hZ2UsIGVycm9yIH0gPSB1c2VJbWFnZSgnL3N0YXRpYy9raXR0ZW5zLnBuZycpXG4gKiBjb25zdCByZWYgPSB1c2VSZWY8SFRNTENhbnZhc0VsZW1lbnQ+KClcbiAqXG4gKiB1c2VFZmZlY3QoKCkgPT4ge1xuICogICBjb25zdCBjdHggPSByZWYuY3VycmVudC5nZXRDb250ZXh0KCcyZCcpXG4gKlxuICogICBpZiAoaW1hZ2UpIHtcbiAqICAgICBjdHguZHJhd0ltYWdlKGltYWdlLCAwLCAwKVxuICogICB9XG4gKiB9LCBbcmVmLCBpbWFnZV0pXG4gKlxuICogcmV0dXJuIChcbiAqICAgPD5cbiAqICAgICB7ZXJyb3IgJiYgXCJ0aGVyZSB3YXMgYSBwcm9ibGVtIGxvYWRpbmcgdGhlIGltYWdlXCJ9XG4gKiAgICAgPGNhbnZhcyByZWY9e3JlZn0gLz5cbiAqICAgPC8+XG4gKiBgYGBcbiAqL1xuZnVuY3Rpb24gdXNlSW1hZ2UoaW1hZ2VPclVybCwgY3Jvc3NPcmlnaW4pIHtcbiAgY29uc3QgW3N0YXRlLCBzZXRTdGF0ZV0gPSAoMCwgX3JlYWN0LnVzZVN0YXRlKSh7XG4gICAgaW1hZ2U6IG51bGwsXG4gICAgZXJyb3I6IG51bGxcbiAgfSk7XG4gICgwLCBfcmVhY3QudXNlRWZmZWN0KSgoKSA9PiB7XG4gICAgaWYgKCFpbWFnZU9yVXJsKSByZXR1cm4gdW5kZWZpbmVkO1xuICAgIGxldCBpbWFnZTtcbiAgICBpZiAodHlwZW9mIGltYWdlT3JVcmwgPT09ICdzdHJpbmcnKSB7XG4gICAgICBpbWFnZSA9IG5ldyBJbWFnZSgpO1xuICAgICAgaWYgKGNyb3NzT3JpZ2luKSBpbWFnZS5jcm9zc09yaWdpbiA9IGNyb3NzT3JpZ2luO1xuICAgICAgaW1hZ2Uuc3JjID0gaW1hZ2VPclVybDtcbiAgICB9IGVsc2Uge1xuICAgICAgaW1hZ2UgPSBpbWFnZU9yVXJsO1xuICAgICAgaWYgKGltYWdlLmNvbXBsZXRlICYmIGltYWdlLm5hdHVyYWxIZWlnaHQgPiAwKSB7XG4gICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICBpbWFnZSxcbiAgICAgICAgICBlcnJvcjogbnVsbFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBvbkxvYWQoKSB7XG4gICAgICBzZXRTdGF0ZSh7XG4gICAgICAgIGltYWdlLFxuICAgICAgICBlcnJvcjogbnVsbFxuICAgICAgfSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIG9uRXJyb3IoZXJyb3IpIHtcbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgaW1hZ2UsXG4gICAgICAgIGVycm9yXG4gICAgICB9KTtcbiAgICB9XG4gICAgaW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIG9uTG9hZCk7XG4gICAgaW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcignZXJyb3InLCBvbkVycm9yKTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgaW1hZ2UucmVtb3ZlRXZlbnRMaXN0ZW5lcignbG9hZCcsIG9uTG9hZCk7XG4gICAgICBpbWFnZS5yZW1vdmVFdmVudExpc3RlbmVyKCdlcnJvcicsIG9uRXJyb3IpO1xuICAgIH07XG4gIH0sIFtpbWFnZU9yVXJsLCBjcm9zc09yaWdpbl0pO1xuICByZXR1cm4gc3RhdGU7XG59Il0sIm5hbWVzIjpbImV4cG9ydHMiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsInVzZUltYWdlIiwiX3JlYWN0IiwicmVxdWlyZSIsImltYWdlT3JVcmwiLCJjcm9zc09yaWdpbiIsInN0YXRlIiwic2V0U3RhdGUiLCJ1c2VTdGF0ZSIsImltYWdlIiwiZXJyb3IiLCJ1c2VFZmZlY3QiLCJ1bmRlZmluZWQiLCJJbWFnZSIsInNyYyIsImNvbXBsZXRlIiwibmF0dXJhbEhlaWdodCIsIm9uTG9hZCIsIm9uRXJyb3IiLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/useImage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/useInterval.js":
/*!********************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/useInterval.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar _useCommittedRef = _interopRequireDefault(__webpack_require__(/*! ./useCommittedRef */ \"(ssr)/./node_modules/@restart/hooks/cjs/useCommittedRef.js\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n/**\n * Creates a `setInterval` that is properly cleaned up when a component unmounted\n *\n * ```tsx\n *  function Timer() {\n *    const [timer, setTimer] = useState(0)\n *    useInterval(() => setTimer(i => i + 1), 1000)\n *\n *    return <span>{timer} seconds past</span>\n *  }\n * ```\n *\n * @param fn an function run on each interval\n * @param ms The milliseconds duration of the interval\n */ /**\n * Creates a pausable `setInterval` that is properly cleaned up when a component unmounted\n *\n * ```tsx\n *  const [paused, setPaused] = useState(false)\n *  const [timer, setTimer] = useState(0)\n *\n *  useInterval(() => setTimer(i => i + 1), 1000, paused)\n *\n *  return (\n *    <span>\n *      {timer} seconds past\n *\n *      <button onClick={() => setPaused(p => !p)}>{paused ? 'Play' : 'Pause' }</button>\n *    </span>\n * )\n * ```\n *\n * @param fn an function run on each interval\n * @param ms The milliseconds duration of the interval\n * @param paused Whether or not the interval is currently running\n */ /**\n * Creates a pausable `setInterval` that _fires_ immediately and is\n * properly cleaned up when a component unmounted\n *\n * ```tsx\n *  const [timer, setTimer] = useState(-1)\n *  useInterval(() => setTimer(i => i + 1), 1000, false, true)\n *\n *  // will update to 0 on the first effect\n *  return <span>{timer} seconds past</span>\n * ```\n *\n * @param fn an function run on each interval\n * @param ms The milliseconds duration of the interval\n * @param paused Whether or not the interval is currently running\n * @param runImmediately Whether to run the function immediately on mount or unpause\n * rather than waiting for the first interval to elapse\n *\n\n */ function useInterval(fn, ms, paused = false, runImmediately = false) {\n    let handle;\n    const fnRef = (0, _useCommittedRef.default)(fn);\n    // this ref is necessary b/c useEffect will sometimes miss a paused toggle\n    // orphaning a setTimeout chain in the aether, so relying on it's refresh logic is not reliable.\n    const pausedRef = (0, _useCommittedRef.default)(paused);\n    const tick = ()=>{\n        if (pausedRef.current) return;\n        fnRef.current();\n        schedule(); // eslint-disable-line no-use-before-define\n    };\n    const schedule = ()=>{\n        clearTimeout(handle);\n        handle = setTimeout(tick, ms);\n    };\n    (0, _react.useEffect)(()=>{\n        if (runImmediately) {\n            tick();\n        } else {\n            schedule();\n        }\n        return ()=>clearTimeout(handle);\n    }, [\n        paused,\n        runImmediately\n    ]);\n}\nvar _default = useInterval;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZUludGVydmFsLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLGtCQUFrQixHQUFHO0FBQ3JCQSxrQkFBZSxHQUFHLEtBQUs7QUFDdkIsSUFBSUcsU0FBU0MsbUJBQU9BLENBQUMsd0dBQU87QUFDNUIsSUFBSUMsbUJBQW1CQyx1QkFBdUJGLG1CQUFPQSxDQUFDLHFGQUFtQjtBQUN6RSxTQUFTRSx1QkFBdUJDLEdBQUc7SUFBSSxPQUFPQSxPQUFPQSxJQUFJTixVQUFVLEdBQUdNLE1BQU07UUFBRUwsU0FBU0s7SUFBSTtBQUFHO0FBQzlGOzs7Ozs7Ozs7Ozs7OztDQWNDLEdBRUQ7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQXFCQyxHQUVEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBbUJDLEdBRUQsU0FBU0MsWUFBWUMsRUFBRSxFQUFFQyxFQUFFLEVBQUVDLFNBQVMsS0FBSyxFQUFFQyxpQkFBaUIsS0FBSztJQUNqRSxJQUFJQztJQUNKLE1BQU1DLFFBQVEsQ0FBQyxHQUFHVCxpQkFBaUJILE9BQU8sRUFBRU87SUFDNUMsMEVBQTBFO0lBQzFFLGdHQUFnRztJQUNoRyxNQUFNTSxZQUFZLENBQUMsR0FBR1YsaUJBQWlCSCxPQUFPLEVBQUVTO0lBQ2hELE1BQU1LLE9BQU87UUFDWCxJQUFJRCxVQUFVRSxPQUFPLEVBQUU7UUFDdkJILE1BQU1HLE9BQU87UUFDYkMsWUFBWSwyQ0FBMkM7SUFDekQ7SUFFQSxNQUFNQSxXQUFXO1FBQ2ZDLGFBQWFOO1FBQ2JBLFNBQVNPLFdBQVdKLE1BQU1OO0lBQzVCO0lBQ0MsSUFBR1AsT0FBT2tCLFNBQVMsRUFBRTtRQUNwQixJQUFJVCxnQkFBZ0I7WUFDbEJJO1FBQ0YsT0FBTztZQUNMRTtRQUNGO1FBQ0EsT0FBTyxJQUFNQyxhQUFhTjtJQUM1QixHQUFHO1FBQUNGO1FBQVFDO0tBQWU7QUFDN0I7QUFDQSxJQUFJVSxXQUFXZDtBQUNmUixrQkFBZSxHQUFHc0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92ZW50YS1hdXRvcy8uL25vZGVfbW9kdWxlcy9AcmVzdGFydC9ob29rcy9janMvdXNlSW50ZXJ2YWwuanM/OGVjNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBfcmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG52YXIgX3VzZUNvbW1pdHRlZFJlZiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdXNlQ29tbWl0dGVkUmVmXCIpKTtcbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG4vKipcbiAqIENyZWF0ZXMgYSBgc2V0SW50ZXJ2YWxgIHRoYXQgaXMgcHJvcGVybHkgY2xlYW5lZCB1cCB3aGVuIGEgY29tcG9uZW50IHVubW91bnRlZFxuICpcbiAqIGBgYHRzeFxuICogIGZ1bmN0aW9uIFRpbWVyKCkge1xuICogICAgY29uc3QgW3RpbWVyLCBzZXRUaW1lcl0gPSB1c2VTdGF0ZSgwKVxuICogICAgdXNlSW50ZXJ2YWwoKCkgPT4gc2V0VGltZXIoaSA9PiBpICsgMSksIDEwMDApXG4gKlxuICogICAgcmV0dXJuIDxzcGFuPnt0aW1lcn0gc2Vjb25kcyBwYXN0PC9zcGFuPlxuICogIH1cbiAqIGBgYFxuICpcbiAqIEBwYXJhbSBmbiBhbiBmdW5jdGlvbiBydW4gb24gZWFjaCBpbnRlcnZhbFxuICogQHBhcmFtIG1zIFRoZSBtaWxsaXNlY29uZHMgZHVyYXRpb24gb2YgdGhlIGludGVydmFsXG4gKi9cblxuLyoqXG4gKiBDcmVhdGVzIGEgcGF1c2FibGUgYHNldEludGVydmFsYCB0aGF0IGlzIHByb3Blcmx5IGNsZWFuZWQgdXAgd2hlbiBhIGNvbXBvbmVudCB1bm1vdW50ZWRcbiAqXG4gKiBgYGB0c3hcbiAqICBjb25zdCBbcGF1c2VkLCBzZXRQYXVzZWRdID0gdXNlU3RhdGUoZmFsc2UpXG4gKiAgY29uc3QgW3RpbWVyLCBzZXRUaW1lcl0gPSB1c2VTdGF0ZSgwKVxuICpcbiAqICB1c2VJbnRlcnZhbCgoKSA9PiBzZXRUaW1lcihpID0+IGkgKyAxKSwgMTAwMCwgcGF1c2VkKVxuICpcbiAqICByZXR1cm4gKFxuICogICAgPHNwYW4+XG4gKiAgICAgIHt0aW1lcn0gc2Vjb25kcyBwYXN0XG4gKlxuICogICAgICA8YnV0dG9uIG9uQ2xpY2s9eygpID0+IHNldFBhdXNlZChwID0+ICFwKX0+e3BhdXNlZCA/ICdQbGF5JyA6ICdQYXVzZScgfTwvYnV0dG9uPlxuICogICAgPC9zcGFuPlxuICogKVxuICogYGBgXG4gKlxuICogQHBhcmFtIGZuIGFuIGZ1bmN0aW9uIHJ1biBvbiBlYWNoIGludGVydmFsXG4gKiBAcGFyYW0gbXMgVGhlIG1pbGxpc2Vjb25kcyBkdXJhdGlvbiBvZiB0aGUgaW50ZXJ2YWxcbiAqIEBwYXJhbSBwYXVzZWQgV2hldGhlciBvciBub3QgdGhlIGludGVydmFsIGlzIGN1cnJlbnRseSBydW5uaW5nXG4gKi9cblxuLyoqXG4gKiBDcmVhdGVzIGEgcGF1c2FibGUgYHNldEludGVydmFsYCB0aGF0IF9maXJlc18gaW1tZWRpYXRlbHkgYW5kIGlzXG4gKiBwcm9wZXJseSBjbGVhbmVkIHVwIHdoZW4gYSBjb21wb25lbnQgdW5tb3VudGVkXG4gKlxuICogYGBgdHN4XG4gKiAgY29uc3QgW3RpbWVyLCBzZXRUaW1lcl0gPSB1c2VTdGF0ZSgtMSlcbiAqICB1c2VJbnRlcnZhbCgoKSA9PiBzZXRUaW1lcihpID0+IGkgKyAxKSwgMTAwMCwgZmFsc2UsIHRydWUpXG4gKlxuICogIC8vIHdpbGwgdXBkYXRlIHRvIDAgb24gdGhlIGZpcnN0IGVmZmVjdFxuICogIHJldHVybiA8c3Bhbj57dGltZXJ9IHNlY29uZHMgcGFzdDwvc3Bhbj5cbiAqIGBgYFxuICpcbiAqIEBwYXJhbSBmbiBhbiBmdW5jdGlvbiBydW4gb24gZWFjaCBpbnRlcnZhbFxuICogQHBhcmFtIG1zIFRoZSBtaWxsaXNlY29uZHMgZHVyYXRpb24gb2YgdGhlIGludGVydmFsXG4gKiBAcGFyYW0gcGF1c2VkIFdoZXRoZXIgb3Igbm90IHRoZSBpbnRlcnZhbCBpcyBjdXJyZW50bHkgcnVubmluZ1xuICogQHBhcmFtIHJ1bkltbWVkaWF0ZWx5IFdoZXRoZXIgdG8gcnVuIHRoZSBmdW5jdGlvbiBpbW1lZGlhdGVseSBvbiBtb3VudCBvciB1bnBhdXNlXG4gKiByYXRoZXIgdGhhbiB3YWl0aW5nIGZvciB0aGUgZmlyc3QgaW50ZXJ2YWwgdG8gZWxhcHNlXG4gKlxuXG4gKi9cblxuZnVuY3Rpb24gdXNlSW50ZXJ2YWwoZm4sIG1zLCBwYXVzZWQgPSBmYWxzZSwgcnVuSW1tZWRpYXRlbHkgPSBmYWxzZSkge1xuICBsZXQgaGFuZGxlO1xuICBjb25zdCBmblJlZiA9ICgwLCBfdXNlQ29tbWl0dGVkUmVmLmRlZmF1bHQpKGZuKTtcbiAgLy8gdGhpcyByZWYgaXMgbmVjZXNzYXJ5IGIvYyB1c2VFZmZlY3Qgd2lsbCBzb21ldGltZXMgbWlzcyBhIHBhdXNlZCB0b2dnbGVcbiAgLy8gb3JwaGFuaW5nIGEgc2V0VGltZW91dCBjaGFpbiBpbiB0aGUgYWV0aGVyLCBzbyByZWx5aW5nIG9uIGl0J3MgcmVmcmVzaCBsb2dpYyBpcyBub3QgcmVsaWFibGUuXG4gIGNvbnN0IHBhdXNlZFJlZiA9ICgwLCBfdXNlQ29tbWl0dGVkUmVmLmRlZmF1bHQpKHBhdXNlZCk7XG4gIGNvbnN0IHRpY2sgPSAoKSA9PiB7XG4gICAgaWYgKHBhdXNlZFJlZi5jdXJyZW50KSByZXR1cm47XG4gICAgZm5SZWYuY3VycmVudCgpO1xuICAgIHNjaGVkdWxlKCk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdXNlLWJlZm9yZS1kZWZpbmVcbiAgfTtcblxuICBjb25zdCBzY2hlZHVsZSA9ICgpID0+IHtcbiAgICBjbGVhclRpbWVvdXQoaGFuZGxlKTtcbiAgICBoYW5kbGUgPSBzZXRUaW1lb3V0KHRpY2ssIG1zKTtcbiAgfTtcbiAgKDAsIF9yZWFjdC51c2VFZmZlY3QpKCgpID0+IHtcbiAgICBpZiAocnVuSW1tZWRpYXRlbHkpIHtcbiAgICAgIHRpY2soKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2NoZWR1bGUoKTtcbiAgICB9XG4gICAgcmV0dXJuICgpID0+IGNsZWFyVGltZW91dChoYW5kbGUpO1xuICB9LCBbcGF1c2VkLCBydW5JbW1lZGlhdGVseV0pO1xufVxudmFyIF9kZWZhdWx0ID0gdXNlSW50ZXJ2YWw7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibmFtZXMiOlsiZXhwb3J0cyIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiX3JlYWN0IiwicmVxdWlyZSIsIl91c2VDb21taXR0ZWRSZWYiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0Iiwib2JqIiwidXNlSW50ZXJ2YWwiLCJmbiIsIm1zIiwicGF1c2VkIiwicnVuSW1tZWRpYXRlbHkiLCJoYW5kbGUiLCJmblJlZiIsInBhdXNlZFJlZiIsInRpY2siLCJjdXJyZW50Iiwic2NoZWR1bGUiLCJjbGVhclRpbWVvdXQiLCJzZXRUaW1lb3V0IiwidXNlRWZmZWN0IiwiX2RlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/useInterval.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/useIsomorphicEffect.js":
/*!****************************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/useIsomorphicEffect.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nconst isReactNative = typeof global !== \"undefined\" && // @ts-ignore\nglobal.navigator && // @ts-ignore\nglobal.navigator.product === \"ReactNative\";\nconst isDOM = typeof document !== \"undefined\";\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */ var _default = isDOM || isReactNative ? _react.useLayoutEffect : _react.useEffect;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZUlzb21vcnBoaWNFZmZlY3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsa0JBQWtCLEdBQUc7QUFDckJBLGtCQUFlLEdBQUcsS0FBSztBQUN2QixJQUFJRyxTQUFTQyxtQkFBT0EsQ0FBQyx3R0FBTztBQUM1QixNQUFNQyxnQkFBZ0IsT0FBT0MsV0FBVyxlQUN4QyxhQUFhO0FBQ2JBLE9BQU9DLFNBQVMsSUFDaEIsYUFBYTtBQUNiRCxPQUFPQyxTQUFTLENBQUNDLE9BQU8sS0FBSztBQUM3QixNQUFNQyxRQUFRLE9BQU9DLGFBQWE7QUFFbEM7Ozs7Ozs7Q0FPQyxHQUNELElBQUlDLFdBQVdGLFNBQVNKLGdCQUFnQkYsT0FBT1MsZUFBZSxHQUFHVCxPQUFPVSxTQUFTO0FBQ2pGYixrQkFBZSxHQUFHVyIsInNvdXJjZXMiOlsid2VicGFjazovL3ZlbnRhLWF1dG9zLy4vbm9kZV9tb2R1bGVzL0ByZXN0YXJ0L2hvb2tzL2Nqcy91c2VJc29tb3JwaGljRWZmZWN0LmpzP2FhODEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgX3JlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xuY29uc3QgaXNSZWFjdE5hdGl2ZSA9IHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnICYmXG4vLyBAdHMtaWdub3JlXG5nbG9iYWwubmF2aWdhdG9yICYmXG4vLyBAdHMtaWdub3JlXG5nbG9iYWwubmF2aWdhdG9yLnByb2R1Y3QgPT09ICdSZWFjdE5hdGl2ZSc7XG5jb25zdCBpc0RPTSA9IHR5cGVvZiBkb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCc7XG5cbi8qKlxuICogSXMgYHVzZUxheW91dEVmZmVjdGAgaW4gYSBET00gb3IgUmVhY3QgTmF0aXZlIGVudmlyb25tZW50LCBvdGhlcndpc2UgcmVzb2x2ZXMgdG8gdXNlRWZmZWN0XG4gKiBPbmx5IHVzZWZ1bCB0byBhdm9pZCB0aGUgY29uc29sZSB3YXJuaW5nLlxuICpcbiAqIFBSRUZFUiBgdXNlRWZmZWN0YCBVTkxFU1MgWU9VIEtOT1cgV0hBVCBZT1UgQVJFIERPSU5HLlxuICpcbiAqIEBjYXRlZ29yeSBlZmZlY3RzXG4gKi9cbnZhciBfZGVmYXVsdCA9IGlzRE9NIHx8IGlzUmVhY3ROYXRpdmUgPyBfcmVhY3QudXNlTGF5b3V0RWZmZWN0IDogX3JlYWN0LnVzZUVmZmVjdDtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6WyJleHBvcnRzIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJfcmVhY3QiLCJyZXF1aXJlIiwiaXNSZWFjdE5hdGl2ZSIsImdsb2JhbCIsIm5hdmlnYXRvciIsInByb2R1Y3QiLCJpc0RPTSIsImRvY3VtZW50IiwiX2RlZmF1bHQiLCJ1c2VMYXlvdXRFZmZlY3QiLCJ1c2VFZmZlY3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/useIsomorphicEffect.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/useMergeState.js":
/*!**********************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/useMergeState.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = useMergeState;\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/**\n * Updates state, partial updates are merged into existing state values\n */ /**\n * Mimics a React class component's state model, of having a single unified\n * `state` object and an updater that merges updates into the existing state, as\n * opposed to replacing it.\n *\n * ```js\n * const [state, setState] = useMergeState({ name: 'Betsy', age: 24 })\n *\n * setState({ name: 'Johan' }) // { name: 'Johan', age: 24 }\n *\n * setState(state => ({ age: state.age + 10 })) // { name: 'Johan', age: 34 }\n * ```\n *\n * @param initialState The initial state object\n */ function useMergeState(initialState) {\n    const [state, setState] = (0, _react.useState)(initialState);\n    const updater = (0, _react.useCallback)((update)=>{\n        if (update === null) return;\n        if (typeof update === \"function\") {\n            setState((state)=>{\n                const nextState = update(state);\n                return nextState == null ? state : Object.assign({}, state, nextState);\n            });\n        } else {\n            setState((state)=>Object.assign({}, state, update));\n        }\n    }, [\n        setState\n    ]);\n    return [\n        state,\n        updater\n    ];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZU1lcmdlU3RhdGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsa0JBQWtCLEdBQUc7QUFDckJBLGtCQUFlLEdBQUdHO0FBQ2xCLElBQUlDLFNBQVNDLG1CQUFPQSxDQUFDLHdHQUFPO0FBQzVCOztDQUVDLEdBRUQ7Ozs7Ozs7Ozs7Ozs7O0NBY0MsR0FDRCxTQUFTRixjQUFjRyxZQUFZO0lBQ2pDLE1BQU0sQ0FBQ0MsT0FBT0MsU0FBUyxHQUFHLENBQUMsR0FBR0osT0FBT0ssUUFBUSxFQUFFSDtJQUMvQyxNQUFNSSxVQUFVLENBQUMsR0FBR04sT0FBT08sV0FBVyxFQUFFQyxDQUFBQTtRQUN0QyxJQUFJQSxXQUFXLE1BQU07UUFDckIsSUFBSSxPQUFPQSxXQUFXLFlBQVk7WUFDaENKLFNBQVNELENBQUFBO2dCQUNQLE1BQU1NLFlBQVlELE9BQU9MO2dCQUN6QixPQUFPTSxhQUFhLE9BQU9OLFFBQVFPLE9BQU9DLE1BQU0sQ0FBQyxDQUFDLEdBQUdSLE9BQU9NO1lBQzlEO1FBQ0YsT0FBTztZQUNMTCxTQUFTRCxDQUFBQSxRQUFTTyxPQUFPQyxNQUFNLENBQUMsQ0FBQyxHQUFHUixPQUFPSztRQUM3QztJQUNGLEdBQUc7UUFBQ0o7S0FBUztJQUNiLE9BQU87UUFBQ0Q7UUFBT0c7S0FBUTtBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL3ZlbnRhLWF1dG9zLy4vbm9kZV9tb2R1bGVzL0ByZXN0YXJ0L2hvb2tzL2Nqcy91c2VNZXJnZVN0YXRlLmpzPzExYjAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSB1c2VNZXJnZVN0YXRlO1xudmFyIF9yZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbi8qKlxuICogVXBkYXRlcyBzdGF0ZSwgcGFydGlhbCB1cGRhdGVzIGFyZSBtZXJnZWQgaW50byBleGlzdGluZyBzdGF0ZSB2YWx1ZXNcbiAqL1xuXG4vKipcbiAqIE1pbWljcyBhIFJlYWN0IGNsYXNzIGNvbXBvbmVudCdzIHN0YXRlIG1vZGVsLCBvZiBoYXZpbmcgYSBzaW5nbGUgdW5pZmllZFxuICogYHN0YXRlYCBvYmplY3QgYW5kIGFuIHVwZGF0ZXIgdGhhdCBtZXJnZXMgdXBkYXRlcyBpbnRvIHRoZSBleGlzdGluZyBzdGF0ZSwgYXNcbiAqIG9wcG9zZWQgdG8gcmVwbGFjaW5nIGl0LlxuICpcbiAqIGBgYGpzXG4gKiBjb25zdCBbc3RhdGUsIHNldFN0YXRlXSA9IHVzZU1lcmdlU3RhdGUoeyBuYW1lOiAnQmV0c3knLCBhZ2U6IDI0IH0pXG4gKlxuICogc2V0U3RhdGUoeyBuYW1lOiAnSm9oYW4nIH0pIC8vIHsgbmFtZTogJ0pvaGFuJywgYWdlOiAyNCB9XG4gKlxuICogc2V0U3RhdGUoc3RhdGUgPT4gKHsgYWdlOiBzdGF0ZS5hZ2UgKyAxMCB9KSkgLy8geyBuYW1lOiAnSm9oYW4nLCBhZ2U6IDM0IH1cbiAqIGBgYFxuICpcbiAqIEBwYXJhbSBpbml0aWFsU3RhdGUgVGhlIGluaXRpYWwgc3RhdGUgb2JqZWN0XG4gKi9cbmZ1bmN0aW9uIHVzZU1lcmdlU3RhdGUoaW5pdGlhbFN0YXRlKSB7XG4gIGNvbnN0IFtzdGF0ZSwgc2V0U3RhdGVdID0gKDAsIF9yZWFjdC51c2VTdGF0ZSkoaW5pdGlhbFN0YXRlKTtcbiAgY29uc3QgdXBkYXRlciA9ICgwLCBfcmVhY3QudXNlQ2FsbGJhY2spKHVwZGF0ZSA9PiB7XG4gICAgaWYgKHVwZGF0ZSA9PT0gbnVsbCkgcmV0dXJuO1xuICAgIGlmICh0eXBlb2YgdXBkYXRlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBzZXRTdGF0ZShzdGF0ZSA9PiB7XG4gICAgICAgIGNvbnN0IG5leHRTdGF0ZSA9IHVwZGF0ZShzdGF0ZSk7XG4gICAgICAgIHJldHVybiBuZXh0U3RhdGUgPT0gbnVsbCA/IHN0YXRlIDogT2JqZWN0LmFzc2lnbih7fSwgc3RhdGUsIG5leHRTdGF0ZSk7XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2V0U3RhdGUoc3RhdGUgPT4gT2JqZWN0LmFzc2lnbih7fSwgc3RhdGUsIHVwZGF0ZSkpO1xuICAgIH1cbiAgfSwgW3NldFN0YXRlXSk7XG4gIHJldHVybiBbc3RhdGUsIHVwZGF0ZXJdO1xufSJdLCJuYW1lcyI6WyJleHBvcnRzIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJ1c2VNZXJnZVN0YXRlIiwiX3JlYWN0IiwicmVxdWlyZSIsImluaXRpYWxTdGF0ZSIsInN0YXRlIiwic2V0U3RhdGUiLCJ1c2VTdGF0ZSIsInVwZGF0ZXIiLCJ1c2VDYWxsYmFjayIsInVwZGF0ZSIsIm5leHRTdGF0ZSIsIk9iamVjdCIsImFzc2lnbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/useMergeState.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/useMergeStateFromProps.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/useMergeStateFromProps.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = useMergeStateFromProps;\nvar _useMergeState = _interopRequireDefault(__webpack_require__(/*! ./useMergeState */ \"(ssr)/./node_modules/@restart/hooks/cjs/useMergeState.js\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction useMergeStateFromProps(props, gDSFP, initialState) {\n    const [state, setState] = (0, _useMergeState.default)(initialState);\n    const nextState = gDSFP(props, state);\n    if (nextState !== null) setState(nextState);\n    return [\n        state,\n        setState\n    ];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZU1lcmdlU3RhdGVGcm9tUHJvcHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsa0JBQWtCLEdBQUc7QUFDckJBLGtCQUFlLEdBQUdHO0FBQ2xCLElBQUlDLGlCQUFpQkMsdUJBQXVCQyxtQkFBT0EsQ0FBQyxpRkFBaUI7QUFDckUsU0FBU0QsdUJBQXVCRSxHQUFHO0lBQUksT0FBT0EsT0FBT0EsSUFBSU4sVUFBVSxHQUFHTSxNQUFNO1FBQUVMLFNBQVNLO0lBQUk7QUFBRztBQUM5RixTQUFTSix1QkFBdUJLLEtBQUssRUFBRUMsS0FBSyxFQUFFQyxZQUFZO0lBQ3hELE1BQU0sQ0FBQ0MsT0FBT0MsU0FBUyxHQUFHLENBQUMsR0FBR1IsZUFBZUYsT0FBTyxFQUFFUTtJQUN0RCxNQUFNRyxZQUFZSixNQUFNRCxPQUFPRztJQUMvQixJQUFJRSxjQUFjLE1BQU1ELFNBQVNDO0lBQ2pDLE9BQU87UUFBQ0Y7UUFBT0M7S0FBUztBQUMxQiIsInNvdXJjZXMiOlsid2VicGFjazovL3ZlbnRhLWF1dG9zLy4vbm9kZV9tb2R1bGVzL0ByZXN0YXJ0L2hvb2tzL2Nqcy91c2VNZXJnZVN0YXRlRnJvbVByb3BzLmpzPzUxYzUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSB1c2VNZXJnZVN0YXRlRnJvbVByb3BzO1xudmFyIF91c2VNZXJnZVN0YXRlID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi91c2VNZXJnZVN0YXRlXCIpKTtcbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5mdW5jdGlvbiB1c2VNZXJnZVN0YXRlRnJvbVByb3BzKHByb3BzLCBnRFNGUCwgaW5pdGlhbFN0YXRlKSB7XG4gIGNvbnN0IFtzdGF0ZSwgc2V0U3RhdGVdID0gKDAsIF91c2VNZXJnZVN0YXRlLmRlZmF1bHQpKGluaXRpYWxTdGF0ZSk7XG4gIGNvbnN0IG5leHRTdGF0ZSA9IGdEU0ZQKHByb3BzLCBzdGF0ZSk7XG4gIGlmIChuZXh0U3RhdGUgIT09IG51bGwpIHNldFN0YXRlKG5leHRTdGF0ZSk7XG4gIHJldHVybiBbc3RhdGUsIHNldFN0YXRlXTtcbn0iXSwibmFtZXMiOlsiZXhwb3J0cyIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwidXNlTWVyZ2VTdGF0ZUZyb21Qcm9wcyIsIl91c2VNZXJnZVN0YXRlIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJvYmoiLCJwcm9wcyIsImdEU0ZQIiwiaW5pdGlhbFN0YXRlIiwic3RhdGUiLCJzZXRTdGF0ZSIsIm5leHRTdGF0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/useMergeStateFromProps.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/useMergedRefs.js":
/*!**********************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/useMergedRefs.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nexports.mergeRefs = mergeRefs;\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nconst toFnRef = (ref)=>!ref || typeof ref === \"function\" ? ref : (value)=>{\n        ref.current = value;\n    };\nfunction mergeRefs(refA, refB) {\n    const a = toFnRef(refA);\n    const b = toFnRef(refB);\n    return (value)=>{\n        if (a) a(value);\n        if (b) b(value);\n    };\n}\n/**\n * Create and returns a single callback ref composed from two other Refs.\n *\n * ```tsx\n * const Button = React.forwardRef((props, ref) => {\n *   const [element, attachRef] = useCallbackRef<HTMLButtonElement>();\n *   const mergedRef = useMergedRefs(ref, attachRef);\n *\n *   return <button ref={mergedRef} {...props}/>\n * })\n * ```\n *\n * @param refA A Callback or mutable Ref\n * @param refB A Callback or mutable Ref\n * @category refs\n */ function useMergedRefs(refA, refB) {\n    return (0, _react.useMemo)(()=>mergeRefs(refA, refB), [\n        refA,\n        refB\n    ]);\n}\nvar _default = useMergedRefs;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZU1lcmdlZFJlZnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsa0JBQWtCLEdBQUc7QUFDckJBLGtCQUFlLEdBQUcsS0FBSztBQUN2QkEsaUJBQWlCLEdBQUdHO0FBQ3BCLElBQUlDLFNBQVNDLG1CQUFPQSxDQUFDLHdHQUFPO0FBQzVCLE1BQU1DLFVBQVVDLENBQUFBLE1BQU8sQ0FBQ0EsT0FBTyxPQUFPQSxRQUFRLGFBQWFBLE1BQU1DLENBQUFBO1FBQy9ERCxJQUFJRSxPQUFPLEdBQUdEO0lBQ2hCO0FBQ0EsU0FBU0wsVUFBVU8sSUFBSSxFQUFFQyxJQUFJO0lBQzNCLE1BQU1DLElBQUlOLFFBQVFJO0lBQ2xCLE1BQU1HLElBQUlQLFFBQVFLO0lBQ2xCLE9BQU9ILENBQUFBO1FBQ0wsSUFBSUksR0FBR0EsRUFBRUo7UUFDVCxJQUFJSyxHQUFHQSxFQUFFTDtJQUNYO0FBQ0Y7QUFFQTs7Ozs7Ozs7Ozs7Ozs7O0NBZUMsR0FDRCxTQUFTTSxjQUFjSixJQUFJLEVBQUVDLElBQUk7SUFDL0IsT0FBTyxDQUFDLEdBQUdQLE9BQU9XLE9BQU8sRUFBRSxJQUFNWixVQUFVTyxNQUFNQyxPQUFPO1FBQUNEO1FBQU1DO0tBQUs7QUFDdEU7QUFDQSxJQUFJSyxXQUFXRjtBQUNmZCxrQkFBZSxHQUFHZ0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92ZW50YS1hdXRvcy8uL25vZGVfbW9kdWxlcy9AcmVzdGFydC9ob29rcy9janMvdXNlTWVyZ2VkUmVmcy5qcz9iNmQ3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuZXhwb3J0cy5tZXJnZVJlZnMgPSBtZXJnZVJlZnM7XG52YXIgX3JlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xuY29uc3QgdG9GblJlZiA9IHJlZiA9PiAhcmVmIHx8IHR5cGVvZiByZWYgPT09ICdmdW5jdGlvbicgPyByZWYgOiB2YWx1ZSA9PiB7XG4gIHJlZi5jdXJyZW50ID0gdmFsdWU7XG59O1xuZnVuY3Rpb24gbWVyZ2VSZWZzKHJlZkEsIHJlZkIpIHtcbiAgY29uc3QgYSA9IHRvRm5SZWYocmVmQSk7XG4gIGNvbnN0IGIgPSB0b0ZuUmVmKHJlZkIpO1xuICByZXR1cm4gdmFsdWUgPT4ge1xuICAgIGlmIChhKSBhKHZhbHVlKTtcbiAgICBpZiAoYikgYih2YWx1ZSk7XG4gIH07XG59XG5cbi8qKlxuICogQ3JlYXRlIGFuZCByZXR1cm5zIGEgc2luZ2xlIGNhbGxiYWNrIHJlZiBjb21wb3NlZCBmcm9tIHR3byBvdGhlciBSZWZzLlxuICpcbiAqIGBgYHRzeFxuICogY29uc3QgQnV0dG9uID0gUmVhY3QuZm9yd2FyZFJlZigocHJvcHMsIHJlZikgPT4ge1xuICogICBjb25zdCBbZWxlbWVudCwgYXR0YWNoUmVmXSA9IHVzZUNhbGxiYWNrUmVmPEhUTUxCdXR0b25FbGVtZW50PigpO1xuICogICBjb25zdCBtZXJnZWRSZWYgPSB1c2VNZXJnZWRSZWZzKHJlZiwgYXR0YWNoUmVmKTtcbiAqXG4gKiAgIHJldHVybiA8YnV0dG9uIHJlZj17bWVyZ2VkUmVmfSB7Li4ucHJvcHN9Lz5cbiAqIH0pXG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0gcmVmQSBBIENhbGxiYWNrIG9yIG11dGFibGUgUmVmXG4gKiBAcGFyYW0gcmVmQiBBIENhbGxiYWNrIG9yIG11dGFibGUgUmVmXG4gKiBAY2F0ZWdvcnkgcmVmc1xuICovXG5mdW5jdGlvbiB1c2VNZXJnZWRSZWZzKHJlZkEsIHJlZkIpIHtcbiAgcmV0dXJuICgwLCBfcmVhY3QudXNlTWVtbykoKCkgPT4gbWVyZ2VSZWZzKHJlZkEsIHJlZkIpLCBbcmVmQSwgcmVmQl0pO1xufVxudmFyIF9kZWZhdWx0ID0gdXNlTWVyZ2VkUmVmcztcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6WyJleHBvcnRzIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJtZXJnZVJlZnMiLCJfcmVhY3QiLCJyZXF1aXJlIiwidG9GblJlZiIsInJlZiIsInZhbHVlIiwiY3VycmVudCIsInJlZkEiLCJyZWZCIiwiYSIsImIiLCJ1c2VNZXJnZWRSZWZzIiwidXNlTWVtbyIsIl9kZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/useMergedRefs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/useMounted.js":
/*!*******************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/useMounted.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = useMounted;\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */ function useMounted() {\n    const mounted = (0, _react.useRef)(true);\n    const isMounted = (0, _react.useRef)(()=>mounted.current);\n    (0, _react.useEffect)(()=>{\n        mounted.current = true;\n        return ()=>{\n            mounted.current = false;\n        };\n    }, []);\n    return isMounted.current;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZU1vdW50ZWQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsa0JBQWtCLEdBQUc7QUFDckJBLGtCQUFlLEdBQUdHO0FBQ2xCLElBQUlDLFNBQVNDLG1CQUFPQSxDQUFDLHdHQUFPO0FBQzVCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBbUJDLEdBQ0QsU0FBU0Y7SUFDUCxNQUFNRyxVQUFVLENBQUMsR0FBR0YsT0FBT0csTUFBTSxFQUFFO0lBQ25DLE1BQU1DLFlBQVksQ0FBQyxHQUFHSixPQUFPRyxNQUFNLEVBQUUsSUFBTUQsUUFBUUcsT0FBTztJQUN6RCxJQUFHTCxPQUFPTSxTQUFTLEVBQUU7UUFDcEJKLFFBQVFHLE9BQU8sR0FBRztRQUNsQixPQUFPO1lBQ0xILFFBQVFHLE9BQU8sR0FBRztRQUNwQjtJQUNGLEdBQUcsRUFBRTtJQUNMLE9BQU9ELFVBQVVDLE9BQU87QUFDMUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92ZW50YS1hdXRvcy8uL25vZGVfbW9kdWxlcy9AcmVzdGFydC9ob29rcy9janMvdXNlTW91bnRlZC5qcz9iY2JmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5kZWZhdWx0ID0gdXNlTW91bnRlZDtcbnZhciBfcmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG4vKipcbiAqIFRyYWNrIHdoZXRoZXIgYSBjb21wb25lbnQgaXMgY3VycmVudCBtb3VudGVkLiBHZW5lcmFsbHkgbGVzcyBwcmVmZXJhYmxlIHRoYW5cbiAqIHByb3BlcmxseSBjYW5jZWxpbmcgZWZmZWN0cyBzbyB0aGV5IGRvbid0IHJ1biBhZnRlciBhIGNvbXBvbmVudCBpcyB1bm1vdW50ZWQsXG4gKiBidXQgaGVscGZ1bCBpbiBjYXNlcyB3aGVyZSB0aGF0IGlzbid0IGZlYXNpYmxlLCBzdWNoIGFzIGEgYFByb21pc2VgIHJlc29sdXRpb24uXG4gKlxuICogQHJldHVybnMgYSBmdW5jdGlvbiB0aGF0IHJldHVybnMgdGhlIGN1cnJlbnQgaXNNb3VudGVkIHN0YXRlIG9mIHRoZSBjb21wb25lbnRcbiAqXG4gKiBgYGB0c1xuICogY29uc3QgW2RhdGEsIHNldERhdGFdID0gdXNlU3RhdGUobnVsbClcbiAqIGNvbnN0IGlzTW91bnRlZCA9IHVzZU1vdW50ZWQoKVxuICpcbiAqIHVzZUVmZmVjdCgoKSA9PiB7XG4gKiAgIGZldGNoZGF0YSgpLnRoZW4oKG5ld0RhdGEpID0+IHtcbiAqICAgICAgaWYgKGlzTW91bnRlZCgpKSB7XG4gKiAgICAgICAgc2V0RGF0YShuZXdEYXRhKTtcbiAqICAgICAgfVxuICogICB9KVxuICogfSlcbiAqIGBgYFxuICovXG5mdW5jdGlvbiB1c2VNb3VudGVkKCkge1xuICBjb25zdCBtb3VudGVkID0gKDAsIF9yZWFjdC51c2VSZWYpKHRydWUpO1xuICBjb25zdCBpc01vdW50ZWQgPSAoMCwgX3JlYWN0LnVzZVJlZikoKCkgPT4gbW91bnRlZC5jdXJyZW50KTtcbiAgKDAsIF9yZWFjdC51c2VFZmZlY3QpKCgpID0+IHtcbiAgICBtb3VudGVkLmN1cnJlbnQgPSB0cnVlO1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBtb3VudGVkLmN1cnJlbnQgPSBmYWxzZTtcbiAgICB9O1xuICB9LCBbXSk7XG4gIHJldHVybiBpc01vdW50ZWQuY3VycmVudDtcbn0iXSwibmFtZXMiOlsiZXhwb3J0cyIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwidXNlTW91bnRlZCIsIl9yZWFjdCIsInJlcXVpcmUiLCJtb3VudGVkIiwidXNlUmVmIiwiaXNNb3VudGVkIiwiY3VycmVudCIsInVzZUVmZmVjdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/useMounted.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/usePrevious.js":
/*!********************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/usePrevious.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = usePrevious;\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */ function usePrevious(value) {\n    const ref = (0, _react.useRef)(null);\n    (0, _react.useEffect)(()=>{\n        ref.current = value;\n    });\n    return ref.current;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZVByZXZpb3VzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLGtCQUFrQixHQUFHO0FBQ3JCQSxrQkFBZSxHQUFHRztBQUNsQixJQUFJQyxTQUFTQyxtQkFBT0EsQ0FBQyx3R0FBTztBQUM1Qjs7Ozs7Ozs7Ozs7Ozs7OztDQWdCQyxHQUNELFNBQVNGLFlBQVlHLEtBQUs7SUFDeEIsTUFBTUMsTUFBTSxDQUFDLEdBQUdILE9BQU9JLE1BQU0sRUFBRTtJQUM5QixJQUFHSixPQUFPSyxTQUFTLEVBQUU7UUFDcEJGLElBQUlHLE9BQU8sR0FBR0o7SUFDaEI7SUFDQSxPQUFPQyxJQUFJRyxPQUFPO0FBQ3BCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdmVudGEtYXV0b3MvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZVByZXZpb3VzLmpzP2ZiMmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSB1c2VQcmV2aW91cztcbnZhciBfcmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG4vKipcbiAqIFN0b3JlIHRoZSBsYXN0IG9mIHNvbWUgdmFsdWUuIFRyYWNrZWQgdmlhIGEgYFJlZmAgb25seSB1cGRhdGluZyBpdFxuICogYWZ0ZXIgdGhlIGNvbXBvbmVudCByZW5kZXJzLlxuICpcbiAqIEhlbHBmdWwgaWYgeW91IG5lZWQgdG8gY29tcGFyZSBhIHByb3AgdmFsdWUgdG8gaXQncyBwcmV2aW91cyB2YWx1ZSBkdXJpbmcgcmVuZGVyLlxuICpcbiAqIGBgYHRzXG4gKiBmdW5jdGlvbiBDb21wb25lbnQocHJvcHMpIHtcbiAqICAgY29uc3QgbGFzdFByb3BzID0gdXNlUHJldmlvdXMocHJvcHMpXG4gKlxuICogICBpZiAobGFzdFByb3BzLmZvbyAhPT0gcHJvcHMuZm9vKVxuICogICAgIHJlc2V0VmFsdWVGcm9tUHJvcHMocHJvcHMuZm9vKVxuICogfVxuICogYGBgXG4gKlxuICogQHBhcmFtIHZhbHVlIHRoZSB2YWx1ZSB0byB0cmFja1xuICovXG5mdW5jdGlvbiB1c2VQcmV2aW91cyh2YWx1ZSkge1xuICBjb25zdCByZWYgPSAoMCwgX3JlYWN0LnVzZVJlZikobnVsbCk7XG4gICgwLCBfcmVhY3QudXNlRWZmZWN0KSgoKSA9PiB7XG4gICAgcmVmLmN1cnJlbnQgPSB2YWx1ZTtcbiAgfSk7XG4gIHJldHVybiByZWYuY3VycmVudDtcbn0iXSwibmFtZXMiOlsiZXhwb3J0cyIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwidXNlUHJldmlvdXMiLCJfcmVhY3QiLCJyZXF1aXJlIiwidmFsdWUiLCJyZWYiLCJ1c2VSZWYiLCJ1c2VFZmZlY3QiLCJjdXJyZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/usePrevious.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/useRafInterval.js":
/*!***********************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/useRafInterval.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar _useCommittedRef = _interopRequireDefault(__webpack_require__(/*! ./useCommittedRef */ \"(ssr)/./node_modules/@restart/hooks/cjs/useCommittedRef.js\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction useRafInterval(fn, ms, paused = false) {\n    let handle;\n    let start = new Date().getTime();\n    const fnRef = (0, _useCommittedRef.default)(fn);\n    // this ref is necessary b/c useEffect will sometimes miss a paused toggle\n    // orphaning a setTimeout chain in the aether, so relying on it's refresh logic is not reliable.\n    const pausedRef = (0, _useCommittedRef.default)(paused);\n    function loop() {\n        const current = new Date().getTime();\n        const delta = current - start;\n        if (pausedRef.current) return;\n        if (delta >= ms && fnRef.current) {\n            fnRef.current();\n            start = new Date().getTime();\n        }\n        cancelAnimationFrame(handle);\n        handle = requestAnimationFrame(loop);\n    }\n    (0, _react.useEffect)(()=>{\n        handle = requestAnimationFrame(loop);\n        return ()=>cancelAnimationFrame(handle);\n    }, []);\n}\nvar _default = useRafInterval;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZVJhZkludGVydmFsLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLGtCQUFrQixHQUFHO0FBQ3JCQSxrQkFBZSxHQUFHLEtBQUs7QUFDdkIsSUFBSUcsU0FBU0MsbUJBQU9BLENBQUMsd0dBQU87QUFDNUIsSUFBSUMsbUJBQW1CQyx1QkFBdUJGLG1CQUFPQSxDQUFDLHFGQUFtQjtBQUN6RSxTQUFTRSx1QkFBdUJDLEdBQUc7SUFBSSxPQUFPQSxPQUFPQSxJQUFJTixVQUFVLEdBQUdNLE1BQU07UUFBRUwsU0FBU0s7SUFBSTtBQUFHO0FBQzlGLFNBQVNDLGVBQWVDLEVBQUUsRUFBRUMsRUFBRSxFQUFFQyxTQUFTLEtBQUs7SUFDNUMsSUFBSUM7SUFDSixJQUFJQyxRQUFRLElBQUlDLE9BQU9DLE9BQU87SUFDOUIsTUFBTUMsUUFBUSxDQUFDLEdBQUdYLGlCQUFpQkgsT0FBTyxFQUFFTztJQUM1QywwRUFBMEU7SUFDMUUsZ0dBQWdHO0lBQ2hHLE1BQU1RLFlBQVksQ0FBQyxHQUFHWixpQkFBaUJILE9BQU8sRUFBRVM7SUFDaEQsU0FBU087UUFDUCxNQUFNQyxVQUFVLElBQUlMLE9BQU9DLE9BQU87UUFDbEMsTUFBTUssUUFBUUQsVUFBVU47UUFDeEIsSUFBSUksVUFBVUUsT0FBTyxFQUFFO1FBQ3ZCLElBQUlDLFNBQVNWLE1BQU1NLE1BQU1HLE9BQU8sRUFBRTtZQUNoQ0gsTUFBTUcsT0FBTztZQUNiTixRQUFRLElBQUlDLE9BQU9DLE9BQU87UUFDNUI7UUFDQU0scUJBQXFCVDtRQUNyQkEsU0FBU1Usc0JBQXNCSjtJQUNqQztJQUNDLElBQUdmLE9BQU9vQixTQUFTLEVBQUU7UUFDcEJYLFNBQVNVLHNCQUFzQko7UUFDL0IsT0FBTyxJQUFNRyxxQkFBcUJUO0lBQ3BDLEdBQUcsRUFBRTtBQUNQO0FBQ0EsSUFBSVksV0FBV2hCO0FBQ2ZSLGtCQUFlLEdBQUd3QiIsInNvdXJjZXMiOlsid2VicGFjazovL3ZlbnRhLWF1dG9zLy4vbm9kZV9tb2R1bGVzL0ByZXN0YXJ0L2hvb2tzL2Nqcy91c2VSYWZJbnRlcnZhbC5qcz8zMDkxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIF9yZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbnZhciBfdXNlQ29tbWl0dGVkUmVmID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi91c2VDb21taXR0ZWRSZWZcIikpO1xuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cbmZ1bmN0aW9uIHVzZVJhZkludGVydmFsKGZuLCBtcywgcGF1c2VkID0gZmFsc2UpIHtcbiAgbGV0IGhhbmRsZTtcbiAgbGV0IHN0YXJ0ID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7XG4gIGNvbnN0IGZuUmVmID0gKDAsIF91c2VDb21taXR0ZWRSZWYuZGVmYXVsdCkoZm4pO1xuICAvLyB0aGlzIHJlZiBpcyBuZWNlc3NhcnkgYi9jIHVzZUVmZmVjdCB3aWxsIHNvbWV0aW1lcyBtaXNzIGEgcGF1c2VkIHRvZ2dsZVxuICAvLyBvcnBoYW5pbmcgYSBzZXRUaW1lb3V0IGNoYWluIGluIHRoZSBhZXRoZXIsIHNvIHJlbHlpbmcgb24gaXQncyByZWZyZXNoIGxvZ2ljIGlzIG5vdCByZWxpYWJsZS5cbiAgY29uc3QgcGF1c2VkUmVmID0gKDAsIF91c2VDb21taXR0ZWRSZWYuZGVmYXVsdCkocGF1c2VkKTtcbiAgZnVuY3Rpb24gbG9vcCgpIHtcbiAgICBjb25zdCBjdXJyZW50ID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7XG4gICAgY29uc3QgZGVsdGEgPSBjdXJyZW50IC0gc3RhcnQ7XG4gICAgaWYgKHBhdXNlZFJlZi5jdXJyZW50KSByZXR1cm47XG4gICAgaWYgKGRlbHRhID49IG1zICYmIGZuUmVmLmN1cnJlbnQpIHtcbiAgICAgIGZuUmVmLmN1cnJlbnQoKTtcbiAgICAgIHN0YXJ0ID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7XG4gICAgfVxuICAgIGNhbmNlbEFuaW1hdGlvbkZyYW1lKGhhbmRsZSk7XG4gICAgaGFuZGxlID0gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGxvb3ApO1xuICB9XG4gICgwLCBfcmVhY3QudXNlRWZmZWN0KSgoKSA9PiB7XG4gICAgaGFuZGxlID0gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGxvb3ApO1xuICAgIHJldHVybiAoKSA9PiBjYW5jZWxBbmltYXRpb25GcmFtZShoYW5kbGUpO1xuICB9LCBbXSk7XG59XG52YXIgX2RlZmF1bHQgPSB1c2VSYWZJbnRlcnZhbDtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6WyJleHBvcnRzIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJfcmVhY3QiLCJyZXF1aXJlIiwiX3VzZUNvbW1pdHRlZFJlZiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJvYmoiLCJ1c2VSYWZJbnRlcnZhbCIsImZuIiwibXMiLCJwYXVzZWQiLCJoYW5kbGUiLCJzdGFydCIsIkRhdGUiLCJnZXRUaW1lIiwiZm5SZWYiLCJwYXVzZWRSZWYiLCJsb29wIiwiY3VycmVudCIsImRlbHRhIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJ1c2VFZmZlY3QiLCJfZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/useRafInterval.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/useResizeObserver.js":
/*!**************************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/useResizeObserver.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = useResizeObserver;\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar _useIsomorphicEffect = _interopRequireDefault(__webpack_require__(/*! ./useIsomorphicEffect */ \"(ssr)/./node_modules/@restart/hooks/cjs/useIsomorphicEffect.js\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nconst targetMap = new WeakMap();\nlet resizeObserver;\nfunction getResizeObserver() {\n    // eslint-disable-next-line no-return-assign\n    return resizeObserver = resizeObserver || new window.ResizeObserver((entries)=>{\n        entries.forEach((entry)=>{\n            const handler = targetMap.get(entry.target);\n            if (handler) handler(entry.contentRect);\n        });\n    });\n}\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */ function useResizeObserver(element) {\n    const [rect, setRect] = (0, _react.useState)(null);\n    (0, _useIsomorphicEffect.default)(()=>{\n        if (!element) return;\n        getResizeObserver().observe(element);\n        setRect(element.getBoundingClientRect());\n        targetMap.set(element, (rect)=>{\n            setRect(rect);\n        });\n        return ()=>{\n            targetMap.delete(element);\n        };\n    }, [\n        element\n    ]);\n    return rect;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZVJlc2l6ZU9ic2VydmVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLGtCQUFrQixHQUFHO0FBQ3JCQSxrQkFBZSxHQUFHRztBQUNsQixJQUFJQyxTQUFTQyxtQkFBT0EsQ0FBQyx3R0FBTztBQUM1QixJQUFJQyx1QkFBdUJDLHVCQUF1QkYsbUJBQU9BLENBQUMsNkZBQXVCO0FBQ2pGLFNBQVNFLHVCQUF1QkMsR0FBRztJQUFJLE9BQU9BLE9BQU9BLElBQUlQLFVBQVUsR0FBR08sTUFBTTtRQUFFTixTQUFTTTtJQUFJO0FBQUc7QUFDOUYsTUFBTUMsWUFBWSxJQUFJQztBQUN0QixJQUFJQztBQUNKLFNBQVNDO0lBQ1AsNENBQTRDO0lBQzVDLE9BQU9ELGlCQUFpQkEsa0JBQWtCLElBQUlFLE9BQU9DLGNBQWMsQ0FBQ0MsQ0FBQUE7UUFDbEVBLFFBQVFDLE9BQU8sQ0FBQ0MsQ0FBQUE7WUFDZCxNQUFNQyxVQUFVVCxVQUFVVSxHQUFHLENBQUNGLE1BQU1HLE1BQU07WUFDMUMsSUFBSUYsU0FBU0EsUUFBUUQsTUFBTUksV0FBVztRQUN4QztJQUNGO0FBQ0Y7QUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FpQkMsR0FDRCxTQUFTbEIsa0JBQWtCbUIsT0FBTztJQUNoQyxNQUFNLENBQUNDLE1BQU1DLFFBQVEsR0FBRyxDQUFDLEdBQUdwQixPQUFPcUIsUUFBUSxFQUFFO0lBQzVDLElBQUduQixxQkFBcUJKLE9BQU8sRUFBRTtRQUNoQyxJQUFJLENBQUNvQixTQUFTO1FBQ2RWLG9CQUFvQmMsT0FBTyxDQUFDSjtRQUM1QkUsUUFBUUYsUUFBUUsscUJBQXFCO1FBQ3JDbEIsVUFBVW1CLEdBQUcsQ0FBQ04sU0FBU0MsQ0FBQUE7WUFDckJDLFFBQVFEO1FBQ1Y7UUFDQSxPQUFPO1lBQ0xkLFVBQVVvQixNQUFNLENBQUNQO1FBQ25CO0lBQ0YsR0FBRztRQUFDQTtLQUFRO0lBQ1osT0FBT0M7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL3ZlbnRhLWF1dG9zLy4vbm9kZV9tb2R1bGVzL0ByZXN0YXJ0L2hvb2tzL2Nqcy91c2VSZXNpemVPYnNlcnZlci5qcz9kMTEzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5kZWZhdWx0ID0gdXNlUmVzaXplT2JzZXJ2ZXI7XG52YXIgX3JlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xudmFyIF91c2VJc29tb3JwaGljRWZmZWN0ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi91c2VJc29tb3JwaGljRWZmZWN0XCIpKTtcbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5jb25zdCB0YXJnZXRNYXAgPSBuZXcgV2Vha01hcCgpO1xubGV0IHJlc2l6ZU9ic2VydmVyO1xuZnVuY3Rpb24gZ2V0UmVzaXplT2JzZXJ2ZXIoKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1yZXR1cm4tYXNzaWduXG4gIHJldHVybiByZXNpemVPYnNlcnZlciA9IHJlc2l6ZU9ic2VydmVyIHx8IG5ldyB3aW5kb3cuUmVzaXplT2JzZXJ2ZXIoZW50cmllcyA9PiB7XG4gICAgZW50cmllcy5mb3JFYWNoKGVudHJ5ID0+IHtcbiAgICAgIGNvbnN0IGhhbmRsZXIgPSB0YXJnZXRNYXAuZ2V0KGVudHJ5LnRhcmdldCk7XG4gICAgICBpZiAoaGFuZGxlcikgaGFuZGxlcihlbnRyeS5jb250ZW50UmVjdCk7XG4gICAgfSk7XG4gIH0pO1xufVxuXG4vKipcbiAqIEVmZmljaWVudGx5IG9ic2VydmUgc2l6ZSBjaGFuZ2VzIG9uIGFuIGVsZW1lbnQuIERlcGVuZHMgb24gdGhlIGBSZXNpemVPYnNlcnZlcmAgYXBpLFxuICogYW5kIHBvbHlmaWxscyBhcmUgbmVlZGVkIGluIG9sZGVyIGJyb3dzZXJzLlxuICpcbiAqIGBgYHRzXG4gKiBjb25zdCBbcmVmLCBhdHRhY2hSZWZdID0gdXNlQ2FsbGJhY2tSZWYobnVsbCk7XG4gKlxuICogY29uc3QgcmVjdCA9IHVzZVJlc2l6ZU9ic2VydmVyKHJlZik7XG4gKlxuICogcmV0dXJuIChcbiAqICA8ZGl2IHJlZj17YXR0YWNoUmVmfT5cbiAqICAgIHtKU09OLnN0cmluZ2lmeShyZWN0KX1cbiAqICA8L2Rpdj5cbiAqIClcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSBlbGVtZW50IFRoZSBET00gZWxlbWVudCB0byBvYnNlcnZlXG4gKi9cbmZ1bmN0aW9uIHVzZVJlc2l6ZU9ic2VydmVyKGVsZW1lbnQpIHtcbiAgY29uc3QgW3JlY3QsIHNldFJlY3RdID0gKDAsIF9yZWFjdC51c2VTdGF0ZSkobnVsbCk7XG4gICgwLCBfdXNlSXNvbW9ycGhpY0VmZmVjdC5kZWZhdWx0KSgoKSA9PiB7XG4gICAgaWYgKCFlbGVtZW50KSByZXR1cm47XG4gICAgZ2V0UmVzaXplT2JzZXJ2ZXIoKS5vYnNlcnZlKGVsZW1lbnQpO1xuICAgIHNldFJlY3QoZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSk7XG4gICAgdGFyZ2V0TWFwLnNldChlbGVtZW50LCByZWN0ID0+IHtcbiAgICAgIHNldFJlY3QocmVjdCk7XG4gICAgfSk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHRhcmdldE1hcC5kZWxldGUoZWxlbWVudCk7XG4gICAgfTtcbiAgfSwgW2VsZW1lbnRdKTtcbiAgcmV0dXJuIHJlY3Q7XG59Il0sIm5hbWVzIjpbImV4cG9ydHMiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsInVzZVJlc2l6ZU9ic2VydmVyIiwiX3JlYWN0IiwicmVxdWlyZSIsIl91c2VJc29tb3JwaGljRWZmZWN0IiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIm9iaiIsInRhcmdldE1hcCIsIldlYWtNYXAiLCJyZXNpemVPYnNlcnZlciIsImdldFJlc2l6ZU9ic2VydmVyIiwid2luZG93IiwiUmVzaXplT2JzZXJ2ZXIiLCJlbnRyaWVzIiwiZm9yRWFjaCIsImVudHJ5IiwiaGFuZGxlciIsImdldCIsInRhcmdldCIsImNvbnRlbnRSZWN0IiwiZWxlbWVudCIsInJlY3QiLCJzZXRSZWN0IiwidXNlU3RhdGUiLCJvYnNlcnZlIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0Iiwic2V0IiwiZGVsZXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/useResizeObserver.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/useSafeState.js":
/*!*********************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/useSafeState.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar _useMounted = _interopRequireDefault(__webpack_require__(/*! ./useMounted */ \"(ssr)/./node_modules/@restart/hooks/cjs/useMounted.js\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n/**\n * `useSafeState` takes the return value of a `useState` hook and wraps the\n * setter to prevent updates onces the component has unmounted. Can used\n * with `useMergeState` and `useStateAsync` as well\n *\n * @param state The return value of a useStateHook\n *\n * ```ts\n * const [show, setShow] = useSafeState(useState(true));\n * ```\n */ function useSafeState(state) {\n    const isMounted = (0, _useMounted.default)();\n    return [\n        state[0],\n        (0, _react.useCallback)((nextState)=>{\n            if (!isMounted()) return;\n            return state[1](nextState);\n        }, [\n            isMounted,\n            state[1]\n        ])\n    ];\n}\nvar _default = useSafeState;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZVNhZmVTdGF0ZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSxrQkFBa0IsR0FBRztBQUNyQkEsa0JBQWUsR0FBRyxLQUFLO0FBQ3ZCLElBQUlHLFNBQVNDLG1CQUFPQSxDQUFDLHdHQUFPO0FBQzVCLElBQUlDLGNBQWNDLHVCQUF1QkYsbUJBQU9BLENBQUMsMkVBQWM7QUFDL0QsU0FBU0UsdUJBQXVCQyxHQUFHO0lBQUksT0FBT0EsT0FBT0EsSUFBSU4sVUFBVSxHQUFHTSxNQUFNO1FBQUVMLFNBQVNLO0lBQUk7QUFBRztBQUM5Rjs7Ozs7Ozs7OztDQVVDLEdBRUQsU0FBU0MsYUFBYUMsS0FBSztJQUN6QixNQUFNQyxZQUFZLENBQUMsR0FBR0wsWUFBWUgsT0FBTztJQUN6QyxPQUFPO1FBQUNPLEtBQUssQ0FBQyxFQUFFO1FBQUcsSUFBR04sT0FBT1EsV0FBVyxFQUFFQyxDQUFBQTtZQUN4QyxJQUFJLENBQUNGLGFBQWE7WUFDbEIsT0FBT0QsS0FBSyxDQUFDLEVBQUUsQ0FBQ0c7UUFDbEIsR0FBRztZQUFDRjtZQUFXRCxLQUFLLENBQUMsRUFBRTtTQUFDO0tBQUU7QUFDNUI7QUFDQSxJQUFJSSxXQUFXTDtBQUNmUixrQkFBZSxHQUFHYSIsInNvdXJjZXMiOlsid2VicGFjazovL3ZlbnRhLWF1dG9zLy4vbm9kZV9tb2R1bGVzL0ByZXN0YXJ0L2hvb2tzL2Nqcy91c2VTYWZlU3RhdGUuanM/YmNjMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBfcmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG52YXIgX3VzZU1vdW50ZWQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3VzZU1vdW50ZWRcIikpO1xuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cbi8qKlxuICogYHVzZVNhZmVTdGF0ZWAgdGFrZXMgdGhlIHJldHVybiB2YWx1ZSBvZiBhIGB1c2VTdGF0ZWAgaG9vayBhbmQgd3JhcHMgdGhlXG4gKiBzZXR0ZXIgdG8gcHJldmVudCB1cGRhdGVzIG9uY2VzIHRoZSBjb21wb25lbnQgaGFzIHVubW91bnRlZC4gQ2FuIHVzZWRcbiAqIHdpdGggYHVzZU1lcmdlU3RhdGVgIGFuZCBgdXNlU3RhdGVBc3luY2AgYXMgd2VsbFxuICpcbiAqIEBwYXJhbSBzdGF0ZSBUaGUgcmV0dXJuIHZhbHVlIG9mIGEgdXNlU3RhdGVIb29rXG4gKlxuICogYGBgdHNcbiAqIGNvbnN0IFtzaG93LCBzZXRTaG93XSA9IHVzZVNhZmVTdGF0ZSh1c2VTdGF0ZSh0cnVlKSk7XG4gKiBgYGBcbiAqL1xuXG5mdW5jdGlvbiB1c2VTYWZlU3RhdGUoc3RhdGUpIHtcbiAgY29uc3QgaXNNb3VudGVkID0gKDAsIF91c2VNb3VudGVkLmRlZmF1bHQpKCk7XG4gIHJldHVybiBbc3RhdGVbMF0sICgwLCBfcmVhY3QudXNlQ2FsbGJhY2spKG5leHRTdGF0ZSA9PiB7XG4gICAgaWYgKCFpc01vdW50ZWQoKSkgcmV0dXJuO1xuICAgIHJldHVybiBzdGF0ZVsxXShuZXh0U3RhdGUpO1xuICB9LCBbaXNNb3VudGVkLCBzdGF0ZVsxXV0pXTtcbn1cbnZhciBfZGVmYXVsdCA9IHVzZVNhZmVTdGF0ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6WyJleHBvcnRzIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJfcmVhY3QiLCJyZXF1aXJlIiwiX3VzZU1vdW50ZWQiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0Iiwib2JqIiwidXNlU2FmZVN0YXRlIiwic3RhdGUiLCJpc01vdW50ZWQiLCJ1c2VDYWxsYmFjayIsIm5leHRTdGF0ZSIsIl9kZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/useSafeState.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/useUpdatedRef.js":
/*!**********************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/useUpdatedRef.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = useUpdatedRef;\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */ function useUpdatedRef(value) {\n    const valueRef = (0, _react.useRef)(value);\n    valueRef.current = value;\n    return valueRef;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZVVwZGF0ZWRSZWYuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsa0JBQWtCLEdBQUc7QUFDckJBLGtCQUFlLEdBQUdHO0FBQ2xCLElBQUlDLFNBQVNDLG1CQUFPQSxDQUFDLHdHQUFPO0FBQzVCOzs7OztDQUtDLEdBQ0QsU0FBU0YsY0FBY0csS0FBSztJQUMxQixNQUFNQyxXQUFXLENBQUMsR0FBR0gsT0FBT0ksTUFBTSxFQUFFRjtJQUNwQ0MsU0FBU0UsT0FBTyxHQUFHSDtJQUNuQixPQUFPQztBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdmVudGEtYXV0b3MvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZVVwZGF0ZWRSZWYuanM/NTlhNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IHVzZVVwZGF0ZWRSZWY7XG52YXIgX3JlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xuLyoqXG4gKiBSZXR1cm5zIGEgcmVmIHRoYXQgaXMgaW1tZWRpYXRlbHkgdXBkYXRlZCB3aXRoIHRoZSBuZXcgdmFsdWVcbiAqXG4gKiBAcGFyYW0gdmFsdWUgVGhlIFJlZiB2YWx1ZVxuICogQGNhdGVnb3J5IHJlZnNcbiAqL1xuZnVuY3Rpb24gdXNlVXBkYXRlZFJlZih2YWx1ZSkge1xuICBjb25zdCB2YWx1ZVJlZiA9ICgwLCBfcmVhY3QudXNlUmVmKSh2YWx1ZSk7XG4gIHZhbHVlUmVmLmN1cnJlbnQgPSB2YWx1ZTtcbiAgcmV0dXJuIHZhbHVlUmVmO1xufSJdLCJuYW1lcyI6WyJleHBvcnRzIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJ1c2VVcGRhdGVkUmVmIiwiX3JlYWN0IiwicmVxdWlyZSIsInZhbHVlIiwidmFsdWVSZWYiLCJ1c2VSZWYiLCJjdXJyZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/useUpdatedRef.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/cjs/useWillUnmount.js":
/*!***********************************************************!*\
  !*** ./node_modules/@restart/hooks/cjs/useWillUnmount.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = useWillUnmount;\nvar _useUpdatedRef = _interopRequireDefault(__webpack_require__(/*! ./useUpdatedRef */ \"(ssr)/./node_modules/@restart/hooks/cjs/useUpdatedRef.js\"));\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */ function useWillUnmount(fn) {\n    const onUnmount = (0, _useUpdatedRef.default)(fn);\n    (0, _react.useEffect)(()=>()=>onUnmount.current(), []);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZVdpbGxVbm1vdW50LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLGtCQUFrQixHQUFHO0FBQ3JCQSxrQkFBZSxHQUFHRztBQUNsQixJQUFJQyxpQkFBaUJDLHVCQUF1QkMsbUJBQU9BLENBQUMsaUZBQWlCO0FBQ3JFLElBQUlDLFNBQVNELG1CQUFPQSxDQUFDLHdHQUFPO0FBQzVCLFNBQVNELHVCQUF1QkcsR0FBRztJQUFJLE9BQU9BLE9BQU9BLElBQUlQLFVBQVUsR0FBR08sTUFBTTtRQUFFTixTQUFTTTtJQUFJO0FBQUc7QUFDOUY7Ozs7O0NBS0MsR0FDRCxTQUFTTCxlQUFlTSxFQUFFO0lBQ3hCLE1BQU1DLFlBQVksQ0FBQyxHQUFHTixlQUFlRixPQUFPLEVBQUVPO0lBQzdDLElBQUdGLE9BQU9JLFNBQVMsRUFBRSxJQUFNLElBQU1ELFVBQVVFLE9BQU8sSUFBSSxFQUFFO0FBQzNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdmVudGEtYXV0b3MvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvY2pzL3VzZVdpbGxVbm1vdW50LmpzPzg3OWQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSB1c2VXaWxsVW5tb3VudDtcbnZhciBfdXNlVXBkYXRlZFJlZiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdXNlVXBkYXRlZFJlZlwiKSk7XG52YXIgX3JlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cbi8qKlxuICogQXR0YWNoIGEgY2FsbGJhY2sgdGhhdCBmaXJlcyB3aGVuIGEgY29tcG9uZW50IHVubW91bnRzXG4gKlxuICogQHBhcmFtIGZuIEhhbmRsZXIgdG8gcnVuIHdoZW4gdGhlIGNvbXBvbmVudCB1bm1vdW50c1xuICogQGNhdGVnb3J5IGVmZmVjdHNcbiAqL1xuZnVuY3Rpb24gdXNlV2lsbFVubW91bnQoZm4pIHtcbiAgY29uc3Qgb25Vbm1vdW50ID0gKDAsIF91c2VVcGRhdGVkUmVmLmRlZmF1bHQpKGZuKTtcbiAgKDAsIF9yZWFjdC51c2VFZmZlY3QpKCgpID0+ICgpID0+IG9uVW5tb3VudC5jdXJyZW50KCksIFtdKTtcbn0iXSwibmFtZXMiOlsiZXhwb3J0cyIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwidXNlV2lsbFVubW91bnQiLCJfdXNlVXBkYXRlZFJlZiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX3JlYWN0Iiwib2JqIiwiZm4iLCJvblVubW91bnQiLCJ1c2VFZmZlY3QiLCJjdXJyZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/cjs/useWillUnmount.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/esm/useBreakpoint.js":
/*!**********************************************************!*\
  !*** ./node_modules/@restart/hooks/esm/useBreakpoint.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createBreakpointHook: () => (/* binding */ createBreakpointHook),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _useMediaQuery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./useMediaQuery */ \"(ssr)/./node_modules/@restart/hooks/esm/useMediaQuery.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\n/**\n * Create a responsive hook we a set of breakpoint names and widths.\n * You can use any valid css units as well as a numbers (for pixels).\n *\n * **NOTE:** The object key order is important! it's assumed to be in order from smallest to largest\n *\n * ```ts\n * const useBreakpoint = createBreakpointHook({\n *  xs: 0,\n *  sm: 576,\n *  md: 768,\n *  lg: 992,\n *  xl: 1200,\n * })\n * ```\n *\n * **Watch out!** using string values will sometimes construct media queries using css `calc()` which\n * is NOT supported in media queries by all browsers at the moment. use numbers for\n * the widest range of browser support.\n *\n * @param breakpointValues A object hash of names to breakpoint dimensions\n */ function createBreakpointHook(breakpointValues) {\n    const names = Object.keys(breakpointValues);\n    function and(query, next) {\n        if (query === next) {\n            return next;\n        }\n        return query ? `${query} and ${next}` : next;\n    }\n    function getNext(breakpoint) {\n        return names[Math.min(names.indexOf(breakpoint) + 1, names.length - 1)];\n    }\n    function getMaxQuery(breakpoint) {\n        const next = getNext(breakpoint);\n        let value = breakpointValues[next];\n        if (typeof value === \"number\") value = `${value - 0.2}px`;\n        else value = `calc(${value} - 0.2px)`;\n        return `(max-width: ${value})`;\n    }\n    function getMinQuery(breakpoint) {\n        let value = breakpointValues[breakpoint];\n        if (typeof value === \"number\") {\n            value = `${value}px`;\n        }\n        return `(min-width: ${value})`;\n    }\n    /**\n   * Match a set of breakpoints\n   *\n   * ```tsx\n   * const MidSizeOnly = () => {\n   *   const isMid = useBreakpoint({ lg: 'down', sm: 'up' });\n   *\n   *   if (isMid) return <div>On a Reasonable sized Screen!</div>\n   *   return null;\n   * }\n   * ```\n   * @param breakpointMap An object map of breakpoints and directions, queries are constructed using \"and\" to join\n   * breakpoints together\n   * @param window Optionally specify the target window to match against (useful when rendering into iframes)\n   */ /**\n   * Match a single breakpoint exactly, up, or down.\n   *\n   * ```tsx\n   * const PhoneOnly = () => {\n   *   const isSmall = useBreakpoint('sm', 'down');\n   *\n   *   if (isSmall) return <div>On a Small Screen!</div>\n   *   return null;\n   * }\n   * ```\n   *\n   * @param breakpoint The breakpoint key\n   * @param direction A direction 'up' for a max, 'down' for min, true to match only the breakpoint\n   * @param window Optionally specify the target window to match against (useful when rendering into iframes)\n   */ function useBreakpoint(breakpointOrMap, direction, window) {\n        let breakpointMap;\n        if (typeof breakpointOrMap === \"object\") {\n            breakpointMap = breakpointOrMap;\n            window = direction;\n            direction = true;\n        } else {\n            direction = direction || true;\n            breakpointMap = {\n                [breakpointOrMap]: direction\n            };\n        }\n        let query = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>Object.entries(breakpointMap).reduce((query, [key, direction])=>{\n                if (direction === \"up\" || direction === true) {\n                    query = and(query, getMinQuery(key));\n                }\n                if (direction === \"down\" || direction === true) {\n                    query = and(query, getMaxQuery(key));\n                }\n                return query;\n            }, \"\"), [\n            JSON.stringify(breakpointMap)\n        ]);\n        return (0,_useMediaQuery__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(query, window);\n    }\n    return useBreakpoint;\n}\nconst useBreakpoint = createBreakpointHook({\n    xs: 0,\n    sm: 576,\n    md: 768,\n    lg: 992,\n    xl: 1200,\n    xxl: 1400\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useBreakpoint);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvZXNtL3VzZUJyZWFrcG9pbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBNEM7QUFDWjtBQUNoQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBcUJDLEdBQ00sU0FBU0UscUJBQXFCQyxnQkFBZ0I7SUFDbkQsTUFBTUMsUUFBUUMsT0FBT0MsSUFBSSxDQUFDSDtJQUMxQixTQUFTSSxJQUFJQyxLQUFLLEVBQUVDLElBQUk7UUFDdEIsSUFBSUQsVUFBVUMsTUFBTTtZQUNsQixPQUFPQTtRQUNUO1FBQ0EsT0FBT0QsUUFBUSxDQUFDLEVBQUVBLE1BQU0sS0FBSyxFQUFFQyxLQUFLLENBQUMsR0FBR0E7SUFDMUM7SUFDQSxTQUFTQyxRQUFRQyxVQUFVO1FBQ3pCLE9BQU9QLEtBQUssQ0FBQ1EsS0FBS0MsR0FBRyxDQUFDVCxNQUFNVSxPQUFPLENBQUNILGNBQWMsR0FBR1AsTUFBTVcsTUFBTSxHQUFHLEdBQUc7SUFDekU7SUFDQSxTQUFTQyxZQUFZTCxVQUFVO1FBQzdCLE1BQU1GLE9BQU9DLFFBQVFDO1FBQ3JCLElBQUlNLFFBQVFkLGdCQUFnQixDQUFDTSxLQUFLO1FBQ2xDLElBQUksT0FBT1EsVUFBVSxVQUFVQSxRQUFRLENBQUMsRUFBRUEsUUFBUSxJQUFJLEVBQUUsQ0FBQzthQUFNQSxRQUFRLENBQUMsS0FBSyxFQUFFQSxNQUFNLFNBQVMsQ0FBQztRQUMvRixPQUFPLENBQUMsWUFBWSxFQUFFQSxNQUFNLENBQUMsQ0FBQztJQUNoQztJQUNBLFNBQVNDLFlBQVlQLFVBQVU7UUFDN0IsSUFBSU0sUUFBUWQsZ0JBQWdCLENBQUNRLFdBQVc7UUFDeEMsSUFBSSxPQUFPTSxVQUFVLFVBQVU7WUFDN0JBLFFBQVEsQ0FBQyxFQUFFQSxNQUFNLEVBQUUsQ0FBQztRQUN0QjtRQUNBLE9BQU8sQ0FBQyxZQUFZLEVBQUVBLE1BQU0sQ0FBQyxDQUFDO0lBQ2hDO0lBRUE7Ozs7Ozs7Ozs7Ozs7O0dBY0MsR0FFRDs7Ozs7Ozs7Ozs7Ozs7O0dBZUMsR0FFRCxTQUFTRSxjQUFjQyxlQUFlLEVBQUVDLFNBQVMsRUFBRUMsTUFBTTtRQUN2RCxJQUFJQztRQUNKLElBQUksT0FBT0gsb0JBQW9CLFVBQVU7WUFDdkNHLGdCQUFnQkg7WUFDaEJFLFNBQVNEO1lBQ1RBLFlBQVk7UUFDZCxPQUFPO1lBQ0xBLFlBQVlBLGFBQWE7WUFDekJFLGdCQUFnQjtnQkFDZCxDQUFDSCxnQkFBZ0IsRUFBRUM7WUFDckI7UUFDRjtRQUNBLElBQUliLFFBQVFQLDhDQUFPQSxDQUFDLElBQU1JLE9BQU9tQixPQUFPLENBQUNELGVBQWVFLE1BQU0sQ0FBQyxDQUFDakIsT0FBTyxDQUFDa0IsS0FBS0wsVUFBVTtnQkFDckYsSUFBSUEsY0FBYyxRQUFRQSxjQUFjLE1BQU07b0JBQzVDYixRQUFRRCxJQUFJQyxPQUFPVSxZQUFZUTtnQkFDakM7Z0JBQ0EsSUFBSUwsY0FBYyxVQUFVQSxjQUFjLE1BQU07b0JBQzlDYixRQUFRRCxJQUFJQyxPQUFPUSxZQUFZVTtnQkFDakM7Z0JBQ0EsT0FBT2xCO1lBQ1QsR0FBRyxLQUFLO1lBQUNtQixLQUFLQyxTQUFTLENBQUNMO1NBQWU7UUFDdkMsT0FBT3ZCLDBEQUFhQSxDQUFDUSxPQUFPYztJQUM5QjtJQUNBLE9BQU9IO0FBQ1Q7QUFDQSxNQUFNQSxnQkFBZ0JqQixxQkFBcUI7SUFDekMyQixJQUFJO0lBQ0pDLElBQUk7SUFDSkMsSUFBSTtJQUNKQyxJQUFJO0lBQ0pDLElBQUk7SUFDSkMsS0FBSztBQUNQO0FBQ0EsaUVBQWVmLGFBQWFBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92ZW50YS1hdXRvcy8uL25vZGVfbW9kdWxlcy9AcmVzdGFydC9ob29rcy9lc20vdXNlQnJlYWtwb2ludC5qcz84Nzk3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB1c2VNZWRpYVF1ZXJ5IGZyb20gJy4vdXNlTWVkaWFRdWVyeSc7XG5pbXBvcnQgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuLyoqXG4gKiBDcmVhdGUgYSByZXNwb25zaXZlIGhvb2sgd2UgYSBzZXQgb2YgYnJlYWtwb2ludCBuYW1lcyBhbmQgd2lkdGhzLlxuICogWW91IGNhbiB1c2UgYW55IHZhbGlkIGNzcyB1bml0cyBhcyB3ZWxsIGFzIGEgbnVtYmVycyAoZm9yIHBpeGVscykuXG4gKlxuICogKipOT1RFOioqIFRoZSBvYmplY3Qga2V5IG9yZGVyIGlzIGltcG9ydGFudCEgaXQncyBhc3N1bWVkIHRvIGJlIGluIG9yZGVyIGZyb20gc21hbGxlc3QgdG8gbGFyZ2VzdFxuICpcbiAqIGBgYHRzXG4gKiBjb25zdCB1c2VCcmVha3BvaW50ID0gY3JlYXRlQnJlYWtwb2ludEhvb2soe1xuICogIHhzOiAwLFxuICogIHNtOiA1NzYsXG4gKiAgbWQ6IDc2OCxcbiAqICBsZzogOTkyLFxuICogIHhsOiAxMjAwLFxuICogfSlcbiAqIGBgYFxuICpcbiAqICoqV2F0Y2ggb3V0ISoqIHVzaW5nIHN0cmluZyB2YWx1ZXMgd2lsbCBzb21ldGltZXMgY29uc3RydWN0IG1lZGlhIHF1ZXJpZXMgdXNpbmcgY3NzIGBjYWxjKClgIHdoaWNoXG4gKiBpcyBOT1Qgc3VwcG9ydGVkIGluIG1lZGlhIHF1ZXJpZXMgYnkgYWxsIGJyb3dzZXJzIGF0IHRoZSBtb21lbnQuIHVzZSBudW1iZXJzIGZvclxuICogdGhlIHdpZGVzdCByYW5nZSBvZiBicm93c2VyIHN1cHBvcnQuXG4gKlxuICogQHBhcmFtIGJyZWFrcG9pbnRWYWx1ZXMgQSBvYmplY3QgaGFzaCBvZiBuYW1lcyB0byBicmVha3BvaW50IGRpbWVuc2lvbnNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUJyZWFrcG9pbnRIb29rKGJyZWFrcG9pbnRWYWx1ZXMpIHtcbiAgY29uc3QgbmFtZXMgPSBPYmplY3Qua2V5cyhicmVha3BvaW50VmFsdWVzKTtcbiAgZnVuY3Rpb24gYW5kKHF1ZXJ5LCBuZXh0KSB7XG4gICAgaWYgKHF1ZXJ5ID09PSBuZXh0KSB7XG4gICAgICByZXR1cm4gbmV4dDtcbiAgICB9XG4gICAgcmV0dXJuIHF1ZXJ5ID8gYCR7cXVlcnl9IGFuZCAke25leHR9YCA6IG5leHQ7XG4gIH1cbiAgZnVuY3Rpb24gZ2V0TmV4dChicmVha3BvaW50KSB7XG4gICAgcmV0dXJuIG5hbWVzW01hdGgubWluKG5hbWVzLmluZGV4T2YoYnJlYWtwb2ludCkgKyAxLCBuYW1lcy5sZW5ndGggLSAxKV07XG4gIH1cbiAgZnVuY3Rpb24gZ2V0TWF4UXVlcnkoYnJlYWtwb2ludCkge1xuICAgIGNvbnN0IG5leHQgPSBnZXROZXh0KGJyZWFrcG9pbnQpO1xuICAgIGxldCB2YWx1ZSA9IGJyZWFrcG9pbnRWYWx1ZXNbbmV4dF07XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicpIHZhbHVlID0gYCR7dmFsdWUgLSAwLjJ9cHhgO2Vsc2UgdmFsdWUgPSBgY2FsYygke3ZhbHVlfSAtIDAuMnB4KWA7XG4gICAgcmV0dXJuIGAobWF4LXdpZHRoOiAke3ZhbHVlfSlgO1xuICB9XG4gIGZ1bmN0aW9uIGdldE1pblF1ZXJ5KGJyZWFrcG9pbnQpIHtcbiAgICBsZXQgdmFsdWUgPSBicmVha3BvaW50VmFsdWVzW2JyZWFrcG9pbnRdO1xuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInKSB7XG4gICAgICB2YWx1ZSA9IGAke3ZhbHVlfXB4YDtcbiAgICB9XG4gICAgcmV0dXJuIGAobWluLXdpZHRoOiAke3ZhbHVlfSlgO1xuICB9XG5cbiAgLyoqXG4gICAqIE1hdGNoIGEgc2V0IG9mIGJyZWFrcG9pbnRzXG4gICAqXG4gICAqIGBgYHRzeFxuICAgKiBjb25zdCBNaWRTaXplT25seSA9ICgpID0+IHtcbiAgICogICBjb25zdCBpc01pZCA9IHVzZUJyZWFrcG9pbnQoeyBsZzogJ2Rvd24nLCBzbTogJ3VwJyB9KTtcbiAgICpcbiAgICogICBpZiAoaXNNaWQpIHJldHVybiA8ZGl2Pk9uIGEgUmVhc29uYWJsZSBzaXplZCBTY3JlZW4hPC9kaXY+XG4gICAqICAgcmV0dXJuIG51bGw7XG4gICAqIH1cbiAgICogYGBgXG4gICAqIEBwYXJhbSBicmVha3BvaW50TWFwIEFuIG9iamVjdCBtYXAgb2YgYnJlYWtwb2ludHMgYW5kIGRpcmVjdGlvbnMsIHF1ZXJpZXMgYXJlIGNvbnN0cnVjdGVkIHVzaW5nIFwiYW5kXCIgdG8gam9pblxuICAgKiBicmVha3BvaW50cyB0b2dldGhlclxuICAgKiBAcGFyYW0gd2luZG93IE9wdGlvbmFsbHkgc3BlY2lmeSB0aGUgdGFyZ2V0IHdpbmRvdyB0byBtYXRjaCBhZ2FpbnN0ICh1c2VmdWwgd2hlbiByZW5kZXJpbmcgaW50byBpZnJhbWVzKVxuICAgKi9cblxuICAvKipcbiAgICogTWF0Y2ggYSBzaW5nbGUgYnJlYWtwb2ludCBleGFjdGx5LCB1cCwgb3IgZG93bi5cbiAgICpcbiAgICogYGBgdHN4XG4gICAqIGNvbnN0IFBob25lT25seSA9ICgpID0+IHtcbiAgICogICBjb25zdCBpc1NtYWxsID0gdXNlQnJlYWtwb2ludCgnc20nLCAnZG93bicpO1xuICAgKlxuICAgKiAgIGlmIChpc1NtYWxsKSByZXR1cm4gPGRpdj5PbiBhIFNtYWxsIFNjcmVlbiE8L2Rpdj5cbiAgICogICByZXR1cm4gbnVsbDtcbiAgICogfVxuICAgKiBgYGBcbiAgICpcbiAgICogQHBhcmFtIGJyZWFrcG9pbnQgVGhlIGJyZWFrcG9pbnQga2V5XG4gICAqIEBwYXJhbSBkaXJlY3Rpb24gQSBkaXJlY3Rpb24gJ3VwJyBmb3IgYSBtYXgsICdkb3duJyBmb3IgbWluLCB0cnVlIHRvIG1hdGNoIG9ubHkgdGhlIGJyZWFrcG9pbnRcbiAgICogQHBhcmFtIHdpbmRvdyBPcHRpb25hbGx5IHNwZWNpZnkgdGhlIHRhcmdldCB3aW5kb3cgdG8gbWF0Y2ggYWdhaW5zdCAodXNlZnVsIHdoZW4gcmVuZGVyaW5nIGludG8gaWZyYW1lcylcbiAgICovXG5cbiAgZnVuY3Rpb24gdXNlQnJlYWtwb2ludChicmVha3BvaW50T3JNYXAsIGRpcmVjdGlvbiwgd2luZG93KSB7XG4gICAgbGV0IGJyZWFrcG9pbnRNYXA7XG4gICAgaWYgKHR5cGVvZiBicmVha3BvaW50T3JNYXAgPT09ICdvYmplY3QnKSB7XG4gICAgICBicmVha3BvaW50TWFwID0gYnJlYWtwb2ludE9yTWFwO1xuICAgICAgd2luZG93ID0gZGlyZWN0aW9uO1xuICAgICAgZGlyZWN0aW9uID0gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgZGlyZWN0aW9uID0gZGlyZWN0aW9uIHx8IHRydWU7XG4gICAgICBicmVha3BvaW50TWFwID0ge1xuICAgICAgICBbYnJlYWtwb2ludE9yTWFwXTogZGlyZWN0aW9uXG4gICAgICB9O1xuICAgIH1cbiAgICBsZXQgcXVlcnkgPSB1c2VNZW1vKCgpID0+IE9iamVjdC5lbnRyaWVzKGJyZWFrcG9pbnRNYXApLnJlZHVjZSgocXVlcnksIFtrZXksIGRpcmVjdGlvbl0pID0+IHtcbiAgICAgIGlmIChkaXJlY3Rpb24gPT09ICd1cCcgfHwgZGlyZWN0aW9uID09PSB0cnVlKSB7XG4gICAgICAgIHF1ZXJ5ID0gYW5kKHF1ZXJ5LCBnZXRNaW5RdWVyeShrZXkpKTtcbiAgICAgIH1cbiAgICAgIGlmIChkaXJlY3Rpb24gPT09ICdkb3duJyB8fCBkaXJlY3Rpb24gPT09IHRydWUpIHtcbiAgICAgICAgcXVlcnkgPSBhbmQocXVlcnksIGdldE1heFF1ZXJ5KGtleSkpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHF1ZXJ5O1xuICAgIH0sICcnKSwgW0pTT04uc3RyaW5naWZ5KGJyZWFrcG9pbnRNYXApXSk7XG4gICAgcmV0dXJuIHVzZU1lZGlhUXVlcnkocXVlcnksIHdpbmRvdyk7XG4gIH1cbiAgcmV0dXJuIHVzZUJyZWFrcG9pbnQ7XG59XG5jb25zdCB1c2VCcmVha3BvaW50ID0gY3JlYXRlQnJlYWtwb2ludEhvb2soe1xuICB4czogMCxcbiAgc206IDU3NixcbiAgbWQ6IDc2OCxcbiAgbGc6IDk5MixcbiAgeGw6IDEyMDAsXG4gIHh4bDogMTQwMFxufSk7XG5leHBvcnQgZGVmYXVsdCB1c2VCcmVha3BvaW50OyJdLCJuYW1lcyI6WyJ1c2VNZWRpYVF1ZXJ5IiwidXNlTWVtbyIsImNyZWF0ZUJyZWFrcG9pbnRIb29rIiwiYnJlYWtwb2ludFZhbHVlcyIsIm5hbWVzIiwiT2JqZWN0Iiwia2V5cyIsImFuZCIsInF1ZXJ5IiwibmV4dCIsImdldE5leHQiLCJicmVha3BvaW50IiwiTWF0aCIsIm1pbiIsImluZGV4T2YiLCJsZW5ndGgiLCJnZXRNYXhRdWVyeSIsInZhbHVlIiwiZ2V0TWluUXVlcnkiLCJ1c2VCcmVha3BvaW50IiwiYnJlYWtwb2ludE9yTWFwIiwiZGlyZWN0aW9uIiwid2luZG93IiwiYnJlYWtwb2ludE1hcCIsImVudHJpZXMiLCJyZWR1Y2UiLCJrZXkiLCJKU09OIiwic3RyaW5naWZ5IiwieHMiLCJzbSIsIm1kIiwibGciLCJ4bCIsInh4bCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/esm/useBreakpoint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/esm/useCommittedRef.js":
/*!************************************************************!*\
  !*** ./node_modules/@restart/hooks/esm/useCommittedRef.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded before being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */ function useCommittedRef(value) {\n    const ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(value);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        ref.current = value;\n    }, [\n        value\n    ]);\n    return ref;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useCommittedRef);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvZXNtL3VzZUNvbW1pdHRlZFJlZi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMEM7QUFFMUM7Ozs7Ozs7O0NBUUMsR0FDRCxTQUFTRSxnQkFBZ0JDLEtBQUs7SUFDNUIsTUFBTUMsTUFBTUgsNkNBQU1BLENBQUNFO0lBQ25CSCxnREFBU0EsQ0FBQztRQUNSSSxJQUFJQyxPQUFPLEdBQUdGO0lBQ2hCLEdBQUc7UUFBQ0E7S0FBTTtJQUNWLE9BQU9DO0FBQ1Q7QUFDQSxpRUFBZUYsZUFBZUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3ZlbnRhLWF1dG9zLy4vbm9kZV9tb2R1bGVzL0ByZXN0YXJ0L2hvb2tzL2VzbS91c2VDb21taXR0ZWRSZWYuanM/ZjZkOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVJlZiB9IGZyb20gJ3JlYWN0JztcblxuLyoqXG4gKiBDcmVhdGVzIGEgYFJlZmAgd2hvc2UgdmFsdWUgaXMgdXBkYXRlZCBpbiBhbiBlZmZlY3QsIGVuc3VyaW5nIHRoZSBtb3N0IHJlY2VudFxuICogdmFsdWUgaXMgdGhlIG9uZSByZW5kZXJlZCB3aXRoLiBHZW5lcmFsbHkgb25seSByZXF1aXJlZCBmb3IgQ29uY3VycmVudCBtb2RlIHVzYWdlXG4gKiB3aGVyZSBwcmV2aW91cyB3b3JrIGluIGByZW5kZXIoKWAgbWF5IGJlIGRpc2NhcmRlZCBiZWZvcmUgYmVpbmcgdXNlZC5cbiAqXG4gKiBUaGlzIGlzIHNhZmUgdG8gYWNjZXNzIGluIGFuIGV2ZW50IGhhbmRsZXIuXG4gKlxuICogQHBhcmFtIHZhbHVlIFRoZSBgUmVmYCB2YWx1ZVxuICovXG5mdW5jdGlvbiB1c2VDb21taXR0ZWRSZWYodmFsdWUpIHtcbiAgY29uc3QgcmVmID0gdXNlUmVmKHZhbHVlKTtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICByZWYuY3VycmVudCA9IHZhbHVlO1xuICB9LCBbdmFsdWVdKTtcbiAgcmV0dXJuIHJlZjtcbn1cbmV4cG9ydCBkZWZhdWx0IHVzZUNvbW1pdHRlZFJlZjsiXSwibmFtZXMiOlsidXNlRWZmZWN0IiwidXNlUmVmIiwidXNlQ29tbWl0dGVkUmVmIiwidmFsdWUiLCJyZWYiLCJjdXJyZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/esm/useCommittedRef.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/esm/useEventCallback.js":
/*!*************************************************************!*\
  !*** ./node_modules/@restart/hooks/esm/useEventCallback.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ useEventCallback)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _useCommittedRef__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useCommittedRef */ \"(ssr)/./node_modules/@restart/hooks/esm/useCommittedRef.js\");\n\n\nfunction useEventCallback(fn) {\n    const ref = (0,_useCommittedRef__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(fn);\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function(...args) {\n        return ref.current && ref.current(...args);\n    }, [\n        ref\n    ]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvZXNtL3VzZUV2ZW50Q2FsbGJhY2suanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFvQztBQUNZO0FBQ2pDLFNBQVNFLGlCQUFpQkMsRUFBRTtJQUN6QyxNQUFNQyxNQUFNSCw0REFBZUEsQ0FBQ0U7SUFDNUIsT0FBT0gsa0RBQVdBLENBQUMsU0FBVSxHQUFHSyxJQUFJO1FBQ2xDLE9BQU9ELElBQUlFLE9BQU8sSUFBSUYsSUFBSUUsT0FBTyxJQUFJRDtJQUN2QyxHQUFHO1FBQUNEO0tBQUk7QUFDViIsInNvdXJjZXMiOlsid2VicGFjazovL3ZlbnRhLWF1dG9zLy4vbm9kZV9tb2R1bGVzL0ByZXN0YXJ0L2hvb2tzL2VzbS91c2VFdmVudENhbGxiYWNrLmpzPzYyMTgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdXNlQ29tbWl0dGVkUmVmIGZyb20gJy4vdXNlQ29tbWl0dGVkUmVmJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHVzZUV2ZW50Q2FsbGJhY2soZm4pIHtcbiAgY29uc3QgcmVmID0gdXNlQ29tbWl0dGVkUmVmKGZuKTtcbiAgcmV0dXJuIHVzZUNhbGxiYWNrKGZ1bmN0aW9uICguLi5hcmdzKSB7XG4gICAgcmV0dXJuIHJlZi5jdXJyZW50ICYmIHJlZi5jdXJyZW50KC4uLmFyZ3MpO1xuICB9LCBbcmVmXSk7XG59Il0sIm5hbWVzIjpbInVzZUNhbGxiYWNrIiwidXNlQ29tbWl0dGVkUmVmIiwidXNlRXZlbnRDYWxsYmFjayIsImZuIiwicmVmIiwiYXJncyIsImN1cnJlbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/esm/useEventCallback.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/esm/useIsomorphicEffect.js":
/*!****************************************************************!*\
  !*** ./node_modules/@restart/hooks/esm/useIsomorphicEffect.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nconst isReactNative = typeof global !== \"undefined\" && // @ts-ignore\nglobal.navigator && // @ts-ignore\nglobal.navigator.product === \"ReactNative\";\nconst isDOM = typeof document !== \"undefined\";\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */ /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isDOM || isReactNative ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_0__.useEffect);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvZXNtL3VzZUlzb21vcnBoaWNFZmZlY3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQW1EO0FBQ25ELE1BQU1FLGdCQUFnQixPQUFPQyxXQUFXLGVBQ3hDLGFBQWE7QUFDYkEsT0FBT0MsU0FBUyxJQUNoQixhQUFhO0FBQ2JELE9BQU9DLFNBQVMsQ0FBQ0MsT0FBTyxLQUFLO0FBQzdCLE1BQU1DLFFBQVEsT0FBT0MsYUFBYTtBQUVsQzs7Ozs7OztDQU9DLEdBQ0QsaUVBQWVELFNBQVNKLGdCQUFnQkQsa0RBQWVBLEdBQUdELDRDQUFTQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdmVudGEtYXV0b3MvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvZXNtL3VzZUlzb21vcnBoaWNFZmZlY3QuanM/MmYwYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VFZmZlY3QsIHVzZUxheW91dEVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmNvbnN0IGlzUmVhY3ROYXRpdmUgPSB0eXBlb2YgZ2xvYmFsICE9PSAndW5kZWZpbmVkJyAmJlxuLy8gQHRzLWlnbm9yZVxuZ2xvYmFsLm5hdmlnYXRvciAmJlxuLy8gQHRzLWlnbm9yZVxuZ2xvYmFsLm5hdmlnYXRvci5wcm9kdWN0ID09PSAnUmVhY3ROYXRpdmUnO1xuY29uc3QgaXNET00gPSB0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnO1xuXG4vKipcbiAqIElzIGB1c2VMYXlvdXRFZmZlY3RgIGluIGEgRE9NIG9yIFJlYWN0IE5hdGl2ZSBlbnZpcm9ubWVudCwgb3RoZXJ3aXNlIHJlc29sdmVzIHRvIHVzZUVmZmVjdFxuICogT25seSB1c2VmdWwgdG8gYXZvaWQgdGhlIGNvbnNvbGUgd2FybmluZy5cbiAqXG4gKiBQUkVGRVIgYHVzZUVmZmVjdGAgVU5MRVNTIFlPVSBLTk9XIFdIQVQgWU9VIEFSRSBET0lORy5cbiAqXG4gKiBAY2F0ZWdvcnkgZWZmZWN0c1xuICovXG5leHBvcnQgZGVmYXVsdCBpc0RPTSB8fCBpc1JlYWN0TmF0aXZlID8gdXNlTGF5b3V0RWZmZWN0IDogdXNlRWZmZWN0OyJdLCJuYW1lcyI6WyJ1c2VFZmZlY3QiLCJ1c2VMYXlvdXRFZmZlY3QiLCJpc1JlYWN0TmF0aXZlIiwiZ2xvYmFsIiwibmF2aWdhdG9yIiwicHJvZHVjdCIsImlzRE9NIiwiZG9jdW1lbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/esm/useIsomorphicEffect.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/esm/useMediaQuery.js":
/*!**********************************************************!*\
  !*** ./node_modules/@restart/hooks/esm/useMediaQuery.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ useMediaQuery)\n/* harmony export */ });\n/* harmony import */ var _useIsomorphicEffect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./useIsomorphicEffect */ \"(ssr)/./node_modules/@restart/hooks/esm/useIsomorphicEffect.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst matchersByWindow = new WeakMap();\nconst getMatcher = (query, targetWindow)=>{\n    if (!query || !targetWindow) return undefined;\n    const matchers = matchersByWindow.get(targetWindow) || new Map();\n    matchersByWindow.set(targetWindow, matchers);\n    let mql = matchers.get(query);\n    if (!mql) {\n        mql = targetWindow.matchMedia(query);\n        mql.refCount = 0;\n        matchers.set(mql.media, mql);\n    }\n    return mql;\n};\n/**\n * Match a media query and get updates as the match changes. The media string is\n * passed directly to `window.matchMedia` and run as a Layout Effect, so initial\n * matches are returned before the browser has a chance to paint.\n *\n * ```tsx\n * function Page() {\n *   const isWide = useMediaQuery('min-width: 1000px')\n *\n *   return isWide ? \"very wide\" : 'not so wide'\n * }\n * ```\n *\n * Media query lists are also reused globally, hook calls for the same query\n * will only create a matcher once under the hood.\n *\n * @param query A media query\n * @param targetWindow The window to match against, uses the globally available one as a default.\n */ function useMediaQuery(query, targetWindow =  true ? undefined : 0) {\n    const mql = getMatcher(query, targetWindow);\n    const [matches, setMatches] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(()=>mql ? mql.matches : false);\n    (0,_useIsomorphicEffect__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(()=>{\n        let mql = getMatcher(query, targetWindow);\n        if (!mql) {\n            return setMatches(false);\n        }\n        let matchers = matchersByWindow.get(targetWindow);\n        const handleChange = ()=>{\n            setMatches(mql.matches);\n        };\n        mql.refCount++;\n        mql.addListener(handleChange);\n        handleChange();\n        return ()=>{\n            mql.removeListener(handleChange);\n            mql.refCount--;\n            if (mql.refCount <= 0) {\n                matchers == null ? void 0 : matchers.delete(mql.media);\n            }\n            mql = undefined;\n        };\n    }, [\n        query\n    ]);\n    return matches;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvZXNtL3VzZU1lZGlhUXVlcnkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE4QztBQUNiO0FBQ2pDLE1BQU1FLG1CQUFtQixJQUFJQztBQUM3QixNQUFNQyxhQUFhLENBQUNDLE9BQU9DO0lBQ3pCLElBQUksQ0FBQ0QsU0FBUyxDQUFDQyxjQUFjLE9BQU9DO0lBQ3BDLE1BQU1DLFdBQVdOLGlCQUFpQk8sR0FBRyxDQUFDSCxpQkFBaUIsSUFBSUk7SUFDM0RSLGlCQUFpQlMsR0FBRyxDQUFDTCxjQUFjRTtJQUNuQyxJQUFJSSxNQUFNSixTQUFTQyxHQUFHLENBQUNKO0lBQ3ZCLElBQUksQ0FBQ08sS0FBSztRQUNSQSxNQUFNTixhQUFhTyxVQUFVLENBQUNSO1FBQzlCTyxJQUFJRSxRQUFRLEdBQUc7UUFDZk4sU0FBU0csR0FBRyxDQUFDQyxJQUFJRyxLQUFLLEVBQUVIO0lBQzFCO0lBQ0EsT0FBT0E7QUFDVDtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FrQkMsR0FDYyxTQUFTSSxjQUFjWCxLQUFLLEVBQUVDLGVBQWUsS0FBa0IsR0FBY0MsWUFBWVUsQ0FBTTtJQUM1RyxNQUFNTCxNQUFNUixXQUFXQyxPQUFPQztJQUM5QixNQUFNLENBQUNZLFNBQVNDLFdBQVcsR0FBR2xCLCtDQUFRQSxDQUFDLElBQU1XLE1BQU1BLElBQUlNLE9BQU8sR0FBRztJQUNqRWxCLGdFQUFTQSxDQUFDO1FBQ1IsSUFBSVksTUFBTVIsV0FBV0MsT0FBT0M7UUFDNUIsSUFBSSxDQUFDTSxLQUFLO1lBQ1IsT0FBT08sV0FBVztRQUNwQjtRQUNBLElBQUlYLFdBQVdOLGlCQUFpQk8sR0FBRyxDQUFDSDtRQUNwQyxNQUFNYyxlQUFlO1lBQ25CRCxXQUFXUCxJQUFJTSxPQUFPO1FBQ3hCO1FBQ0FOLElBQUlFLFFBQVE7UUFDWkYsSUFBSVMsV0FBVyxDQUFDRDtRQUNoQkE7UUFDQSxPQUFPO1lBQ0xSLElBQUlVLGNBQWMsQ0FBQ0Y7WUFDbkJSLElBQUlFLFFBQVE7WUFDWixJQUFJRixJQUFJRSxRQUFRLElBQUksR0FBRztnQkFDckJOLFlBQVksT0FBTyxLQUFLLElBQUlBLFNBQVNlLE1BQU0sQ0FBQ1gsSUFBSUcsS0FBSztZQUN2RDtZQUNBSCxNQUFNTDtRQUNSO0lBQ0YsR0FBRztRQUFDRjtLQUFNO0lBQ1YsT0FBT2E7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL3ZlbnRhLWF1dG9zLy4vbm9kZV9tb2R1bGVzL0ByZXN0YXJ0L2hvb2tzL2VzbS91c2VNZWRpYVF1ZXJ5LmpzP2I4MmEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHVzZUVmZmVjdCBmcm9tICcuL3VzZUlzb21vcnBoaWNFZmZlY3QnO1xuaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5jb25zdCBtYXRjaGVyc0J5V2luZG93ID0gbmV3IFdlYWtNYXAoKTtcbmNvbnN0IGdldE1hdGNoZXIgPSAocXVlcnksIHRhcmdldFdpbmRvdykgPT4ge1xuICBpZiAoIXF1ZXJ5IHx8ICF0YXJnZXRXaW5kb3cpIHJldHVybiB1bmRlZmluZWQ7XG4gIGNvbnN0IG1hdGNoZXJzID0gbWF0Y2hlcnNCeVdpbmRvdy5nZXQodGFyZ2V0V2luZG93KSB8fCBuZXcgTWFwKCk7XG4gIG1hdGNoZXJzQnlXaW5kb3cuc2V0KHRhcmdldFdpbmRvdywgbWF0Y2hlcnMpO1xuICBsZXQgbXFsID0gbWF0Y2hlcnMuZ2V0KHF1ZXJ5KTtcbiAgaWYgKCFtcWwpIHtcbiAgICBtcWwgPSB0YXJnZXRXaW5kb3cubWF0Y2hNZWRpYShxdWVyeSk7XG4gICAgbXFsLnJlZkNvdW50ID0gMDtcbiAgICBtYXRjaGVycy5zZXQobXFsLm1lZGlhLCBtcWwpO1xuICB9XG4gIHJldHVybiBtcWw7XG59O1xuLyoqXG4gKiBNYXRjaCBhIG1lZGlhIHF1ZXJ5IGFuZCBnZXQgdXBkYXRlcyBhcyB0aGUgbWF0Y2ggY2hhbmdlcy4gVGhlIG1lZGlhIHN0cmluZyBpc1xuICogcGFzc2VkIGRpcmVjdGx5IHRvIGB3aW5kb3cubWF0Y2hNZWRpYWAgYW5kIHJ1biBhcyBhIExheW91dCBFZmZlY3QsIHNvIGluaXRpYWxcbiAqIG1hdGNoZXMgYXJlIHJldHVybmVkIGJlZm9yZSB0aGUgYnJvd3NlciBoYXMgYSBjaGFuY2UgdG8gcGFpbnQuXG4gKlxuICogYGBgdHN4XG4gKiBmdW5jdGlvbiBQYWdlKCkge1xuICogICBjb25zdCBpc1dpZGUgPSB1c2VNZWRpYVF1ZXJ5KCdtaW4td2lkdGg6IDEwMDBweCcpXG4gKlxuICogICByZXR1cm4gaXNXaWRlID8gXCJ2ZXJ5IHdpZGVcIiA6ICdub3Qgc28gd2lkZSdcbiAqIH1cbiAqIGBgYFxuICpcbiAqIE1lZGlhIHF1ZXJ5IGxpc3RzIGFyZSBhbHNvIHJldXNlZCBnbG9iYWxseSwgaG9vayBjYWxscyBmb3IgdGhlIHNhbWUgcXVlcnlcbiAqIHdpbGwgb25seSBjcmVhdGUgYSBtYXRjaGVyIG9uY2UgdW5kZXIgdGhlIGhvb2QuXG4gKlxuICogQHBhcmFtIHF1ZXJ5IEEgbWVkaWEgcXVlcnlcbiAqIEBwYXJhbSB0YXJnZXRXaW5kb3cgVGhlIHdpbmRvdyB0byBtYXRjaCBhZ2FpbnN0LCB1c2VzIHRoZSBnbG9iYWxseSBhdmFpbGFibGUgb25lIGFzIGEgZGVmYXVsdC5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXNlTWVkaWFRdWVyeShxdWVyeSwgdGFyZ2V0V2luZG93ID0gdHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcgPyB1bmRlZmluZWQgOiB3aW5kb3cpIHtcbiAgY29uc3QgbXFsID0gZ2V0TWF0Y2hlcihxdWVyeSwgdGFyZ2V0V2luZG93KTtcbiAgY29uc3QgW21hdGNoZXMsIHNldE1hdGNoZXNdID0gdXNlU3RhdGUoKCkgPT4gbXFsID8gbXFsLm1hdGNoZXMgOiBmYWxzZSk7XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgbGV0IG1xbCA9IGdldE1hdGNoZXIocXVlcnksIHRhcmdldFdpbmRvdyk7XG4gICAgaWYgKCFtcWwpIHtcbiAgICAgIHJldHVybiBzZXRNYXRjaGVzKGZhbHNlKTtcbiAgICB9XG4gICAgbGV0IG1hdGNoZXJzID0gbWF0Y2hlcnNCeVdpbmRvdy5nZXQodGFyZ2V0V2luZG93KTtcbiAgICBjb25zdCBoYW5kbGVDaGFuZ2UgPSAoKSA9PiB7XG4gICAgICBzZXRNYXRjaGVzKG1xbC5tYXRjaGVzKTtcbiAgICB9O1xuICAgIG1xbC5yZWZDb3VudCsrO1xuICAgIG1xbC5hZGRMaXN0ZW5lcihoYW5kbGVDaGFuZ2UpO1xuICAgIGhhbmRsZUNoYW5nZSgpO1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBtcWwucmVtb3ZlTGlzdGVuZXIoaGFuZGxlQ2hhbmdlKTtcbiAgICAgIG1xbC5yZWZDb3VudC0tO1xuICAgICAgaWYgKG1xbC5yZWZDb3VudCA8PSAwKSB7XG4gICAgICAgIG1hdGNoZXJzID09IG51bGwgPyB2b2lkIDAgOiBtYXRjaGVycy5kZWxldGUobXFsLm1lZGlhKTtcbiAgICAgIH1cbiAgICAgIG1xbCA9IHVuZGVmaW5lZDtcbiAgICB9O1xuICB9LCBbcXVlcnldKTtcbiAgcmV0dXJuIG1hdGNoZXM7XG59Il0sIm5hbWVzIjpbInVzZUVmZmVjdCIsInVzZVN0YXRlIiwibWF0Y2hlcnNCeVdpbmRvdyIsIldlYWtNYXAiLCJnZXRNYXRjaGVyIiwicXVlcnkiLCJ0YXJnZXRXaW5kb3ciLCJ1bmRlZmluZWQiLCJtYXRjaGVycyIsImdldCIsIk1hcCIsInNldCIsIm1xbCIsIm1hdGNoTWVkaWEiLCJyZWZDb3VudCIsIm1lZGlhIiwidXNlTWVkaWFRdWVyeSIsIndpbmRvdyIsIm1hdGNoZXMiLCJzZXRNYXRjaGVzIiwiaGFuZGxlQ2hhbmdlIiwiYWRkTGlzdGVuZXIiLCJyZW1vdmVMaXN0ZW5lciIsImRlbGV0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/esm/useMediaQuery.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/hooks/esm/useMergedRefs.js":
/*!**********************************************************!*\
  !*** ./node_modules/@restart/hooks/esm/useMergedRefs.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   mergeRefs: () => (/* binding */ mergeRefs)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nconst toFnRef = (ref)=>!ref || typeof ref === \"function\" ? ref : (value)=>{\n        ref.current = value;\n    };\nfunction mergeRefs(refA, refB) {\n    const a = toFnRef(refA);\n    const b = toFnRef(refB);\n    return (value)=>{\n        if (a) a(value);\n        if (b) b(value);\n    };\n}\n/**\n * Create and returns a single callback ref composed from two other Refs.\n *\n * ```tsx\n * const Button = React.forwardRef((props, ref) => {\n *   const [element, attachRef] = useCallbackRef<HTMLButtonElement>();\n *   const mergedRef = useMergedRefs(ref, attachRef);\n *\n *   return <button ref={mergedRef} {...props}/>\n * })\n * ```\n *\n * @param refA A Callback or mutable Ref\n * @param refB A Callback or mutable Ref\n * @category refs\n */ function useMergedRefs(refA, refB) {\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>mergeRefs(refA, refB), [\n        refA,\n        refB\n    ]);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useMergedRefs);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvZXNtL3VzZU1lcmdlZFJlZnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFnQztBQUNoQyxNQUFNQyxVQUFVQyxDQUFBQSxNQUFPLENBQUNBLE9BQU8sT0FBT0EsUUFBUSxhQUFhQSxNQUFNQyxDQUFBQTtRQUMvREQsSUFBSUUsT0FBTyxHQUFHRDtJQUNoQjtBQUNPLFNBQVNFLFVBQVVDLElBQUksRUFBRUMsSUFBSTtJQUNsQyxNQUFNQyxJQUFJUCxRQUFRSztJQUNsQixNQUFNRyxJQUFJUixRQUFRTTtJQUNsQixPQUFPSixDQUFBQTtRQUNMLElBQUlLLEdBQUdBLEVBQUVMO1FBQ1QsSUFBSU0sR0FBR0EsRUFBRU47SUFDWDtBQUNGO0FBRUE7Ozs7Ozs7Ozs7Ozs7OztDQWVDLEdBQ0QsU0FBU08sY0FBY0osSUFBSSxFQUFFQyxJQUFJO0lBQy9CLE9BQU9QLDhDQUFPQSxDQUFDLElBQU1LLFVBQVVDLE1BQU1DLE9BQU87UUFBQ0Q7UUFBTUM7S0FBSztBQUMxRDtBQUNBLGlFQUFlRyxhQUFhQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdmVudGEtYXV0b3MvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvZXNtL3VzZU1lcmdlZFJlZnMuanM/N2E5MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuY29uc3QgdG9GblJlZiA9IHJlZiA9PiAhcmVmIHx8IHR5cGVvZiByZWYgPT09ICdmdW5jdGlvbicgPyByZWYgOiB2YWx1ZSA9PiB7XG4gIHJlZi5jdXJyZW50ID0gdmFsdWU7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIG1lcmdlUmVmcyhyZWZBLCByZWZCKSB7XG4gIGNvbnN0IGEgPSB0b0ZuUmVmKHJlZkEpO1xuICBjb25zdCBiID0gdG9GblJlZihyZWZCKTtcbiAgcmV0dXJuIHZhbHVlID0+IHtcbiAgICBpZiAoYSkgYSh2YWx1ZSk7XG4gICAgaWYgKGIpIGIodmFsdWUpO1xuICB9O1xufVxuXG4vKipcbiAqIENyZWF0ZSBhbmQgcmV0dXJucyBhIHNpbmdsZSBjYWxsYmFjayByZWYgY29tcG9zZWQgZnJvbSB0d28gb3RoZXIgUmVmcy5cbiAqXG4gKiBgYGB0c3hcbiAqIGNvbnN0IEJ1dHRvbiA9IFJlYWN0LmZvcndhcmRSZWYoKHByb3BzLCByZWYpID0+IHtcbiAqICAgY29uc3QgW2VsZW1lbnQsIGF0dGFjaFJlZl0gPSB1c2VDYWxsYmFja1JlZjxIVE1MQnV0dG9uRWxlbWVudD4oKTtcbiAqICAgY29uc3QgbWVyZ2VkUmVmID0gdXNlTWVyZ2VkUmVmcyhyZWYsIGF0dGFjaFJlZik7XG4gKlxuICogICByZXR1cm4gPGJ1dHRvbiByZWY9e21lcmdlZFJlZn0gey4uLnByb3BzfS8+XG4gKiB9KVxuICogYGBgXG4gKlxuICogQHBhcmFtIHJlZkEgQSBDYWxsYmFjayBvciBtdXRhYmxlIFJlZlxuICogQHBhcmFtIHJlZkIgQSBDYWxsYmFjayBvciBtdXRhYmxlIFJlZlxuICogQGNhdGVnb3J5IHJlZnNcbiAqL1xuZnVuY3Rpb24gdXNlTWVyZ2VkUmVmcyhyZWZBLCByZWZCKSB7XG4gIHJldHVybiB1c2VNZW1vKCgpID0+IG1lcmdlUmVmcyhyZWZBLCByZWZCKSwgW3JlZkEsIHJlZkJdKTtcbn1cbmV4cG9ydCBkZWZhdWx0IHVzZU1lcmdlZFJlZnM7Il0sIm5hbWVzIjpbInVzZU1lbW8iLCJ0b0ZuUmVmIiwicmVmIiwidmFsdWUiLCJjdXJyZW50IiwibWVyZ2VSZWZzIiwicmVmQSIsInJlZkIiLCJhIiwiYiIsInVzZU1lcmdlZFJlZnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/hooks/esm/useMergedRefs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/Anchor.js":
/*!************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/Anchor.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports.isTrivialHref = isTrivialHref;\nexports[\"default\"] = void 0;\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar _hooks = __webpack_require__(/*! @restart/hooks */ \"(ssr)/./node_modules/@restart/hooks/cjs/index.js\");\nvar _Button = __webpack_require__(/*! ./Button */ \"(ssr)/./node_modules/@restart/ui/cjs/Button.js\");\nvar _jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\nconst _excluded = [\n    \"onKeyDown\"\n];\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\nfunction isTrivialHref(href) {\n    return !href || href.trim() === \"#\";\n}\n/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */ const Anchor = /*#__PURE__*/ React.forwardRef((_ref, ref)=>{\n    let { onKeyDown } = _ref, props = _objectWithoutPropertiesLoose(_ref, _excluded);\n    const [buttonProps] = (0, _Button.useButtonProps)(Object.assign({\n        tagName: \"a\"\n    }, props));\n    const handleKeyDown = (0, _hooks.useEventCallback)((e)=>{\n        buttonProps.onKeyDown(e);\n        onKeyDown == null ? void 0 : onKeyDown(e);\n    });\n    if (isTrivialHref(props.href) || props.role === \"button\") {\n        return /*#__PURE__*/ (0, _jsxRuntime.jsx)(\"a\", Object.assign({\n            ref: ref\n        }, props, buttonProps, {\n            onKeyDown: handleKeyDown\n        }));\n    }\n    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(\"a\", Object.assign({\n        ref: ref\n    }, props, {\n        onKeyDown: onKeyDown\n    }));\n});\nAnchor.displayName = \"Anchor\";\nvar _default = Anchor;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/Anchor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/Button.js":
/*!************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/Button.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports.isTrivialHref = isTrivialHref;\nexports.useButtonProps = useButtonProps;\nexports[\"default\"] = void 0;\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar _jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\nconst _excluded = [\n    \"as\",\n    \"disabled\"\n];\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\nfunction isTrivialHref(href) {\n    return !href || href.trim() === \"#\";\n}\nfunction useButtonProps({ tagName, disabled, href, target, rel, role, onClick, tabIndex = 0, type }) {\n    if (!tagName) {\n        if (href != null || target != null || rel != null) {\n            tagName = \"a\";\n        } else {\n            tagName = \"button\";\n        }\n    }\n    const meta = {\n        tagName\n    };\n    if (tagName === \"button\") {\n        return [\n            {\n                type: type || \"button\",\n                disabled\n            },\n            meta\n        ];\n    }\n    const handleClick = (event)=>{\n        if (disabled || tagName === \"a\" && isTrivialHref(href)) {\n            event.preventDefault();\n        }\n        if (disabled) {\n            event.stopPropagation();\n            return;\n        }\n        onClick == null ? void 0 : onClick(event);\n    };\n    const handleKeyDown = (event)=>{\n        if (event.key === \" \") {\n            event.preventDefault();\n            handleClick(event);\n        }\n    };\n    if (tagName === \"a\") {\n        // Ensure there's a href so Enter can trigger anchor button.\n        href || (href = \"#\");\n        if (disabled) {\n            href = undefined;\n        }\n    }\n    return [\n        {\n            role: role != null ? role : \"button\",\n            // explicitly undefined so that it overrides the props disabled in a spread\n            // e.g. <Tag {...props} {...hookProps} />\n            disabled: undefined,\n            tabIndex: disabled ? undefined : tabIndex,\n            href,\n            target: tagName === \"a\" ? target : undefined,\n            \"aria-disabled\": !disabled ? undefined : disabled,\n            rel: tagName === \"a\" ? rel : undefined,\n            onClick: handleClick,\n            onKeyDown: handleKeyDown\n        },\n        meta\n    ];\n}\nconst Button = /*#__PURE__*/ React.forwardRef((_ref, ref)=>{\n    let { as: asProp, disabled } = _ref, props = _objectWithoutPropertiesLoose(_ref, _excluded);\n    const [buttonProps, { tagName: Component }] = useButtonProps(Object.assign({\n        tagName: asProp,\n        disabled\n    }, props));\n    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(Component, Object.assign({}, props, buttonProps, {\n        ref: ref\n    }));\n});\nButton.displayName = \"Button\";\nvar _default = Button;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/Button.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/DataKey.js":
/*!*************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/DataKey.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nexports.__esModule = true;\nexports.dataAttr = dataAttr;\nexports.dataProp = dataProp;\nexports.PROPERTY_PREFIX = exports.ATTRIBUTE_PREFIX = void 0;\nconst ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexports.ATTRIBUTE_PREFIX = ATTRIBUTE_PREFIX;\nconst PROPERTY_PREFIX = `rrUi`;\nexports.PROPERTY_PREFIX = PROPERTY_PREFIX;\nfunction dataAttr(property) {\n    return `${ATTRIBUTE_PREFIX}${property}`;\n}\nfunction dataProp(property) {\n    return `${PROPERTY_PREFIX}${property}`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvdWkvY2pzL0RhdGFLZXkuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsa0JBQWtCLEdBQUc7QUFDckJBLGdCQUFnQixHQUFHRTtBQUNuQkYsZ0JBQWdCLEdBQUdHO0FBQ25CSCx1QkFBdUIsR0FBR0Esd0JBQXdCLEdBQUcsS0FBSztBQUMxRCxNQUFNSyxtQkFBbUIsQ0FBQyxXQUFXLENBQUM7QUFDdENMLHdCQUF3QixHQUFHSztBQUMzQixNQUFNRCxrQkFBa0IsQ0FBQyxJQUFJLENBQUM7QUFDOUJKLHVCQUF1QixHQUFHSTtBQUMxQixTQUFTRixTQUFTSSxRQUFRO0lBQ3hCLE9BQU8sQ0FBQyxFQUFFRCxpQkFBaUIsRUFBRUMsU0FBUyxDQUFDO0FBQ3pDO0FBQ0EsU0FBU0gsU0FBU0csUUFBUTtJQUN4QixPQUFPLENBQUMsRUFBRUYsZ0JBQWdCLEVBQUVFLFNBQVMsQ0FBQztBQUN4QyIsInNvdXJjZXMiOlsid2VicGFjazovL3ZlbnRhLWF1dG9zLy4vbm9kZV9tb2R1bGVzL0ByZXN0YXJ0L3VpL2Nqcy9EYXRhS2V5LmpzPzE2NTciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRhdGFBdHRyID0gZGF0YUF0dHI7XG5leHBvcnRzLmRhdGFQcm9wID0gZGF0YVByb3A7XG5leHBvcnRzLlBST1BFUlRZX1BSRUZJWCA9IGV4cG9ydHMuQVRUUklCVVRFX1BSRUZJWCA9IHZvaWQgMDtcbmNvbnN0IEFUVFJJQlVURV9QUkVGSVggPSBgZGF0YS1yci11aS1gO1xuZXhwb3J0cy5BVFRSSUJVVEVfUFJFRklYID0gQVRUUklCVVRFX1BSRUZJWDtcbmNvbnN0IFBST1BFUlRZX1BSRUZJWCA9IGByclVpYDtcbmV4cG9ydHMuUFJPUEVSVFlfUFJFRklYID0gUFJPUEVSVFlfUFJFRklYO1xuZnVuY3Rpb24gZGF0YUF0dHIocHJvcGVydHkpIHtcbiAgcmV0dXJuIGAke0FUVFJJQlVURV9QUkVGSVh9JHtwcm9wZXJ0eX1gO1xufVxuZnVuY3Rpb24gZGF0YVByb3AocHJvcGVydHkpIHtcbiAgcmV0dXJuIGAke1BST1BFUlRZX1BSRUZJWH0ke3Byb3BlcnR5fWA7XG59Il0sIm5hbWVzIjpbImV4cG9ydHMiLCJfX2VzTW9kdWxlIiwiZGF0YUF0dHIiLCJkYXRhUHJvcCIsIlBST1BFUlRZX1BSRUZJWCIsIkFUVFJJQlVURV9QUkVGSVgiLCJwcm9wZXJ0eSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/DataKey.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/Dropdown.js":
/*!**************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/Dropdown.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _querySelectorAll = _interopRequireDefault(__webpack_require__(/*! dom-helpers/querySelectorAll */ \"(ssr)/./node_modules/dom-helpers/esm/querySelectorAll.js\"));\nvar _addEventListener = _interopRequireDefault(__webpack_require__(/*! dom-helpers/addEventListener */ \"(ssr)/./node_modules/dom-helpers/esm/addEventListener.js\"));\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar _uncontrollable = __webpack_require__(/*! uncontrollable */ \"(ssr)/./node_modules/@restart/ui/node_modules/uncontrollable/lib/esm/index.js\");\nvar _usePrevious = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/usePrevious */ \"(ssr)/./node_modules/@restart/hooks/cjs/usePrevious.js\"));\nvar _useForceUpdate = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/useForceUpdate */ \"(ssr)/./node_modules/@restart/hooks/cjs/useForceUpdate.js\"));\nvar _useEventListener = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/useEventListener */ \"(ssr)/./node_modules/@restart/hooks/cjs/useEventListener.js\"));\nvar _useEventCallback = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/useEventCallback */ \"(ssr)/./node_modules/@restart/hooks/cjs/useEventCallback.js\"));\nvar _DropdownContext = _interopRequireDefault(__webpack_require__(/*! ./DropdownContext */ \"(ssr)/./node_modules/@restart/ui/cjs/DropdownContext.js\"));\nvar _DropdownMenu = _interopRequireDefault(__webpack_require__(/*! ./DropdownMenu */ \"(ssr)/./node_modules/@restart/ui/cjs/DropdownMenu.js\"));\nvar _DropdownToggle = _interopRequireWildcard(__webpack_require__(/*! ./DropdownToggle */ \"(ssr)/./node_modules/@restart/ui/cjs/DropdownToggle.js\"));\nvar _DropdownItem = _interopRequireDefault(__webpack_require__(/*! ./DropdownItem */ \"(ssr)/./node_modules/@restart/ui/cjs/DropdownItem.js\"));\nvar _SelectableContext = _interopRequireDefault(__webpack_require__(/*! ./SelectableContext */ \"(ssr)/./node_modules/@restart/ui/cjs/SelectableContext.js\"));\nvar _DataKey = __webpack_require__(/*! ./DataKey */ \"(ssr)/./node_modules/@restart/ui/cjs/DataKey.js\");\nvar _useWindow = _interopRequireDefault(__webpack_require__(/*! ./useWindow */ \"(ssr)/./node_modules/@restart/ui/cjs/useWindow.js\"));\nvar _jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction useRefWithUpdate() {\n    const forceUpdate = (0, _useForceUpdate.default)();\n    const ref = (0, React.useRef)(null);\n    const attachRef = (0, React.useCallback)((element)=>{\n        ref.current = element;\n        // ensure that a menu set triggers an update for consumers\n        forceUpdate();\n    }, [\n        forceUpdate\n    ]);\n    return [\n        ref,\n        attachRef\n    ];\n}\n/**\n * @displayName Dropdown\n * @public\n */ function Dropdown({ defaultShow, show: rawShow, onSelect, onToggle: rawOnToggle, itemSelector = `* [${(0, _DataKey.dataAttr)(\"dropdown-item\")}]`, focusFirstItemOnShow, placement = \"bottom-start\", children }) {\n    const window = (0, _useWindow.default)();\n    const [show, onToggle] = (0, _uncontrollable.useUncontrolledProp)(rawShow, defaultShow, rawOnToggle);\n    // We use normal refs instead of useCallbackRef in order to populate the\n    // the value as quickly as possible, otherwise the effect to focus the element\n    // may run before the state value is set\n    const [menuRef, setMenu] = useRefWithUpdate();\n    const menuElement = menuRef.current;\n    const [toggleRef, setToggle] = useRefWithUpdate();\n    const toggleElement = toggleRef.current;\n    const lastShow = (0, _usePrevious.default)(show);\n    const lastSourceEvent = (0, React.useRef)(null);\n    const focusInDropdown = (0, React.useRef)(false);\n    const onSelectCtx = (0, React.useContext)(_SelectableContext.default);\n    const toggle = (0, React.useCallback)((nextShow, event, source = event == null ? void 0 : event.type)=>{\n        onToggle(nextShow, {\n            originalEvent: event,\n            source\n        });\n    }, [\n        onToggle\n    ]);\n    const handleSelect = (0, _useEventCallback.default)((key, event)=>{\n        onSelect == null ? void 0 : onSelect(key, event);\n        toggle(false, event, \"select\");\n        if (!event.isPropagationStopped()) {\n            onSelectCtx == null ? void 0 : onSelectCtx(key, event);\n        }\n    });\n    const context = (0, React.useMemo)(()=>({\n            toggle,\n            placement,\n            show,\n            menuElement,\n            toggleElement,\n            setMenu,\n            setToggle\n        }), [\n        toggle,\n        placement,\n        show,\n        menuElement,\n        toggleElement,\n        setMenu,\n        setToggle\n    ]);\n    if (menuElement && lastShow && !show) {\n        focusInDropdown.current = menuElement.contains(menuElement.ownerDocument.activeElement);\n    }\n    const focusToggle = (0, _useEventCallback.default)(()=>{\n        if (toggleElement && toggleElement.focus) {\n            toggleElement.focus();\n        }\n    });\n    const maybeFocusFirst = (0, _useEventCallback.default)(()=>{\n        const type = lastSourceEvent.current;\n        let focusType = focusFirstItemOnShow;\n        if (focusType == null) {\n            focusType = menuRef.current && (0, _DropdownToggle.isRoleMenu)(menuRef.current) ? \"keyboard\" : false;\n        }\n        if (focusType === false || focusType === \"keyboard\" && !/^key.+$/.test(type)) {\n            return;\n        }\n        const first = (0, _querySelectorAll.default)(menuRef.current, itemSelector)[0];\n        if (first && first.focus) first.focus();\n    });\n    (0, React.useEffect)(()=>{\n        if (show) maybeFocusFirst();\n        else if (focusInDropdown.current) {\n            focusInDropdown.current = false;\n            focusToggle();\n        }\n    // only `show` should be changing\n    }, [\n        show,\n        focusInDropdown,\n        focusToggle,\n        maybeFocusFirst\n    ]);\n    (0, React.useEffect)(()=>{\n        lastSourceEvent.current = null;\n    });\n    const getNextFocusedChild = (current, offset)=>{\n        if (!menuRef.current) return null;\n        const items = (0, _querySelectorAll.default)(menuRef.current, itemSelector);\n        let index = items.indexOf(current) + offset;\n        index = Math.max(0, Math.min(index, items.length));\n        return items[index];\n    };\n    (0, _useEventListener.default)((0, React.useCallback)(()=>window.document, [\n        window\n    ]), \"keydown\", (event)=>{\n        var _menuRef$current, _toggleRef$current;\n        const { key } = event;\n        const target = event.target;\n        const fromMenu = (_menuRef$current = menuRef.current) == null ? void 0 : _menuRef$current.contains(target);\n        const fromToggle = (_toggleRef$current = toggleRef.current) == null ? void 0 : _toggleRef$current.contains(target);\n        // Second only to https://github.com/twbs/bootstrap/blob/8cfbf6933b8a0146ac3fbc369f19e520bd1ebdac/js/src/dropdown.js#L400\n        // in inscrutability\n        const isInput = /input|textarea/i.test(target.tagName);\n        if (isInput && (key === \" \" || key !== \"Escape\" && fromMenu || key === \"Escape\" && target.type === \"search\")) {\n            return;\n        }\n        if (!fromMenu && !fromToggle) {\n            return;\n        }\n        if (key === \"Tab\" && (!menuRef.current || !show)) {\n            return;\n        }\n        lastSourceEvent.current = event.type;\n        const meta = {\n            originalEvent: event,\n            source: event.type\n        };\n        switch(key){\n            case \"ArrowUp\":\n                {\n                    const next = getNextFocusedChild(target, -1);\n                    if (next && next.focus) next.focus();\n                    event.preventDefault();\n                    return;\n                }\n            case \"ArrowDown\":\n                event.preventDefault();\n                if (!show) {\n                    onToggle(true, meta);\n                } else {\n                    const next = getNextFocusedChild(target, 1);\n                    if (next && next.focus) next.focus();\n                }\n                return;\n            case \"Tab\":\n                // on keydown the target is the element being tabbed FROM, we need that\n                // to know if this event is relevant to this dropdown (e.g. in this menu).\n                // On `keyup` the target is the element being tagged TO which we use to check\n                // if focus has left the menu\n                (0, _addEventListener.default)(target.ownerDocument, \"keyup\", (e)=>{\n                    var _menuRef$current2;\n                    if (e.key === \"Tab\" && !e.target || !((_menuRef$current2 = menuRef.current) != null && _menuRef$current2.contains(e.target))) {\n                        onToggle(false, meta);\n                    }\n                }, {\n                    once: true\n                });\n                break;\n            case \"Escape\":\n                if (key === \"Escape\") {\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                onToggle(false, meta);\n                break;\n            default:\n        }\n    });\n    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_SelectableContext.default.Provider, {\n        value: handleSelect,\n        children: /*#__PURE__*/ (0, _jsxRuntime.jsx)(_DropdownContext.default.Provider, {\n            value: context,\n            children: children\n        })\n    });\n}\nDropdown.displayName = \"Dropdown\";\nDropdown.Menu = _DropdownMenu.default;\nDropdown.Toggle = _DropdownToggle.default;\nDropdown.Item = _DropdownItem.default;\nvar _default = Dropdown;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/Dropdown.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/DropdownContext.js":
/*!*********************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/DropdownContext.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nconst DropdownContext = /*#__PURE__*/ React.createContext(null);\nvar _default = DropdownContext;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvdWkvY2pzL0Ryb3Bkb3duQ29udGV4dC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSxrQkFBa0IsR0FBRztBQUNyQkEsa0JBQWUsR0FBRyxLQUFLO0FBQ3ZCLElBQUlHLFFBQVFDLHdCQUF3QkMsbUJBQU9BLENBQUMsd0dBQU87QUFDbkQsU0FBU0MseUJBQXlCQyxXQUFXO0lBQUksSUFBSSxPQUFPQyxZQUFZLFlBQVksT0FBTztJQUFNLElBQUlDLG9CQUFvQixJQUFJRDtJQUFXLElBQUlFLG1CQUFtQixJQUFJRjtJQUFXLE9BQU8sQ0FBQ0YsMkJBQTJCLFNBQVVDLFdBQVc7UUFBSSxPQUFPQSxjQUFjRyxtQkFBbUJEO0lBQW1CLEdBQUdGO0FBQWM7QUFDdFQsU0FBU0gsd0JBQXdCTyxHQUFHLEVBQUVKLFdBQVc7SUFBSSxJQUFJLENBQUNBLGVBQWVJLE9BQU9BLElBQUlWLFVBQVUsRUFBRTtRQUFFLE9BQU9VO0lBQUs7SUFBRSxJQUFJQSxRQUFRLFFBQVEsT0FBT0EsUUFBUSxZQUFZLE9BQU9BLFFBQVEsWUFBWTtRQUFFLE9BQU87WUFBRVQsU0FBU1M7UUFBSTtJQUFHO0lBQUUsSUFBSUMsUUFBUU4seUJBQXlCQztJQUFjLElBQUlLLFNBQVNBLE1BQU1DLEdBQUcsQ0FBQ0YsTUFBTTtRQUFFLE9BQU9DLE1BQU1FLEdBQUcsQ0FBQ0g7SUFBTTtJQUFFLElBQUlJLFNBQVMsQ0FBQztJQUFHLElBQUlDLHdCQUF3QkMsT0FBT0MsY0FBYyxJQUFJRCxPQUFPRSx3QkFBd0I7SUFBRSxJQUFLLElBQUlDLE9BQU9ULElBQUs7UUFBRSxJQUFJUyxRQUFRLGFBQWFILE9BQU9JLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNaLEtBQUtTLE1BQU07WUFBRSxJQUFJSSxPQUFPUix3QkFBd0JDLE9BQU9FLHdCQUF3QixDQUFDUixLQUFLUyxPQUFPO1lBQU0sSUFBSUksUUFBU0EsQ0FBQUEsS0FBS1YsR0FBRyxJQUFJVSxLQUFLQyxHQUFHLEdBQUc7Z0JBQUVSLE9BQU9DLGNBQWMsQ0FBQ0gsUUFBUUssS0FBS0k7WUFBTyxPQUFPO2dCQUFFVCxNQUFNLENBQUNLLElBQUksR0FBR1QsR0FBRyxDQUFDUyxJQUFJO1lBQUU7UUFBRTtJQUFFO0lBQUVMLE9BQU9iLE9BQU8sR0FBR1M7SUFBSyxJQUFJQyxPQUFPO1FBQUVBLE1BQU1hLEdBQUcsQ0FBQ2QsS0FBS0k7SUFBUztJQUFFLE9BQU9BO0FBQVE7QUFDbnlCLE1BQU1XLGtCQUFrQixXQUFXLEdBQUV2QixNQUFNd0IsYUFBYSxDQUFDO0FBQ3pELElBQUlDLFdBQVdGO0FBQ2YxQixrQkFBZSxHQUFHNEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92ZW50YS1hdXRvcy8uL25vZGVfbW9kdWxlcy9AcmVzdGFydC91aS9janMvRHJvcGRvd25Db250ZXh0LmpzP2NlOTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgUmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKFwicmVhY3RcIikpO1xuZnVuY3Rpb24gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKG5vZGVJbnRlcm9wKSB7IGlmICh0eXBlb2YgV2Vha01hcCAhPT0gXCJmdW5jdGlvblwiKSByZXR1cm4gbnVsbDsgdmFyIGNhY2hlQmFiZWxJbnRlcm9wID0gbmV3IFdlYWtNYXAoKTsgdmFyIGNhY2hlTm9kZUludGVyb3AgPSBuZXcgV2Vha01hcCgpOyByZXR1cm4gKF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSA9IGZ1bmN0aW9uIChub2RlSW50ZXJvcCkgeyByZXR1cm4gbm9kZUludGVyb3AgPyBjYWNoZU5vZGVJbnRlcm9wIDogY2FjaGVCYWJlbEludGVyb3A7IH0pKG5vZGVJbnRlcm9wKTsgfVxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQob2JqLCBub2RlSW50ZXJvcCkgeyBpZiAoIW5vZGVJbnRlcm9wICYmIG9iaiAmJiBvYmouX19lc01vZHVsZSkgeyByZXR1cm4gb2JqOyB9IGlmIChvYmogPT09IG51bGwgfHwgdHlwZW9mIG9iaiAhPT0gXCJvYmplY3RcIiAmJiB0eXBlb2Ygb2JqICE9PSBcImZ1bmN0aW9uXCIpIHsgcmV0dXJuIHsgZGVmYXVsdDogb2JqIH07IH0gdmFyIGNhY2hlID0gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKG5vZGVJbnRlcm9wKTsgaWYgKGNhY2hlICYmIGNhY2hlLmhhcyhvYmopKSB7IHJldHVybiBjYWNoZS5nZXQob2JqKTsgfSB2YXIgbmV3T2JqID0ge307IHZhciBoYXNQcm9wZXJ0eURlc2NyaXB0b3IgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjsgZm9yICh2YXIga2V5IGluIG9iaikgeyBpZiAoa2V5ICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7IHZhciBkZXNjID0gaGFzUHJvcGVydHlEZXNjcmlwdG9yID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSkgOiBudWxsOyBpZiAoZGVzYyAmJiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7IH0gZWxzZSB7IG5ld09ialtrZXldID0gb2JqW2tleV07IH0gfSB9IG5ld09iai5kZWZhdWx0ID0gb2JqOyBpZiAoY2FjaGUpIHsgY2FjaGUuc2V0KG9iaiwgbmV3T2JqKTsgfSByZXR1cm4gbmV3T2JqOyB9XG5jb25zdCBEcm9wZG93bkNvbnRleHQgPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlQ29udGV4dChudWxsKTtcbnZhciBfZGVmYXVsdCA9IERyb3Bkb3duQ29udGV4dDtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6WyJleHBvcnRzIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsIm5vZGVJbnRlcm9wIiwiV2Vha01hcCIsImNhY2hlQmFiZWxJbnRlcm9wIiwiY2FjaGVOb2RlSW50ZXJvcCIsIm9iaiIsImNhY2hlIiwiaGFzIiwiZ2V0IiwibmV3T2JqIiwiaGFzUHJvcGVydHlEZXNjcmlwdG9yIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJrZXkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJkZXNjIiwic2V0IiwiRHJvcGRvd25Db250ZXh0IiwiY3JlYXRlQ29udGV4dCIsIl9kZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/DropdownContext.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/DropdownItem.js":
/*!******************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/DropdownItem.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports.useDropdownItem = useDropdownItem;\nexports[\"default\"] = void 0;\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar _useEventCallback = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/useEventCallback */ \"(ssr)/./node_modules/@restart/hooks/cjs/useEventCallback.js\"));\nvar _SelectableContext = _interopRequireWildcard(__webpack_require__(/*! ./SelectableContext */ \"(ssr)/./node_modules/@restart/ui/cjs/SelectableContext.js\"));\nvar _NavContext = _interopRequireDefault(__webpack_require__(/*! ./NavContext */ \"(ssr)/./node_modules/@restart/ui/cjs/NavContext.js\"));\nvar _Button = _interopRequireDefault(__webpack_require__(/*! ./Button */ \"(ssr)/./node_modules/@restart/ui/cjs/Button.js\"));\nvar _DataKey = __webpack_require__(/*! ./DataKey */ \"(ssr)/./node_modules/@restart/ui/cjs/DataKey.js\");\nvar _jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\nconst _excluded = [\n    \"eventKey\",\n    \"disabled\",\n    \"onClick\",\n    \"active\",\n    \"as\"\n];\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\n/**\n * Create a dropdown item. Returns a set of props for the dropdown item component\n * including an `onClick` handler that prevents selection when the item is disabled\n */ function useDropdownItem({ key, href, active, disabled, onClick }) {\n    const onSelectCtx = (0, React.useContext)(_SelectableContext.default);\n    const navContext = (0, React.useContext)(_NavContext.default);\n    const { activeKey } = navContext || {};\n    const eventKey = (0, _SelectableContext.makeEventKey)(key, href);\n    const isActive = active == null && key != null ? (0, _SelectableContext.makeEventKey)(activeKey) === eventKey : active;\n    const handleClick = (0, _useEventCallback.default)((event)=>{\n        if (disabled) return;\n        onClick == null ? void 0 : onClick(event);\n        if (onSelectCtx && !event.isPropagationStopped()) {\n            onSelectCtx(eventKey, event);\n        }\n    });\n    return [\n        {\n            onClick: handleClick,\n            \"aria-disabled\": disabled || undefined,\n            \"aria-selected\": isActive,\n            [(0, _DataKey.dataAttr)(\"dropdown-item\")]: \"\"\n        },\n        {\n            isActive\n        }\n    ];\n}\nconst DropdownItem = /*#__PURE__*/ React.forwardRef((_ref, ref)=>{\n    let { eventKey, disabled, onClick, active, as: Component = _Button.default } = _ref, props = _objectWithoutPropertiesLoose(_ref, _excluded);\n    const [dropdownItemProps] = useDropdownItem({\n        key: eventKey,\n        href: props.href,\n        disabled,\n        onClick,\n        active\n    });\n    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(Component, Object.assign({}, props, {\n        ref: ref\n    }, dropdownItemProps));\n});\nDropdownItem.displayName = \"DropdownItem\";\nvar _default = DropdownItem;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/DropdownItem.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/DropdownMenu.js":
/*!******************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/DropdownMenu.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports.useDropdownMenu = useDropdownMenu;\nexports[\"default\"] = void 0;\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar _useCallbackRef = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/useCallbackRef */ \"(ssr)/./node_modules/@restart/hooks/cjs/useCallbackRef.js\"));\nvar _DropdownContext = _interopRequireDefault(__webpack_require__(/*! ./DropdownContext */ \"(ssr)/./node_modules/@restart/ui/cjs/DropdownContext.js\"));\nvar _usePopper = _interopRequireDefault(__webpack_require__(/*! ./usePopper */ \"(ssr)/./node_modules/@restart/ui/cjs/usePopper.js\"));\nvar _useClickOutside = _interopRequireDefault(__webpack_require__(/*! ./useClickOutside */ \"(ssr)/./node_modules/@restart/ui/cjs/useClickOutside.js\"));\nvar _mergeOptionsWithPopperConfig = _interopRequireDefault(__webpack_require__(/*! ./mergeOptionsWithPopperConfig */ \"(ssr)/./node_modules/@restart/ui/cjs/mergeOptionsWithPopperConfig.js\"));\nvar _jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\nconst _excluded = [\n    \"children\"\n];\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\nconst noop = ()=>{};\n/**\n * @memberOf Dropdown\n * @param {object}  options\n * @param {boolean} options.flip Automatically adjust the menu `drop` position based on viewport edge detection\n * @param {[number, number]} options.offset Define an offset distance between the Menu and the Toggle\n * @param {boolean} options.show Display the menu manually, ignored in the context of a `Dropdown`\n * @param {boolean} options.usePopper opt in/out of using PopperJS to position menus. When disabled you must position it yourself.\n * @param {string}  options.rootCloseEvent The pointer event to listen for when determining \"clicks outside\" the menu for triggering a close.\n * @param {object}  options.popperConfig Options passed to the [`usePopper`](/api/usePopper) hook.\n */ function useDropdownMenu(options = {}) {\n    const context = (0, React.useContext)(_DropdownContext.default);\n    const [arrowElement, attachArrowRef] = (0, _useCallbackRef.default)();\n    const hasShownRef = (0, React.useRef)(false);\n    const { flip, offset, rootCloseEvent, fixed = false, placement: placementOverride, popperConfig = {}, enableEventListeners = true, usePopper: shouldUsePopper = !!context } = options;\n    const show = (context == null ? void 0 : context.show) == null ? !!options.show : context.show;\n    if (show && !hasShownRef.current) {\n        hasShownRef.current = true;\n    }\n    const handleClose = (e)=>{\n        context == null ? void 0 : context.toggle(false, e);\n    };\n    const { placement, setMenu, menuElement, toggleElement } = context || {};\n    const popper = (0, _usePopper.default)(toggleElement, menuElement, (0, _mergeOptionsWithPopperConfig.default)({\n        placement: placementOverride || placement || \"bottom-start\",\n        enabled: shouldUsePopper,\n        enableEvents: enableEventListeners == null ? show : enableEventListeners,\n        offset,\n        flip,\n        fixed,\n        arrowElement,\n        popperConfig\n    }));\n    const menuProps = Object.assign({\n        ref: setMenu || noop,\n        \"aria-labelledby\": toggleElement == null ? void 0 : toggleElement.id\n    }, popper.attributes.popper, {\n        style: popper.styles.popper\n    });\n    const metadata = {\n        show,\n        placement,\n        hasShown: hasShownRef.current,\n        toggle: context == null ? void 0 : context.toggle,\n        popper: shouldUsePopper ? popper : null,\n        arrowProps: shouldUsePopper ? Object.assign({\n            ref: attachArrowRef\n        }, popper.attributes.arrow, {\n            style: popper.styles.arrow\n        }) : {}\n    };\n    (0, _useClickOutside.default)(menuElement, handleClose, {\n        clickTrigger: rootCloseEvent,\n        disabled: !show\n    });\n    return [\n        menuProps,\n        metadata\n    ];\n}\nconst defaultProps = {\n    usePopper: true\n};\n/**\n * Also exported as `<Dropdown.Menu>` from `Dropdown`.\n *\n * @displayName DropdownMenu\n * @memberOf Dropdown\n */ function DropdownMenu(_ref) {\n    let { children } = _ref, options = _objectWithoutPropertiesLoose(_ref, _excluded);\n    const [props, meta] = useDropdownMenu(options);\n    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_jsxRuntime.Fragment, {\n        children: children(props, meta)\n    });\n}\nDropdownMenu.displayName = \"DropdownMenu\";\nDropdownMenu.defaultProps = defaultProps;\n/** @component */ var _default = DropdownMenu;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/DropdownMenu.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/DropdownToggle.js":
/*!********************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/DropdownToggle.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports.useDropdownToggle = useDropdownToggle;\nexports[\"default\"] = exports.isRoleMenu = void 0;\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar _ssr = __webpack_require__(/*! ./ssr */ \"(ssr)/./node_modules/@restart/ui/cjs/ssr.js\");\nvar _DropdownContext = _interopRequireDefault(__webpack_require__(/*! ./DropdownContext */ \"(ssr)/./node_modules/@restart/ui/cjs/DropdownContext.js\"));\nvar _jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nconst isRoleMenu = (el)=>{\n    var _el$getAttribute;\n    return ((_el$getAttribute = el.getAttribute(\"role\")) == null ? void 0 : _el$getAttribute.toLowerCase()) === \"menu\";\n};\nexports.isRoleMenu = isRoleMenu;\nconst noop = ()=>{};\n/**\n * Wires up Dropdown toggle functionality, returning a set a props to attach\n * to the element that functions as the dropdown toggle (generally a button).\n *\n * @memberOf Dropdown\n */ function useDropdownToggle() {\n    const id = (0, _ssr.useSSRSafeId)();\n    const { show = false, toggle = noop, setToggle, menuElement } = (0, React.useContext)(_DropdownContext.default) || {};\n    const handleClick = (0, React.useCallback)((e)=>{\n        toggle(!show, e);\n    }, [\n        show,\n        toggle\n    ]);\n    const props = {\n        id,\n        ref: setToggle || noop,\n        onClick: handleClick,\n        \"aria-expanded\": !!show\n    };\n    // This is maybe better down in an effect, but\n    // the component is going to update anyway when the menu element\n    // is set so might return new props.\n    if (menuElement && isRoleMenu(menuElement)) {\n        props[\"aria-haspopup\"] = true;\n    }\n    return [\n        props,\n        {\n            show,\n            toggle\n        }\n    ];\n}\n/**\n * Also exported as `<Dropdown.Toggle>` from `Dropdown`.\n *\n * @displayName DropdownToggle\n * @memberOf Dropdown\n */ function DropdownToggle({ children }) {\n    const [props, meta] = useDropdownToggle();\n    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_jsxRuntime.Fragment, {\n        children: children(props, meta)\n    });\n}\nDropdownToggle.displayName = \"DropdownToggle\";\n/** @component */ var _default = DropdownToggle;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/DropdownToggle.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/ImperativeTransition.js":
/*!**************************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/ImperativeTransition.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports.useTransition = useTransition;\nexports[\"default\"] = ImperativeTransition;\nexports.renderTransition = renderTransition;\nvar _useMergedRefs = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/useMergedRefs */ \"(ssr)/./node_modules/@restart/hooks/cjs/useMergedRefs.js\"));\nvar _useEventCallback = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/useEventCallback */ \"(ssr)/./node_modules/@restart/hooks/cjs/useEventCallback.js\"));\nvar _useIsomorphicEffect = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/useIsomorphicEffect */ \"(ssr)/./node_modules/@restart/hooks/cjs/useIsomorphicEffect.js\"));\nvar _react = _interopRequireWildcard(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar _NoopTransition = _interopRequireDefault(__webpack_require__(/*! ./NoopTransition */ \"(ssr)/./node_modules/@restart/ui/cjs/NoopTransition.js\"));\nvar _jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction useTransition({ in: inProp, onTransition }) {\n    const ref = (0, _react.useRef)(null);\n    const isInitialRef = (0, _react.useRef)(true);\n    const handleTransition = (0, _useEventCallback.default)(onTransition);\n    (0, _useIsomorphicEffect.default)(()=>{\n        if (!ref.current) {\n            return undefined;\n        }\n        let stale = false;\n        handleTransition({\n            in: inProp,\n            element: ref.current,\n            initial: isInitialRef.current,\n            isStale: ()=>stale\n        });\n        return ()=>{\n            stale = true;\n        };\n    }, [\n        inProp,\n        handleTransition\n    ]);\n    (0, _useIsomorphicEffect.default)(()=>{\n        isInitialRef.current = false;\n        // this is for strict mode\n        return ()=>{\n            isInitialRef.current = true;\n        };\n    }, []);\n    return ref;\n}\n/**\n * Adapts an imperative transition function to a subset of the RTG `<Transition>` component API.\n *\n * ImperativeTransition does not support mounting options or `appear` at the moment, meaning\n * that it always acts like: `mountOnEnter={true} unmountOnExit={true} appear={true}`\n */ function ImperativeTransition({ children, in: inProp, onExited, onEntered, transition }) {\n    const [exited, setExited] = (0, _react.useState)(!inProp);\n    // TODO: I think this needs to be in an effect\n    if (inProp && exited) {\n        setExited(false);\n    }\n    const ref = useTransition({\n        in: !!inProp,\n        onTransition: (options)=>{\n            const onFinish = ()=>{\n                if (options.isStale()) return;\n                if (options.in) {\n                    onEntered == null ? void 0 : onEntered(options.element, options.initial);\n                } else {\n                    setExited(true);\n                    onExited == null ? void 0 : onExited(options.element);\n                }\n            };\n            Promise.resolve(transition(options)).then(onFinish, (error)=>{\n                if (!options.in) setExited(true);\n                throw error;\n            });\n        }\n    });\n    const combinedRef = (0, _useMergedRefs.default)(ref, children.ref);\n    return exited && !inProp ? null : /*#__PURE__*/ (0, _react.cloneElement)(children, {\n        ref: combinedRef\n    });\n}\nfunction renderTransition(Component, runTransition, props) {\n    if (Component) {\n        return /*#__PURE__*/ (0, _jsxRuntime.jsx)(Component, Object.assign({}, props));\n    }\n    if (runTransition) {\n        return /*#__PURE__*/ (0, _jsxRuntime.jsx)(ImperativeTransition, Object.assign({}, props, {\n            transition: runTransition\n        }));\n    }\n    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_NoopTransition.default, Object.assign({}, props));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/ImperativeTransition.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/Modal.js":
/*!***********************************************!*\
  !*** ./node_modules/@restart/ui/cjs/Modal.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _activeElement = _interopRequireDefault(__webpack_require__(/*! dom-helpers/activeElement */ \"(ssr)/./node_modules/dom-helpers/esm/activeElement.js\"));\nvar _contains = _interopRequireDefault(__webpack_require__(/*! dom-helpers/contains */ \"(ssr)/./node_modules/dom-helpers/esm/contains.js\"));\nvar _canUseDOM = _interopRequireDefault(__webpack_require__(/*! dom-helpers/canUseDOM */ \"(ssr)/./node_modules/dom-helpers/esm/canUseDOM.js\"));\nvar _listen = _interopRequireDefault(__webpack_require__(/*! dom-helpers/listen */ \"(ssr)/./node_modules/dom-helpers/esm/listen.js\"));\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar _reactDom = _interopRequireDefault(__webpack_require__(/*! react-dom */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-dom.js\"));\nvar _useMounted = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/useMounted */ \"(ssr)/./node_modules/@restart/hooks/cjs/useMounted.js\"));\nvar _useWillUnmount = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/useWillUnmount */ \"(ssr)/./node_modules/@restart/hooks/cjs/useWillUnmount.js\"));\nvar _usePrevious = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/usePrevious */ \"(ssr)/./node_modules/@restart/hooks/cjs/usePrevious.js\"));\nvar _useEventCallback = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/useEventCallback */ \"(ssr)/./node_modules/@restart/hooks/cjs/useEventCallback.js\"));\nvar _ModalManager = _interopRequireDefault(__webpack_require__(/*! ./ModalManager */ \"(ssr)/./node_modules/@restart/ui/cjs/ModalManager.js\"));\nvar _useWaitForDOMRef = _interopRequireDefault(__webpack_require__(/*! ./useWaitForDOMRef */ \"(ssr)/./node_modules/@restart/ui/cjs/useWaitForDOMRef.js\"));\nvar _useWindow = _interopRequireDefault(__webpack_require__(/*! ./useWindow */ \"(ssr)/./node_modules/@restart/ui/cjs/useWindow.js\"));\nvar _ImperativeTransition = __webpack_require__(/*! ./ImperativeTransition */ \"(ssr)/./node_modules/@restart/ui/cjs/ImperativeTransition.js\");\nvar _utils = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@restart/ui/cjs/utils.js\");\nvar _jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\nconst _excluded = [\n    \"show\",\n    \"role\",\n    \"className\",\n    \"style\",\n    \"children\",\n    \"backdrop\",\n    \"keyboard\",\n    \"onBackdropClick\",\n    \"onEscapeKeyDown\",\n    \"transition\",\n    \"runTransition\",\n    \"backdropTransition\",\n    \"runBackdropTransition\",\n    \"autoFocus\",\n    \"enforceFocus\",\n    \"restoreFocus\",\n    \"restoreFocusOptions\",\n    \"renderDialog\",\n    \"renderBackdrop\",\n    \"manager\",\n    \"container\",\n    \"onShow\",\n    \"onHide\",\n    \"onExit\",\n    \"onExited\",\n    \"onExiting\",\n    \"onEnter\",\n    \"onEntering\",\n    \"onEntered\"\n];\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\nlet manager;\nfunction getManager(window) {\n    if (!manager) manager = new _ModalManager.default({\n        ownerDocument: window == null ? void 0 : window.document\n    });\n    return manager;\n}\nfunction useModalManager(provided) {\n    const window = (0, _useWindow.default)();\n    const modalManager = provided || getManager(window);\n    const modal = (0, React.useRef)({\n        dialog: null,\n        backdrop: null\n    });\n    return Object.assign(modal.current, {\n        add: ()=>modalManager.add(modal.current),\n        remove: ()=>modalManager.remove(modal.current),\n        isTopModal: ()=>modalManager.isTopModal(modal.current),\n        setDialogRef: (0, React.useCallback)((ref)=>{\n            modal.current.dialog = ref;\n        }, []),\n        setBackdropRef: (0, React.useCallback)((ref)=>{\n            modal.current.backdrop = ref;\n        }, [])\n    });\n}\nconst Modal = /*#__PURE__*/ (0, React.forwardRef)((_ref, ref)=>{\n    let { show = false, role = \"dialog\", className, style, children, backdrop = true, keyboard = true, onBackdropClick, onEscapeKeyDown, transition, runTransition, backdropTransition, runBackdropTransition, autoFocus = true, enforceFocus = true, restoreFocus = true, restoreFocusOptions, renderDialog, renderBackdrop = (props)=>/*#__PURE__*/ (0, _jsxRuntime.jsx)(\"div\", Object.assign({}, props)), manager: providedManager, container: containerRef, onShow, onHide = ()=>{}, onExit, onExited, onExiting, onEnter, onEntering, onEntered } = _ref, rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n    const ownerWindow = (0, _useWindow.default)();\n    const container = (0, _useWaitForDOMRef.default)(containerRef);\n    const modal = useModalManager(providedManager);\n    const isMounted = (0, _useMounted.default)();\n    const prevShow = (0, _usePrevious.default)(show);\n    const [exited, setExited] = (0, React.useState)(!show);\n    const lastFocusRef = (0, React.useRef)(null);\n    (0, React.useImperativeHandle)(ref, ()=>modal, [\n        modal\n    ]);\n    if (_canUseDOM.default && !prevShow && show) {\n        lastFocusRef.current = (0, _activeElement.default)(ownerWindow == null ? void 0 : ownerWindow.document);\n    }\n    // TODO: I think this needs to be in an effect\n    if (show && exited) {\n        setExited(false);\n    }\n    const handleShow = (0, _useEventCallback.default)(()=>{\n        modal.add();\n        removeKeydownListenerRef.current = (0, _listen.default)(document, \"keydown\", handleDocumentKeyDown);\n        removeFocusListenerRef.current = (0, _listen.default)(document, \"focus\", // the timeout is necessary b/c this will run before the new modal is mounted\n        // and so steals focus from it\n        ()=>setTimeout(handleEnforceFocus), true);\n        if (onShow) {\n            onShow();\n        }\n        // autofocus after onShow to not trigger a focus event for previous\n        // modals before this one is shown.\n        if (autoFocus) {\n            var _modal$dialog$ownerDo, _modal$dialog;\n            const currentActiveElement = (0, _activeElement.default)((_modal$dialog$ownerDo = (_modal$dialog = modal.dialog) == null ? void 0 : _modal$dialog.ownerDocument) != null ? _modal$dialog$ownerDo : ownerWindow == null ? void 0 : ownerWindow.document);\n            if (modal.dialog && currentActiveElement && !(0, _contains.default)(modal.dialog, currentActiveElement)) {\n                lastFocusRef.current = currentActiveElement;\n                modal.dialog.focus();\n            }\n        }\n    });\n    const handleHide = (0, _useEventCallback.default)(()=>{\n        modal.remove();\n        removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n        removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n        if (restoreFocus) {\n            var _lastFocusRef$current;\n            // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n            (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n            lastFocusRef.current = null;\n        }\n    });\n    // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n    // Show logic when:\n    //  - show is `true` _and_ `container` has resolved\n    (0, React.useEffect)(()=>{\n        if (!show || !container) return;\n        handleShow();\n    }, [\n        show,\n        container,\n        /* should never change: */ handleShow\n    ]);\n    // Hide cleanup logic when:\n    //  - `exited` switches to true\n    //  - component unmounts;\n    (0, React.useEffect)(()=>{\n        if (!exited) return;\n        handleHide();\n    }, [\n        exited,\n        handleHide\n    ]);\n    (0, _useWillUnmount.default)(()=>{\n        handleHide();\n    });\n    // --------------------------------\n    const handleEnforceFocus = (0, _useEventCallback.default)(()=>{\n        if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n            return;\n        }\n        const currentActiveElement = (0, _activeElement.default)(ownerWindow == null ? void 0 : ownerWindow.document);\n        if (modal.dialog && currentActiveElement && !(0, _contains.default)(modal.dialog, currentActiveElement)) {\n            modal.dialog.focus();\n        }\n    });\n    const handleBackdropClick = (0, _useEventCallback.default)((e)=>{\n        if (e.target !== e.currentTarget) {\n            return;\n        }\n        onBackdropClick == null ? void 0 : onBackdropClick(e);\n        if (backdrop === true) {\n            onHide();\n        }\n    });\n    const handleDocumentKeyDown = (0, _useEventCallback.default)((e)=>{\n        if (keyboard && (0, _utils.isEscKey)(e) && modal.isTopModal()) {\n            onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n            if (!e.defaultPrevented) {\n                onHide();\n            }\n        }\n    });\n    const removeFocusListenerRef = (0, React.useRef)();\n    const removeKeydownListenerRef = (0, React.useRef)();\n    const handleHidden = (...args)=>{\n        setExited(true);\n        onExited == null ? void 0 : onExited(...args);\n    };\n    if (!container) {\n        return null;\n    }\n    const dialogProps = Object.assign({\n        role,\n        ref: modal.setDialogRef,\n        // apparently only works on the dialog role element\n        \"aria-modal\": role === \"dialog\" ? true : undefined\n    }, rest, {\n        style,\n        className,\n        tabIndex: -1\n    });\n    let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/ (0, _jsxRuntime.jsx)(\"div\", Object.assign({}, dialogProps, {\n        children: /*#__PURE__*/ React.cloneElement(children, {\n            role: \"document\"\n        })\n    }));\n    dialog = (0, _ImperativeTransition.renderTransition)(transition, runTransition, {\n        unmountOnExit: true,\n        mountOnEnter: true,\n        appear: true,\n        in: !!show,\n        onExit,\n        onExiting,\n        onExited: handleHidden,\n        onEnter,\n        onEntering,\n        onEntered,\n        children: dialog\n    });\n    let backdropElement = null;\n    if (backdrop) {\n        backdropElement = renderBackdrop({\n            ref: modal.setBackdropRef,\n            onClick: handleBackdropClick\n        });\n        backdropElement = (0, _ImperativeTransition.renderTransition)(backdropTransition, runBackdropTransition, {\n            in: !!show,\n            appear: true,\n            mountOnEnter: true,\n            unmountOnExit: true,\n            children: backdropElement\n        });\n    }\n    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_jsxRuntime.Fragment, {\n        children: /*#__PURE__*/ _reactDom.default.createPortal(/*#__PURE__*/ (0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {\n            children: [\n                backdropElement,\n                dialog\n            ]\n        }), container)\n    });\n});\nModal.displayName = \"Modal\";\nvar _default = Object.assign(Modal, {\n    Manager: _ModalManager.default\n});\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/Modal.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/ModalManager.js":
/*!******************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/ModalManager.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = exports.OPEN_DATA_ATTRIBUTE = void 0;\nvar _css = _interopRequireDefault(__webpack_require__(/*! dom-helpers/css */ \"(ssr)/./node_modules/dom-helpers/esm/css.js\"));\nvar _DataKey = __webpack_require__(/*! ./DataKey */ \"(ssr)/./node_modules/@restart/ui/cjs/DataKey.js\");\nvar _getScrollbarWidth = _interopRequireDefault(__webpack_require__(/*! ./getScrollbarWidth */ \"(ssr)/./node_modules/@restart/ui/cjs/getScrollbarWidth.js\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nconst OPEN_DATA_ATTRIBUTE = (0, _DataKey.dataAttr)(\"modal-open\");\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */ exports.OPEN_DATA_ATTRIBUTE = OPEN_DATA_ATTRIBUTE;\nclass ModalManager {\n    constructor({ ownerDocument, handleContainerOverflow = true, isRTL = false } = {}){\n        this.handleContainerOverflow = handleContainerOverflow;\n        this.isRTL = isRTL;\n        this.modals = [];\n        this.ownerDocument = ownerDocument;\n    }\n    getScrollbarWidth() {\n        return (0, _getScrollbarWidth.default)(this.ownerDocument);\n    }\n    getElement() {\n        return (this.ownerDocument || document).body;\n    }\n    setModalAttributes(_modal) {\n    // For overriding\n    }\n    removeModalAttributes(_modal) {\n    // For overriding\n    }\n    setContainerStyle(containerState) {\n        const style = {\n            overflow: \"hidden\"\n        };\n        // we are only interested in the actual `style` here\n        // because we will override it\n        const paddingProp = this.isRTL ? \"paddingLeft\" : \"paddingRight\";\n        const container = this.getElement();\n        containerState.style = {\n            overflow: container.style.overflow,\n            [paddingProp]: container.style[paddingProp]\n        };\n        if (containerState.scrollBarWidth) {\n            // use computed style, here to get the real padding\n            // to add our scrollbar width\n            style[paddingProp] = `${parseInt((0, _css.default)(container, paddingProp) || \"0\", 10) + containerState.scrollBarWidth}px`;\n        }\n        container.setAttribute(OPEN_DATA_ATTRIBUTE, \"\");\n        (0, _css.default)(container, style);\n    }\n    reset() {\n        [\n            ...this.modals\n        ].forEach((m)=>this.remove(m));\n    }\n    removeContainerStyle(containerState) {\n        const container = this.getElement();\n        container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n        Object.assign(container.style, containerState.style);\n    }\n    add(modal) {\n        let modalIdx = this.modals.indexOf(modal);\n        if (modalIdx !== -1) {\n            return modalIdx;\n        }\n        modalIdx = this.modals.length;\n        this.modals.push(modal);\n        this.setModalAttributes(modal);\n        if (modalIdx !== 0) {\n            return modalIdx;\n        }\n        this.state = {\n            scrollBarWidth: this.getScrollbarWidth(),\n            style: {}\n        };\n        if (this.handleContainerOverflow) {\n            this.setContainerStyle(this.state);\n        }\n        return modalIdx;\n    }\n    remove(modal) {\n        const modalIdx = this.modals.indexOf(modal);\n        if (modalIdx === -1) {\n            return;\n        }\n        this.modals.splice(modalIdx, 1);\n        // if that was the last modal in a container,\n        // clean up the container\n        if (!this.modals.length && this.handleContainerOverflow) {\n            this.removeContainerStyle(this.state);\n        }\n        this.removeModalAttributes(modal);\n    }\n    isTopModal(modal) {\n        return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n    }\n}\nvar _default = ModalManager;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/ModalManager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/Nav.js":
/*!*********************************************!*\
  !*** ./node_modules/@restart/ui/cjs/Nav.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _querySelectorAll = _interopRequireDefault(__webpack_require__(/*! dom-helpers/querySelectorAll */ \"(ssr)/./node_modules/dom-helpers/esm/querySelectorAll.js\"));\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar _useForceUpdate = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/useForceUpdate */ \"(ssr)/./node_modules/@restart/hooks/cjs/useForceUpdate.js\"));\nvar _useMergedRefs = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/useMergedRefs */ \"(ssr)/./node_modules/@restart/hooks/cjs/useMergedRefs.js\"));\nvar _NavContext = _interopRequireDefault(__webpack_require__(/*! ./NavContext */ \"(ssr)/./node_modules/@restart/ui/cjs/NavContext.js\"));\nvar _SelectableContext = _interopRequireWildcard(__webpack_require__(/*! ./SelectableContext */ \"(ssr)/./node_modules/@restart/ui/cjs/SelectableContext.js\"));\nvar _TabContext = _interopRequireDefault(__webpack_require__(/*! ./TabContext */ \"(ssr)/./node_modules/@restart/ui/cjs/TabContext.js\"));\nvar _DataKey = __webpack_require__(/*! ./DataKey */ \"(ssr)/./node_modules/@restart/ui/cjs/DataKey.js\");\nvar _NavItem = _interopRequireDefault(__webpack_require__(/*! ./NavItem */ \"(ssr)/./node_modules/@restart/ui/cjs/NavItem.js\"));\nvar _jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\nconst _excluded = [\n    \"as\",\n    \"onSelect\",\n    \"activeKey\",\n    \"role\",\n    \"onKeyDown\"\n];\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = ()=>{};\nconst EVENT_KEY_ATTR = (0, _DataKey.dataAttr)(\"event-key\");\nconst Nav = /*#__PURE__*/ React.forwardRef((_ref, ref)=>{\n    let { // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = \"div\", onSelect, activeKey, role, onKeyDown } = _ref, props = _objectWithoutPropertiesLoose(_ref, _excluded);\n    // A ref and forceUpdate for refocus, b/c we only want to trigger when needed\n    // and don't want to reset the set in the effect\n    const forceUpdate = (0, _useForceUpdate.default)();\n    const needsRefocusRef = (0, React.useRef)(false);\n    const parentOnSelect = (0, React.useContext)(_SelectableContext.default);\n    const tabContext = (0, React.useContext)(_TabContext.default);\n    let getControlledId, getControllerId;\n    if (tabContext) {\n        role = role || \"tablist\";\n        activeKey = tabContext.activeKey;\n        // TODO: do we need to duplicate these?\n        getControlledId = tabContext.getControlledId;\n        getControllerId = tabContext.getControllerId;\n    }\n    const listNode = (0, React.useRef)(null);\n    const getNextActiveTab = (offset)=>{\n        const currentListNode = listNode.current;\n        if (!currentListNode) return null;\n        const items = (0, _querySelectorAll.default)(currentListNode, `[${EVENT_KEY_ATTR}]:not([aria-disabled=true])`);\n        const activeChild = currentListNode.querySelector(\"[aria-selected=true]\");\n        if (!activeChild || activeChild !== document.activeElement) return null;\n        const index = items.indexOf(activeChild);\n        if (index === -1) return null;\n        let nextIndex = index + offset;\n        if (nextIndex >= items.length) nextIndex = 0;\n        if (nextIndex < 0) nextIndex = items.length - 1;\n        return items[nextIndex];\n    };\n    const handleSelect = (key, event)=>{\n        if (key == null) return;\n        onSelect == null ? void 0 : onSelect(key, event);\n        parentOnSelect == null ? void 0 : parentOnSelect(key, event);\n    };\n    const handleKeyDown = (event)=>{\n        onKeyDown == null ? void 0 : onKeyDown(event);\n        if (!tabContext) {\n            return;\n        }\n        let nextActiveChild;\n        switch(event.key){\n            case \"ArrowLeft\":\n            case \"ArrowUp\":\n                nextActiveChild = getNextActiveTab(-1);\n                break;\n            case \"ArrowRight\":\n            case \"ArrowDown\":\n                nextActiveChild = getNextActiveTab(1);\n                break;\n            default:\n                return;\n        }\n        if (!nextActiveChild) return;\n        event.preventDefault();\n        handleSelect(nextActiveChild.dataset[(0, _DataKey.dataProp)(\"EventKey\")] || null, event);\n        needsRefocusRef.current = true;\n        forceUpdate();\n    };\n    (0, React.useEffect)(()=>{\n        if (listNode.current && needsRefocusRef.current) {\n            const activeChild = listNode.current.querySelector(`[${EVENT_KEY_ATTR}][aria-selected=true]`);\n            activeChild == null ? void 0 : activeChild.focus();\n        }\n        needsRefocusRef.current = false;\n    });\n    const mergedRef = (0, _useMergedRefs.default)(ref, listNode);\n    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_SelectableContext.default.Provider, {\n        value: handleSelect,\n        children: /*#__PURE__*/ (0, _jsxRuntime.jsx)(_NavContext.default.Provider, {\n            value: {\n                role,\n                // used by NavLink to determine it's role\n                activeKey: (0, _SelectableContext.makeEventKey)(activeKey),\n                getControlledId: getControlledId || noop,\n                getControllerId: getControllerId || noop\n            },\n            children: /*#__PURE__*/ (0, _jsxRuntime.jsx)(Component, Object.assign({}, props, {\n                onKeyDown: handleKeyDown,\n                ref: mergedRef,\n                role: role\n            }))\n        })\n    });\n});\nNav.displayName = \"Nav\";\nvar _default = Object.assign(Nav, {\n    Item: _NavItem.default\n});\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/Nav.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/NavContext.js":
/*!****************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/NavContext.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nconst NavContext = /*#__PURE__*/ React.createContext(null);\nNavContext.displayName = \"NavContext\";\nvar _default = NavContext;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvdWkvY2pzL05hdkNvbnRleHQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsa0JBQWtCLEdBQUc7QUFDckJBLGtCQUFlLEdBQUcsS0FBSztBQUN2QixJQUFJRyxRQUFRQyx3QkFBd0JDLG1CQUFPQSxDQUFDLHdHQUFPO0FBQ25ELFNBQVNDLHlCQUF5QkMsV0FBVztJQUFJLElBQUksT0FBT0MsWUFBWSxZQUFZLE9BQU87SUFBTSxJQUFJQyxvQkFBb0IsSUFBSUQ7SUFBVyxJQUFJRSxtQkFBbUIsSUFBSUY7SUFBVyxPQUFPLENBQUNGLDJCQUEyQixTQUFVQyxXQUFXO1FBQUksT0FBT0EsY0FBY0csbUJBQW1CRDtJQUFtQixHQUFHRjtBQUFjO0FBQ3RULFNBQVNILHdCQUF3Qk8sR0FBRyxFQUFFSixXQUFXO0lBQUksSUFBSSxDQUFDQSxlQUFlSSxPQUFPQSxJQUFJVixVQUFVLEVBQUU7UUFBRSxPQUFPVTtJQUFLO0lBQUUsSUFBSUEsUUFBUSxRQUFRLE9BQU9BLFFBQVEsWUFBWSxPQUFPQSxRQUFRLFlBQVk7UUFBRSxPQUFPO1lBQUVULFNBQVNTO1FBQUk7SUFBRztJQUFFLElBQUlDLFFBQVFOLHlCQUF5QkM7SUFBYyxJQUFJSyxTQUFTQSxNQUFNQyxHQUFHLENBQUNGLE1BQU07UUFBRSxPQUFPQyxNQUFNRSxHQUFHLENBQUNIO0lBQU07SUFBRSxJQUFJSSxTQUFTLENBQUM7SUFBRyxJQUFJQyx3QkFBd0JDLE9BQU9DLGNBQWMsSUFBSUQsT0FBT0Usd0JBQXdCO0lBQUUsSUFBSyxJQUFJQyxPQUFPVCxJQUFLO1FBQUUsSUFBSVMsUUFBUSxhQUFhSCxPQUFPSSxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDWixLQUFLUyxNQUFNO1lBQUUsSUFBSUksT0FBT1Isd0JBQXdCQyxPQUFPRSx3QkFBd0IsQ0FBQ1IsS0FBS1MsT0FBTztZQUFNLElBQUlJLFFBQVNBLENBQUFBLEtBQUtWLEdBQUcsSUFBSVUsS0FBS0MsR0FBRyxHQUFHO2dCQUFFUixPQUFPQyxjQUFjLENBQUNILFFBQVFLLEtBQUtJO1lBQU8sT0FBTztnQkFBRVQsTUFBTSxDQUFDSyxJQUFJLEdBQUdULEdBQUcsQ0FBQ1MsSUFBSTtZQUFFO1FBQUU7SUFBRTtJQUFFTCxPQUFPYixPQUFPLEdBQUdTO0lBQUssSUFBSUMsT0FBTztRQUFFQSxNQUFNYSxHQUFHLENBQUNkLEtBQUtJO0lBQVM7SUFBRSxPQUFPQTtBQUFRO0FBQ255QixNQUFNVyxhQUFhLFdBQVcsR0FBRXZCLE1BQU13QixhQUFhLENBQUM7QUFDcERELFdBQVdFLFdBQVcsR0FBRztBQUN6QixJQUFJQyxXQUFXSDtBQUNmMUIsa0JBQWUsR0FBRzZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdmVudGEtYXV0b3MvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvdWkvY2pzL05hdkNvbnRleHQuanM/ZGYxZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBSZWFjdCA9IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoXCJyZWFjdFwiKSk7XG5mdW5jdGlvbiBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUobm9kZUludGVyb3ApIHsgaWYgKHR5cGVvZiBXZWFrTWFwICE9PSBcImZ1bmN0aW9uXCIpIHJldHVybiBudWxsOyB2YXIgY2FjaGVCYWJlbEludGVyb3AgPSBuZXcgV2Vha01hcCgpOyB2YXIgY2FjaGVOb2RlSW50ZXJvcCA9IG5ldyBXZWFrTWFwKCk7IHJldHVybiAoX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlID0gZnVuY3Rpb24gKG5vZGVJbnRlcm9wKSB7IHJldHVybiBub2RlSW50ZXJvcCA/IGNhY2hlTm9kZUludGVyb3AgOiBjYWNoZUJhYmVsSW50ZXJvcDsgfSkobm9kZUludGVyb3ApOyB9XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmosIG5vZGVJbnRlcm9wKSB7IGlmICghbm9kZUludGVyb3AgJiYgb2JqICYmIG9iai5fX2VzTW9kdWxlKSB7IHJldHVybiBvYmo7IH0gaWYgKG9iaiA9PT0gbnVsbCB8fCB0eXBlb2Ygb2JqICE9PSBcIm9iamVjdFwiICYmIHR5cGVvZiBvYmogIT09IFwiZnVuY3Rpb25cIikgeyByZXR1cm4geyBkZWZhdWx0OiBvYmogfTsgfSB2YXIgY2FjaGUgPSBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUobm9kZUludGVyb3ApOyBpZiAoY2FjaGUgJiYgY2FjaGUuaGFzKG9iaikpIHsgcmV0dXJuIGNhY2hlLmdldChvYmopOyB9IHZhciBuZXdPYmogPSB7fTsgdmFyIGhhc1Byb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yOyBmb3IgKHZhciBrZXkgaW4gb2JqKSB7IGlmIChrZXkgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHsgdmFyIGRlc2MgPSBoYXNQcm9wZXJ0eURlc2NyaXB0b3IgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwga2V5KSA6IG51bGw7IGlmIChkZXNjICYmIChkZXNjLmdldCB8fCBkZXNjLnNldCkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCBkZXNjKTsgfSBlbHNlIHsgbmV3T2JqW2tleV0gPSBvYmpba2V5XTsgfSB9IH0gbmV3T2JqLmRlZmF1bHQgPSBvYmo7IGlmIChjYWNoZSkgeyBjYWNoZS5zZXQob2JqLCBuZXdPYmopOyB9IHJldHVybiBuZXdPYmo7IH1cbmNvbnN0IE5hdkNvbnRleHQgPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlQ29udGV4dChudWxsKTtcbk5hdkNvbnRleHQuZGlzcGxheU5hbWUgPSAnTmF2Q29udGV4dCc7XG52YXIgX2RlZmF1bHQgPSBOYXZDb250ZXh0O1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbImV4cG9ydHMiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsIlJlYWN0IiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJyZXF1aXJlIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwibm9kZUludGVyb3AiLCJXZWFrTWFwIiwiY2FjaGVCYWJlbEludGVyb3AiLCJjYWNoZU5vZGVJbnRlcm9wIiwib2JqIiwiY2FjaGUiLCJoYXMiLCJnZXQiLCJuZXdPYmoiLCJoYXNQcm9wZXJ0eURlc2NyaXB0b3IiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImRlc2MiLCJzZXQiLCJOYXZDb250ZXh0IiwiY3JlYXRlQ29udGV4dCIsImRpc3BsYXlOYW1lIiwiX2RlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/NavContext.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/NavItem.js":
/*!*************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/NavItem.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports.useNavItem = useNavItem;\nexports[\"default\"] = void 0;\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar _useEventCallback = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/useEventCallback */ \"(ssr)/./node_modules/@restart/hooks/cjs/useEventCallback.js\"));\nvar _NavContext = _interopRequireDefault(__webpack_require__(/*! ./NavContext */ \"(ssr)/./node_modules/@restart/ui/cjs/NavContext.js\"));\nvar _SelectableContext = _interopRequireWildcard(__webpack_require__(/*! ./SelectableContext */ \"(ssr)/./node_modules/@restart/ui/cjs/SelectableContext.js\"));\nvar _Button = _interopRequireDefault(__webpack_require__(/*! ./Button */ \"(ssr)/./node_modules/@restart/ui/cjs/Button.js\"));\nvar _DataKey = __webpack_require__(/*! ./DataKey */ \"(ssr)/./node_modules/@restart/ui/cjs/DataKey.js\");\nvar _TabContext = _interopRequireDefault(__webpack_require__(/*! ./TabContext */ \"(ssr)/./node_modules/@restart/ui/cjs/TabContext.js\"));\nvar _jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\nconst _excluded = [\n    \"as\",\n    \"active\",\n    \"eventKey\"\n];\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\nfunction useNavItem({ key, onClick, active, id, role, disabled }) {\n    const parentOnSelect = (0, React.useContext)(_SelectableContext.default);\n    const navContext = (0, React.useContext)(_NavContext.default);\n    const tabContext = (0, React.useContext)(_TabContext.default);\n    let isActive = active;\n    const props = {\n        role\n    };\n    if (navContext) {\n        if (!role && navContext.role === \"tablist\") props.role = \"tab\";\n        const contextControllerId = navContext.getControllerId(key != null ? key : null);\n        const contextControlledId = navContext.getControlledId(key != null ? key : null);\n        // @ts-ignore\n        props[(0, _DataKey.dataAttr)(\"event-key\")] = key;\n        props.id = contextControllerId || id;\n        isActive = active == null && key != null ? navContext.activeKey === key : active;\n        /**\n     * Simplified scenario for `mountOnEnter`.\n     *\n     * While it would make sense to keep 'aria-controls' for tabs that have been mounted at least\n     * once, it would also complicate the code quite a bit, for very little gain.\n     * The following implementation is probably good enough.\n     *\n     * @see https://github.com/react-restart/ui/pull/40#issuecomment-1009971561\n     */ if (isActive || !(tabContext != null && tabContext.unmountOnExit) && !(tabContext != null && tabContext.mountOnEnter)) props[\"aria-controls\"] = contextControlledId;\n    }\n    if (props.role === \"tab\") {\n        props[\"aria-selected\"] = isActive;\n        if (!isActive) {\n            props.tabIndex = -1;\n        }\n        if (disabled) {\n            props.tabIndex = -1;\n            props[\"aria-disabled\"] = true;\n        }\n    }\n    props.onClick = (0, _useEventCallback.default)((e)=>{\n        if (disabled) return;\n        onClick == null ? void 0 : onClick(e);\n        if (key == null) {\n            return;\n        }\n        if (parentOnSelect && !e.isPropagationStopped()) {\n            parentOnSelect(key, e);\n        }\n    });\n    return [\n        props,\n        {\n            isActive\n        }\n    ];\n}\nconst NavItem = /*#__PURE__*/ React.forwardRef((_ref, ref)=>{\n    let { as: Component = _Button.default, active, eventKey } = _ref, options = _objectWithoutPropertiesLoose(_ref, _excluded);\n    const [props, meta] = useNavItem(Object.assign({\n        key: (0, _SelectableContext.makeEventKey)(eventKey, options.href),\n        active\n    }, options));\n    // @ts-ignore\n    props[(0, _DataKey.dataAttr)(\"active\")] = meta.isActive;\n    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(Component, Object.assign({}, options, props, {\n        ref: ref\n    }));\n});\nNavItem.displayName = \"NavItem\";\nvar _default = NavItem;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/NavItem.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/NoopTransition.js":
/*!********************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/NoopTransition.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _useEventCallback = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/useEventCallback */ \"(ssr)/./node_modules/@restart/hooks/cjs/useEventCallback.js\"));\nvar _useMergedRefs = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/useMergedRefs */ \"(ssr)/./node_modules/@restart/hooks/cjs/useMergedRefs.js\"));\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction NoopTransition({ children, in: inProp, onExited, mountOnEnter, unmountOnExit }) {\n    const ref = (0, _react.useRef)(null);\n    const hasEnteredRef = (0, _react.useRef)(inProp);\n    const handleExited = (0, _useEventCallback.default)(onExited);\n    (0, _react.useEffect)(()=>{\n        if (inProp) hasEnteredRef.current = true;\n        else {\n            handleExited(ref.current);\n        }\n    }, [\n        inProp,\n        handleExited\n    ]);\n    const combinedRef = (0, _useMergedRefs.default)(ref, children.ref);\n    const child = /*#__PURE__*/ (0, _react.cloneElement)(children, {\n        ref: combinedRef\n    });\n    if (inProp) return child;\n    if (unmountOnExit) {\n        return null;\n    }\n    if (!hasEnteredRef.current && mountOnEnter) {\n        return null;\n    }\n    return child;\n}\nvar _default = NoopTransition;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvdWkvY2pzL05vb3BUcmFuc2l0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLGtCQUFrQixHQUFHO0FBQ3JCQSxrQkFBZSxHQUFHLEtBQUs7QUFDdkIsSUFBSUcsb0JBQW9CQyx1QkFBdUJDLG1CQUFPQSxDQUFDLG9HQUFpQztBQUN4RixJQUFJQyxpQkFBaUJGLHVCQUF1QkMsbUJBQU9BLENBQUMsOEZBQThCO0FBQ2xGLElBQUlFLFNBQVNGLG1CQUFPQSxDQUFDLHdHQUFPO0FBQzVCLFNBQVNELHVCQUF1QkksR0FBRztJQUFJLE9BQU9BLE9BQU9BLElBQUlQLFVBQVUsR0FBR08sTUFBTTtRQUFFTixTQUFTTTtJQUFJO0FBQUc7QUFDOUYsU0FBU0MsZUFBZSxFQUN0QkMsUUFBUSxFQUNSQyxJQUFJQyxNQUFNLEVBQ1ZDLFFBQVEsRUFDUkMsWUFBWSxFQUNaQyxhQUFhLEVBQ2Q7SUFDQyxNQUFNQyxNQUFNLENBQUMsR0FBR1QsT0FBT1UsTUFBTSxFQUFFO0lBQy9CLE1BQU1DLGdCQUFnQixDQUFDLEdBQUdYLE9BQU9VLE1BQU0sRUFBRUw7SUFDekMsTUFBTU8sZUFBZSxDQUFDLEdBQUdoQixrQkFBa0JELE9BQU8sRUFBRVc7SUFDbkQsSUFBR04sT0FBT2EsU0FBUyxFQUFFO1FBQ3BCLElBQUlSLFFBQVFNLGNBQWNHLE9BQU8sR0FBRzthQUFVO1lBQzVDRixhQUFhSCxJQUFJSyxPQUFPO1FBQzFCO0lBQ0YsR0FBRztRQUFDVDtRQUFRTztLQUFhO0lBQ3pCLE1BQU1HLGNBQWMsQ0FBQyxHQUFHaEIsZUFBZUosT0FBTyxFQUFFYyxLQUFLTixTQUFTTSxHQUFHO0lBQ2pFLE1BQU1PLFFBQXFCLFdBQUYsR0FBRyxJQUFHaEIsT0FBT2lCLFlBQVksRUFBRWQsVUFBVTtRQUM1RE0sS0FBS007SUFDUDtJQUNBLElBQUlWLFFBQVEsT0FBT1c7SUFDbkIsSUFBSVIsZUFBZTtRQUNqQixPQUFPO0lBQ1Q7SUFDQSxJQUFJLENBQUNHLGNBQWNHLE9BQU8sSUFBSVAsY0FBYztRQUMxQyxPQUFPO0lBQ1Q7SUFDQSxPQUFPUztBQUNUO0FBQ0EsSUFBSUUsV0FBV2hCO0FBQ2ZULGtCQUFlLEdBQUd5QiIsInNvdXJjZXMiOlsid2VicGFjazovL3ZlbnRhLWF1dG9zLy4vbm9kZV9tb2R1bGVzL0ByZXN0YXJ0L3VpL2Nqcy9Ob29wVHJhbnNpdGlvbi5qcz9lODk3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIF91c2VFdmVudENhbGxiYWNrID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiQHJlc3RhcnQvaG9va3MvdXNlRXZlbnRDYWxsYmFja1wiKSk7XG52YXIgX3VzZU1lcmdlZFJlZnMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJAcmVzdGFydC9ob29rcy91c2VNZXJnZWRSZWZzXCIpKTtcbnZhciBfcmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuZnVuY3Rpb24gTm9vcFRyYW5zaXRpb24oe1xuICBjaGlsZHJlbixcbiAgaW46IGluUHJvcCxcbiAgb25FeGl0ZWQsXG4gIG1vdW50T25FbnRlcixcbiAgdW5tb3VudE9uRXhpdFxufSkge1xuICBjb25zdCByZWYgPSAoMCwgX3JlYWN0LnVzZVJlZikobnVsbCk7XG4gIGNvbnN0IGhhc0VudGVyZWRSZWYgPSAoMCwgX3JlYWN0LnVzZVJlZikoaW5Qcm9wKTtcbiAgY29uc3QgaGFuZGxlRXhpdGVkID0gKDAsIF91c2VFdmVudENhbGxiYWNrLmRlZmF1bHQpKG9uRXhpdGVkKTtcbiAgKDAsIF9yZWFjdC51c2VFZmZlY3QpKCgpID0+IHtcbiAgICBpZiAoaW5Qcm9wKSBoYXNFbnRlcmVkUmVmLmN1cnJlbnQgPSB0cnVlO2Vsc2Uge1xuICAgICAgaGFuZGxlRXhpdGVkKHJlZi5jdXJyZW50KTtcbiAgICB9XG4gIH0sIFtpblByb3AsIGhhbmRsZUV4aXRlZF0pO1xuICBjb25zdCBjb21iaW5lZFJlZiA9ICgwLCBfdXNlTWVyZ2VkUmVmcy5kZWZhdWx0KShyZWYsIGNoaWxkcmVuLnJlZik7XG4gIGNvbnN0IGNoaWxkID0gLyojX19QVVJFX18qLygwLCBfcmVhY3QuY2xvbmVFbGVtZW50KShjaGlsZHJlbiwge1xuICAgIHJlZjogY29tYmluZWRSZWZcbiAgfSk7XG4gIGlmIChpblByb3ApIHJldHVybiBjaGlsZDtcbiAgaWYgKHVubW91bnRPbkV4aXQpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICBpZiAoIWhhc0VudGVyZWRSZWYuY3VycmVudCAmJiBtb3VudE9uRW50ZXIpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICByZXR1cm4gY2hpbGQ7XG59XG52YXIgX2RlZmF1bHQgPSBOb29wVHJhbnNpdGlvbjtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6WyJleHBvcnRzIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJfdXNlRXZlbnRDYWxsYmFjayIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX3VzZU1lcmdlZFJlZnMiLCJfcmVhY3QiLCJvYmoiLCJOb29wVHJhbnNpdGlvbiIsImNoaWxkcmVuIiwiaW4iLCJpblByb3AiLCJvbkV4aXRlZCIsIm1vdW50T25FbnRlciIsInVubW91bnRPbkV4aXQiLCJyZWYiLCJ1c2VSZWYiLCJoYXNFbnRlcmVkUmVmIiwiaGFuZGxlRXhpdGVkIiwidXNlRWZmZWN0IiwiY3VycmVudCIsImNvbWJpbmVkUmVmIiwiY2hpbGQiLCJjbG9uZUVsZW1lbnQiLCJfZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/NoopTransition.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/SelectableContext.js":
/*!***********************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/SelectableContext.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = exports.makeEventKey = void 0;\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nconst SelectableContext = /*#__PURE__*/ React.createContext(null);\nconst makeEventKey = (eventKey, href = null)=>{\n    if (eventKey != null) return String(eventKey);\n    return href || null;\n};\nexports.makeEventKey = makeEventKey;\nvar _default = SelectableContext;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvdWkvY2pzL1NlbGVjdGFibGVDb250ZXh0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLGtCQUFrQixHQUFHO0FBQ3JCQSxrQkFBZSxHQUFHQSxvQkFBb0IsR0FBRyxLQUFLO0FBQzlDLElBQUlJLFFBQVFDLHdCQUF3QkMsbUJBQU9BLENBQUMsd0dBQU87QUFDbkQsU0FBU0MseUJBQXlCQyxXQUFXO0lBQUksSUFBSSxPQUFPQyxZQUFZLFlBQVksT0FBTztJQUFNLElBQUlDLG9CQUFvQixJQUFJRDtJQUFXLElBQUlFLG1CQUFtQixJQUFJRjtJQUFXLE9BQU8sQ0FBQ0YsMkJBQTJCLFNBQVVDLFdBQVc7UUFBSSxPQUFPQSxjQUFjRyxtQkFBbUJEO0lBQW1CLEdBQUdGO0FBQWM7QUFDdFQsU0FBU0gsd0JBQXdCTyxHQUFHLEVBQUVKLFdBQVc7SUFBSSxJQUFJLENBQUNBLGVBQWVJLE9BQU9BLElBQUlYLFVBQVUsRUFBRTtRQUFFLE9BQU9XO0lBQUs7SUFBRSxJQUFJQSxRQUFRLFFBQVEsT0FBT0EsUUFBUSxZQUFZLE9BQU9BLFFBQVEsWUFBWTtRQUFFLE9BQU87WUFBRVYsU0FBU1U7UUFBSTtJQUFHO0lBQUUsSUFBSUMsUUFBUU4seUJBQXlCQztJQUFjLElBQUlLLFNBQVNBLE1BQU1DLEdBQUcsQ0FBQ0YsTUFBTTtRQUFFLE9BQU9DLE1BQU1FLEdBQUcsQ0FBQ0g7SUFBTTtJQUFFLElBQUlJLFNBQVMsQ0FBQztJQUFHLElBQUlDLHdCQUF3QkMsT0FBT0MsY0FBYyxJQUFJRCxPQUFPRSx3QkFBd0I7SUFBRSxJQUFLLElBQUlDLE9BQU9ULElBQUs7UUFBRSxJQUFJUyxRQUFRLGFBQWFILE9BQU9JLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNaLEtBQUtTLE1BQU07WUFBRSxJQUFJSSxPQUFPUix3QkFBd0JDLE9BQU9FLHdCQUF3QixDQUFDUixLQUFLUyxPQUFPO1lBQU0sSUFBSUksUUFBU0EsQ0FBQUEsS0FBS1YsR0FBRyxJQUFJVSxLQUFLQyxHQUFHLEdBQUc7Z0JBQUVSLE9BQU9DLGNBQWMsQ0FBQ0gsUUFBUUssS0FBS0k7WUFBTyxPQUFPO2dCQUFFVCxNQUFNLENBQUNLLElBQUksR0FBR1QsR0FBRyxDQUFDUyxJQUFJO1lBQUU7UUFBRTtJQUFFO0lBQUVMLE9BQU9kLE9BQU8sR0FBR1U7SUFBSyxJQUFJQyxPQUFPO1FBQUVBLE1BQU1hLEdBQUcsQ0FBQ2QsS0FBS0k7SUFBUztJQUFFLE9BQU9BO0FBQVE7QUFDbnlCLE1BQU1XLG9CQUFvQixXQUFXLEdBQUV2QixNQUFNd0IsYUFBYSxDQUFDO0FBQzNELE1BQU16QixlQUFlLENBQUMwQixVQUFVQyxPQUFPLElBQUk7SUFDekMsSUFBSUQsWUFBWSxNQUFNLE9BQU9FLE9BQU9GO0lBQ3BDLE9BQU9DLFFBQVE7QUFDakI7QUFDQTlCLG9CQUFvQixHQUFHRztBQUN2QixJQUFJNkIsV0FBV0w7QUFDZjNCLGtCQUFlLEdBQUdnQyIsInNvdXJjZXMiOlsid2VicGFjazovL3ZlbnRhLWF1dG9zLy4vbm9kZV9tb2R1bGVzL0ByZXN0YXJ0L3VpL2Nqcy9TZWxlY3RhYmxlQ29udGV4dC5qcz83Nzc0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5kZWZhdWx0ID0gZXhwb3J0cy5tYWtlRXZlbnRLZXkgPSB2b2lkIDA7XG52YXIgUmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKFwicmVhY3RcIikpO1xuZnVuY3Rpb24gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKG5vZGVJbnRlcm9wKSB7IGlmICh0eXBlb2YgV2Vha01hcCAhPT0gXCJmdW5jdGlvblwiKSByZXR1cm4gbnVsbDsgdmFyIGNhY2hlQmFiZWxJbnRlcm9wID0gbmV3IFdlYWtNYXAoKTsgdmFyIGNhY2hlTm9kZUludGVyb3AgPSBuZXcgV2Vha01hcCgpOyByZXR1cm4gKF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSA9IGZ1bmN0aW9uIChub2RlSW50ZXJvcCkgeyByZXR1cm4gbm9kZUludGVyb3AgPyBjYWNoZU5vZGVJbnRlcm9wIDogY2FjaGVCYWJlbEludGVyb3A7IH0pKG5vZGVJbnRlcm9wKTsgfVxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQob2JqLCBub2RlSW50ZXJvcCkgeyBpZiAoIW5vZGVJbnRlcm9wICYmIG9iaiAmJiBvYmouX19lc01vZHVsZSkgeyByZXR1cm4gb2JqOyB9IGlmIChvYmogPT09IG51bGwgfHwgdHlwZW9mIG9iaiAhPT0gXCJvYmplY3RcIiAmJiB0eXBlb2Ygb2JqICE9PSBcImZ1bmN0aW9uXCIpIHsgcmV0dXJuIHsgZGVmYXVsdDogb2JqIH07IH0gdmFyIGNhY2hlID0gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKG5vZGVJbnRlcm9wKTsgaWYgKGNhY2hlICYmIGNhY2hlLmhhcyhvYmopKSB7IHJldHVybiBjYWNoZS5nZXQob2JqKTsgfSB2YXIgbmV3T2JqID0ge307IHZhciBoYXNQcm9wZXJ0eURlc2NyaXB0b3IgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjsgZm9yICh2YXIga2V5IGluIG9iaikgeyBpZiAoa2V5ICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7IHZhciBkZXNjID0gaGFzUHJvcGVydHlEZXNjcmlwdG9yID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSkgOiBudWxsOyBpZiAoZGVzYyAmJiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7IH0gZWxzZSB7IG5ld09ialtrZXldID0gb2JqW2tleV07IH0gfSB9IG5ld09iai5kZWZhdWx0ID0gb2JqOyBpZiAoY2FjaGUpIHsgY2FjaGUuc2V0KG9iaiwgbmV3T2JqKTsgfSByZXR1cm4gbmV3T2JqOyB9XG5jb25zdCBTZWxlY3RhYmxlQ29udGV4dCA9IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVDb250ZXh0KG51bGwpO1xuY29uc3QgbWFrZUV2ZW50S2V5ID0gKGV2ZW50S2V5LCBocmVmID0gbnVsbCkgPT4ge1xuICBpZiAoZXZlbnRLZXkgIT0gbnVsbCkgcmV0dXJuIFN0cmluZyhldmVudEtleSk7XG4gIHJldHVybiBocmVmIHx8IG51bGw7XG59O1xuZXhwb3J0cy5tYWtlRXZlbnRLZXkgPSBtYWtlRXZlbnRLZXk7XG52YXIgX2RlZmF1bHQgPSBTZWxlY3RhYmxlQ29udGV4dDtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyJdLCJuYW1lcyI6WyJleHBvcnRzIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJtYWtlRXZlbnRLZXkiLCJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsIm5vZGVJbnRlcm9wIiwiV2Vha01hcCIsImNhY2hlQmFiZWxJbnRlcm9wIiwiY2FjaGVOb2RlSW50ZXJvcCIsIm9iaiIsImNhY2hlIiwiaGFzIiwiZ2V0IiwibmV3T2JqIiwiaGFzUHJvcGVydHlEZXNjcmlwdG9yIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJrZXkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJkZXNjIiwic2V0IiwiU2VsZWN0YWJsZUNvbnRleHQiLCJjcmVhdGVDb250ZXh0IiwiZXZlbnRLZXkiLCJocmVmIiwiU3RyaW5nIiwiX2RlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/SelectableContext.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/TabContext.js":
/*!****************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/TabContext.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nconst TabContext = /*#__PURE__*/ React.createContext(null);\nvar _default = TabContext;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvdWkvY2pzL1RhYkNvbnRleHQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsa0JBQWtCLEdBQUc7QUFDckJBLGtCQUFlLEdBQUcsS0FBSztBQUN2QixJQUFJRyxRQUFRQyx3QkFBd0JDLG1CQUFPQSxDQUFDLHdHQUFPO0FBQ25ELFNBQVNDLHlCQUF5QkMsV0FBVztJQUFJLElBQUksT0FBT0MsWUFBWSxZQUFZLE9BQU87SUFBTSxJQUFJQyxvQkFBb0IsSUFBSUQ7SUFBVyxJQUFJRSxtQkFBbUIsSUFBSUY7SUFBVyxPQUFPLENBQUNGLDJCQUEyQixTQUFVQyxXQUFXO1FBQUksT0FBT0EsY0FBY0csbUJBQW1CRDtJQUFtQixHQUFHRjtBQUFjO0FBQ3RULFNBQVNILHdCQUF3Qk8sR0FBRyxFQUFFSixXQUFXO0lBQUksSUFBSSxDQUFDQSxlQUFlSSxPQUFPQSxJQUFJVixVQUFVLEVBQUU7UUFBRSxPQUFPVTtJQUFLO0lBQUUsSUFBSUEsUUFBUSxRQUFRLE9BQU9BLFFBQVEsWUFBWSxPQUFPQSxRQUFRLFlBQVk7UUFBRSxPQUFPO1lBQUVULFNBQVNTO1FBQUk7SUFBRztJQUFFLElBQUlDLFFBQVFOLHlCQUF5QkM7SUFBYyxJQUFJSyxTQUFTQSxNQUFNQyxHQUFHLENBQUNGLE1BQU07UUFBRSxPQUFPQyxNQUFNRSxHQUFHLENBQUNIO0lBQU07SUFBRSxJQUFJSSxTQUFTLENBQUM7SUFBRyxJQUFJQyx3QkFBd0JDLE9BQU9DLGNBQWMsSUFBSUQsT0FBT0Usd0JBQXdCO0lBQUUsSUFBSyxJQUFJQyxPQUFPVCxJQUFLO1FBQUUsSUFBSVMsUUFBUSxhQUFhSCxPQUFPSSxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDWixLQUFLUyxNQUFNO1lBQUUsSUFBSUksT0FBT1Isd0JBQXdCQyxPQUFPRSx3QkFBd0IsQ0FBQ1IsS0FBS1MsT0FBTztZQUFNLElBQUlJLFFBQVNBLENBQUFBLEtBQUtWLEdBQUcsSUFBSVUsS0FBS0MsR0FBRyxHQUFHO2dCQUFFUixPQUFPQyxjQUFjLENBQUNILFFBQVFLLEtBQUtJO1lBQU8sT0FBTztnQkFBRVQsTUFBTSxDQUFDSyxJQUFJLEdBQUdULEdBQUcsQ0FBQ1MsSUFBSTtZQUFFO1FBQUU7SUFBRTtJQUFFTCxPQUFPYixPQUFPLEdBQUdTO0lBQUssSUFBSUMsT0FBTztRQUFFQSxNQUFNYSxHQUFHLENBQUNkLEtBQUtJO0lBQVM7SUFBRSxPQUFPQTtBQUFRO0FBQ255QixNQUFNVyxhQUFhLFdBQVcsR0FBRXZCLE1BQU13QixhQUFhLENBQUM7QUFDcEQsSUFBSUMsV0FBV0Y7QUFDZjFCLGtCQUFlLEdBQUc0QiIsInNvdXJjZXMiOlsid2VicGFjazovL3ZlbnRhLWF1dG9zLy4vbm9kZV9tb2R1bGVzL0ByZXN0YXJ0L3VpL2Nqcy9UYWJDb250ZXh0LmpzPzVmMzIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgUmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKFwicmVhY3RcIikpO1xuZnVuY3Rpb24gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKG5vZGVJbnRlcm9wKSB7IGlmICh0eXBlb2YgV2Vha01hcCAhPT0gXCJmdW5jdGlvblwiKSByZXR1cm4gbnVsbDsgdmFyIGNhY2hlQmFiZWxJbnRlcm9wID0gbmV3IFdlYWtNYXAoKTsgdmFyIGNhY2hlTm9kZUludGVyb3AgPSBuZXcgV2Vha01hcCgpOyByZXR1cm4gKF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSA9IGZ1bmN0aW9uIChub2RlSW50ZXJvcCkgeyByZXR1cm4gbm9kZUludGVyb3AgPyBjYWNoZU5vZGVJbnRlcm9wIDogY2FjaGVCYWJlbEludGVyb3A7IH0pKG5vZGVJbnRlcm9wKTsgfVxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQob2JqLCBub2RlSW50ZXJvcCkgeyBpZiAoIW5vZGVJbnRlcm9wICYmIG9iaiAmJiBvYmouX19lc01vZHVsZSkgeyByZXR1cm4gb2JqOyB9IGlmIChvYmogPT09IG51bGwgfHwgdHlwZW9mIG9iaiAhPT0gXCJvYmplY3RcIiAmJiB0eXBlb2Ygb2JqICE9PSBcImZ1bmN0aW9uXCIpIHsgcmV0dXJuIHsgZGVmYXVsdDogb2JqIH07IH0gdmFyIGNhY2hlID0gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKG5vZGVJbnRlcm9wKTsgaWYgKGNhY2hlICYmIGNhY2hlLmhhcyhvYmopKSB7IHJldHVybiBjYWNoZS5nZXQob2JqKTsgfSB2YXIgbmV3T2JqID0ge307IHZhciBoYXNQcm9wZXJ0eURlc2NyaXB0b3IgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjsgZm9yICh2YXIga2V5IGluIG9iaikgeyBpZiAoa2V5ICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7IHZhciBkZXNjID0gaGFzUHJvcGVydHlEZXNjcmlwdG9yID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSkgOiBudWxsOyBpZiAoZGVzYyAmJiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7IH0gZWxzZSB7IG5ld09ialtrZXldID0gb2JqW2tleV07IH0gfSB9IG5ld09iai5kZWZhdWx0ID0gb2JqOyBpZiAoY2FjaGUpIHsgY2FjaGUuc2V0KG9iaiwgbmV3T2JqKTsgfSByZXR1cm4gbmV3T2JqOyB9XG5jb25zdCBUYWJDb250ZXh0ID0gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUNvbnRleHQobnVsbCk7XG52YXIgX2RlZmF1bHQgPSBUYWJDb250ZXh0O1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7Il0sIm5hbWVzIjpbImV4cG9ydHMiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsIlJlYWN0IiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJyZXF1aXJlIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwibm9kZUludGVyb3AiLCJXZWFrTWFwIiwiY2FjaGVCYWJlbEludGVyb3AiLCJjYWNoZU5vZGVJbnRlcm9wIiwib2JqIiwiY2FjaGUiLCJoYXMiLCJnZXQiLCJuZXdPYmoiLCJoYXNQcm9wZXJ0eURlc2NyaXB0b3IiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImRlc2MiLCJzZXQiLCJUYWJDb250ZXh0IiwiY3JlYXRlQ29udGV4dCIsIl9kZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/TabContext.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/getScrollbarWidth.js":
/*!***********************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/getScrollbarWidth.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = getBodyScrollbarWidth;\n/**\n * Get the width of the vertical window scrollbar if it's visible\n */ function getBodyScrollbarWidth(ownerDocument = document) {\n    const window = ownerDocument.defaultView;\n    return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvdWkvY2pzL2dldFNjcm9sbGJhcldpZHRoLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLGtCQUFrQixHQUFHO0FBQ3JCQSxrQkFBZSxHQUFHRztBQUNsQjs7Q0FFQyxHQUNELFNBQVNBLHNCQUFzQkMsZ0JBQWdCQyxRQUFRO0lBQ3JELE1BQU1DLFNBQVNGLGNBQWNHLFdBQVc7SUFDeEMsT0FBT0MsS0FBS0MsR0FBRyxDQUFDSCxPQUFPSSxVQUFVLEdBQUdOLGNBQWNPLGVBQWUsQ0FBQ0MsV0FBVztBQUMvRSIsInNvdXJjZXMiOlsid2VicGFjazovL3ZlbnRhLWF1dG9zLy4vbm9kZV9tb2R1bGVzL0ByZXN0YXJ0L3VpL2Nqcy9nZXRTY3JvbGxiYXJXaWR0aC5qcz9jNGU1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5kZWZhdWx0ID0gZ2V0Qm9keVNjcm9sbGJhcldpZHRoO1xuLyoqXG4gKiBHZXQgdGhlIHdpZHRoIG9mIHRoZSB2ZXJ0aWNhbCB3aW5kb3cgc2Nyb2xsYmFyIGlmIGl0J3MgdmlzaWJsZVxuICovXG5mdW5jdGlvbiBnZXRCb2R5U2Nyb2xsYmFyV2lkdGgob3duZXJEb2N1bWVudCA9IGRvY3VtZW50KSB7XG4gIGNvbnN0IHdpbmRvdyA9IG93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXc7XG4gIHJldHVybiBNYXRoLmFicyh3aW5kb3cuaW5uZXJXaWR0aCAtIG93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoKTtcbn0iXSwibmFtZXMiOlsiZXhwb3J0cyIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiZ2V0Qm9keVNjcm9sbGJhcldpZHRoIiwib3duZXJEb2N1bWVudCIsImRvY3VtZW50Iiwid2luZG93IiwiZGVmYXVsdFZpZXciLCJNYXRoIiwiYWJzIiwiaW5uZXJXaWR0aCIsImRvY3VtZW50RWxlbWVudCIsImNsaWVudFdpZHRoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/getScrollbarWidth.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/mergeOptionsWithPopperConfig.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/mergeOptionsWithPopperConfig.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nexports.__esModule = true;\nexports.toModifierMap = toModifierMap;\nexports.toModifierArray = toModifierArray;\nexports[\"default\"] = mergeOptionsWithPopperConfig;\nfunction toModifierMap(modifiers) {\n    const result = {};\n    if (!Array.isArray(modifiers)) {\n        return modifiers || result;\n    }\n    // eslint-disable-next-line no-unused-expressions\n    modifiers == null ? void 0 : modifiers.forEach((m)=>{\n        result[m.name] = m;\n    });\n    return result;\n}\nfunction toModifierArray(map = {}) {\n    if (Array.isArray(map)) return map;\n    return Object.keys(map).map((k)=>{\n        map[k].name = k;\n        return map[k];\n    });\n}\nfunction mergeOptionsWithPopperConfig({ enabled, enableEvents, placement, flip, offset, fixed, containerPadding, arrowElement, popperConfig = {} }) {\n    var _modifiers$eventListe, _modifiers$preventOve, _modifiers$preventOve2, _modifiers$offset, _modifiers$arrow;\n    const modifiers = toModifierMap(popperConfig.modifiers);\n    return Object.assign({}, popperConfig, {\n        placement,\n        enabled,\n        strategy: fixed ? \"fixed\" : popperConfig.strategy,\n        modifiers: toModifierArray(Object.assign({}, modifiers, {\n            eventListeners: {\n                enabled: enableEvents,\n                options: (_modifiers$eventListe = modifiers.eventListeners) == null ? void 0 : _modifiers$eventListe.options\n            },\n            preventOverflow: Object.assign({}, modifiers.preventOverflow, {\n                options: containerPadding ? Object.assign({\n                    padding: containerPadding\n                }, (_modifiers$preventOve = modifiers.preventOverflow) == null ? void 0 : _modifiers$preventOve.options) : (_modifiers$preventOve2 = modifiers.preventOverflow) == null ? void 0 : _modifiers$preventOve2.options\n            }),\n            offset: {\n                options: Object.assign({\n                    offset\n                }, (_modifiers$offset = modifiers.offset) == null ? void 0 : _modifiers$offset.options)\n            },\n            arrow: Object.assign({}, modifiers.arrow, {\n                enabled: !!arrowElement,\n                options: Object.assign({}, (_modifiers$arrow = modifiers.arrow) == null ? void 0 : _modifiers$arrow.options, {\n                    element: arrowElement\n                })\n            }),\n            flip: Object.assign({\n                enabled: !!flip\n            }, modifiers.flip)\n        }))\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvdWkvY2pzL21lcmdlT3B0aW9uc1dpdGhQb3BwZXJDb25maWcuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsa0JBQWtCLEdBQUc7QUFDckJBLHFCQUFxQixHQUFHRTtBQUN4QkYsdUJBQXVCLEdBQUdHO0FBQzFCSCxrQkFBZSxHQUFHSztBQUNsQixTQUFTSCxjQUFjSSxTQUFTO0lBQzlCLE1BQU1DLFNBQVMsQ0FBQztJQUNoQixJQUFJLENBQUNDLE1BQU1DLE9BQU8sQ0FBQ0gsWUFBWTtRQUM3QixPQUFPQSxhQUFhQztJQUN0QjtJQUVBLGlEQUFpRDtJQUNqREQsYUFBYSxPQUFPLEtBQUssSUFBSUEsVUFBVUksT0FBTyxDQUFDQyxDQUFBQTtRQUM3Q0osTUFBTSxDQUFDSSxFQUFFQyxJQUFJLENBQUMsR0FBR0Q7SUFDbkI7SUFDQSxPQUFPSjtBQUNUO0FBQ0EsU0FBU0osZ0JBQWdCVSxNQUFNLENBQUMsQ0FBQztJQUMvQixJQUFJTCxNQUFNQyxPQUFPLENBQUNJLE1BQU0sT0FBT0E7SUFDL0IsT0FBT0MsT0FBT0MsSUFBSSxDQUFDRixLQUFLQSxHQUFHLENBQUNHLENBQUFBO1FBQzFCSCxHQUFHLENBQUNHLEVBQUUsQ0FBQ0osSUFBSSxHQUFHSTtRQUNkLE9BQU9ILEdBQUcsQ0FBQ0csRUFBRTtJQUNmO0FBQ0Y7QUFDQSxTQUFTWCw2QkFBNkIsRUFDcENZLE9BQU8sRUFDUEMsWUFBWSxFQUNaQyxTQUFTLEVBQ1RDLElBQUksRUFDSkMsTUFBTSxFQUNOQyxLQUFLLEVBQ0xDLGdCQUFnQixFQUNoQkMsWUFBWSxFQUNaQyxlQUFlLENBQUMsQ0FBQyxFQUNsQjtJQUNDLElBQUlDLHVCQUF1QkMsdUJBQXVCQyx3QkFBd0JDLG1CQUFtQkM7SUFDN0YsTUFBTXhCLFlBQVlKLGNBQWN1QixhQUFhbkIsU0FBUztJQUN0RCxPQUFPUSxPQUFPaUIsTUFBTSxDQUFDLENBQUMsR0FBR04sY0FBYztRQUNyQ047UUFDQUY7UUFDQWUsVUFBVVYsUUFBUSxVQUFVRyxhQUFhTyxRQUFRO1FBQ2pEMUIsV0FBV0gsZ0JBQWdCVyxPQUFPaUIsTUFBTSxDQUFDLENBQUMsR0FBR3pCLFdBQVc7WUFDdEQyQixnQkFBZ0I7Z0JBQ2RoQixTQUFTQztnQkFDVGdCLFNBQVMsQ0FBQ1Isd0JBQXdCcEIsVUFBVTJCLGNBQWMsS0FBSyxPQUFPLEtBQUssSUFBSVAsc0JBQXNCUSxPQUFPO1lBQzlHO1lBQ0FDLGlCQUFpQnJCLE9BQU9pQixNQUFNLENBQUMsQ0FBQyxHQUFHekIsVUFBVTZCLGVBQWUsRUFBRTtnQkFDNURELFNBQVNYLG1CQUFtQlQsT0FBT2lCLE1BQU0sQ0FBQztvQkFDeENLLFNBQVNiO2dCQUNYLEdBQUcsQ0FBQ0ksd0JBQXdCckIsVUFBVTZCLGVBQWUsS0FBSyxPQUFPLEtBQUssSUFBSVIsc0JBQXNCTyxPQUFPLElBQUksQ0FBQ04seUJBQXlCdEIsVUFBVTZCLGVBQWUsS0FBSyxPQUFPLEtBQUssSUFBSVAsdUJBQXVCTSxPQUFPO1lBQ25OO1lBQ0FiLFFBQVE7Z0JBQ05hLFNBQVNwQixPQUFPaUIsTUFBTSxDQUFDO29CQUNyQlY7Z0JBQ0YsR0FBRyxDQUFDUSxvQkFBb0J2QixVQUFVZSxNQUFNLEtBQUssT0FBTyxLQUFLLElBQUlRLGtCQUFrQkssT0FBTztZQUN4RjtZQUNBRyxPQUFPdkIsT0FBT2lCLE1BQU0sQ0FBQyxDQUFDLEdBQUd6QixVQUFVK0IsS0FBSyxFQUFFO2dCQUN4Q3BCLFNBQVMsQ0FBQyxDQUFDTztnQkFDWFUsU0FBU3BCLE9BQU9pQixNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUNELG1CQUFtQnhCLFVBQVUrQixLQUFLLEtBQUssT0FBTyxLQUFLLElBQUlQLGlCQUFpQkksT0FBTyxFQUFFO29CQUMzR0ksU0FBU2Q7Z0JBQ1g7WUFDRjtZQUNBSixNQUFNTixPQUFPaUIsTUFBTSxDQUFDO2dCQUNsQmQsU0FBUyxDQUFDLENBQUNHO1lBQ2IsR0FBR2QsVUFBVWMsSUFBSTtRQUNuQjtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92ZW50YS1hdXRvcy8uL25vZGVfbW9kdWxlcy9AcmVzdGFydC91aS9janMvbWVyZ2VPcHRpb25zV2l0aFBvcHBlckNvbmZpZy5qcz81MTVkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy50b01vZGlmaWVyTWFwID0gdG9Nb2RpZmllck1hcDtcbmV4cG9ydHMudG9Nb2RpZmllckFycmF5ID0gdG9Nb2RpZmllckFycmF5O1xuZXhwb3J0cy5kZWZhdWx0ID0gbWVyZ2VPcHRpb25zV2l0aFBvcHBlckNvbmZpZztcbmZ1bmN0aW9uIHRvTW9kaWZpZXJNYXAobW9kaWZpZXJzKSB7XG4gIGNvbnN0IHJlc3VsdCA9IHt9O1xuICBpZiAoIUFycmF5LmlzQXJyYXkobW9kaWZpZXJzKSkge1xuICAgIHJldHVybiBtb2RpZmllcnMgfHwgcmVzdWx0O1xuICB9XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC1leHByZXNzaW9uc1xuICBtb2RpZmllcnMgPT0gbnVsbCA/IHZvaWQgMCA6IG1vZGlmaWVycy5mb3JFYWNoKG0gPT4ge1xuICAgIHJlc3VsdFttLm5hbWVdID0gbTtcbiAgfSk7XG4gIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiB0b01vZGlmaWVyQXJyYXkobWFwID0ge30pIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkobWFwKSkgcmV0dXJuIG1hcDtcbiAgcmV0dXJuIE9iamVjdC5rZXlzKG1hcCkubWFwKGsgPT4ge1xuICAgIG1hcFtrXS5uYW1lID0gaztcbiAgICByZXR1cm4gbWFwW2tdO1xuICB9KTtcbn1cbmZ1bmN0aW9uIG1lcmdlT3B0aW9uc1dpdGhQb3BwZXJDb25maWcoe1xuICBlbmFibGVkLFxuICBlbmFibGVFdmVudHMsXG4gIHBsYWNlbWVudCxcbiAgZmxpcCxcbiAgb2Zmc2V0LFxuICBmaXhlZCxcbiAgY29udGFpbmVyUGFkZGluZyxcbiAgYXJyb3dFbGVtZW50LFxuICBwb3BwZXJDb25maWcgPSB7fVxufSkge1xuICB2YXIgX21vZGlmaWVycyRldmVudExpc3RlLCBfbW9kaWZpZXJzJHByZXZlbnRPdmUsIF9tb2RpZmllcnMkcHJldmVudE92ZTIsIF9tb2RpZmllcnMkb2Zmc2V0LCBfbW9kaWZpZXJzJGFycm93O1xuICBjb25zdCBtb2RpZmllcnMgPSB0b01vZGlmaWVyTWFwKHBvcHBlckNvbmZpZy5tb2RpZmllcnMpO1xuICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgcG9wcGVyQ29uZmlnLCB7XG4gICAgcGxhY2VtZW50LFxuICAgIGVuYWJsZWQsXG4gICAgc3RyYXRlZ3k6IGZpeGVkID8gJ2ZpeGVkJyA6IHBvcHBlckNvbmZpZy5zdHJhdGVneSxcbiAgICBtb2RpZmllcnM6IHRvTW9kaWZpZXJBcnJheShPYmplY3QuYXNzaWduKHt9LCBtb2RpZmllcnMsIHtcbiAgICAgIGV2ZW50TGlzdGVuZXJzOiB7XG4gICAgICAgIGVuYWJsZWQ6IGVuYWJsZUV2ZW50cyxcbiAgICAgICAgb3B0aW9uczogKF9tb2RpZmllcnMkZXZlbnRMaXN0ZSA9IG1vZGlmaWVycy5ldmVudExpc3RlbmVycykgPT0gbnVsbCA/IHZvaWQgMCA6IF9tb2RpZmllcnMkZXZlbnRMaXN0ZS5vcHRpb25zXG4gICAgICB9LFxuICAgICAgcHJldmVudE92ZXJmbG93OiBPYmplY3QuYXNzaWduKHt9LCBtb2RpZmllcnMucHJldmVudE92ZXJmbG93LCB7XG4gICAgICAgIG9wdGlvbnM6IGNvbnRhaW5lclBhZGRpbmcgPyBPYmplY3QuYXNzaWduKHtcbiAgICAgICAgICBwYWRkaW5nOiBjb250YWluZXJQYWRkaW5nXG4gICAgICAgIH0sIChfbW9kaWZpZXJzJHByZXZlbnRPdmUgPSBtb2RpZmllcnMucHJldmVudE92ZXJmbG93KSA9PSBudWxsID8gdm9pZCAwIDogX21vZGlmaWVycyRwcmV2ZW50T3ZlLm9wdGlvbnMpIDogKF9tb2RpZmllcnMkcHJldmVudE92ZTIgPSBtb2RpZmllcnMucHJldmVudE92ZXJmbG93KSA9PSBudWxsID8gdm9pZCAwIDogX21vZGlmaWVycyRwcmV2ZW50T3ZlMi5vcHRpb25zXG4gICAgICB9KSxcbiAgICAgIG9mZnNldDoge1xuICAgICAgICBvcHRpb25zOiBPYmplY3QuYXNzaWduKHtcbiAgICAgICAgICBvZmZzZXRcbiAgICAgICAgfSwgKF9tb2RpZmllcnMkb2Zmc2V0ID0gbW9kaWZpZXJzLm9mZnNldCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9tb2RpZmllcnMkb2Zmc2V0Lm9wdGlvbnMpXG4gICAgICB9LFxuICAgICAgYXJyb3c6IE9iamVjdC5hc3NpZ24oe30sIG1vZGlmaWVycy5hcnJvdywge1xuICAgICAgICBlbmFibGVkOiAhIWFycm93RWxlbWVudCxcbiAgICAgICAgb3B0aW9uczogT2JqZWN0LmFzc2lnbih7fSwgKF9tb2RpZmllcnMkYXJyb3cgPSBtb2RpZmllcnMuYXJyb3cpID09IG51bGwgPyB2b2lkIDAgOiBfbW9kaWZpZXJzJGFycm93Lm9wdGlvbnMsIHtcbiAgICAgICAgICBlbGVtZW50OiBhcnJvd0VsZW1lbnRcbiAgICAgICAgfSlcbiAgICAgIH0pLFxuICAgICAgZmxpcDogT2JqZWN0LmFzc2lnbih7XG4gICAgICAgIGVuYWJsZWQ6ICEhZmxpcFxuICAgICAgfSwgbW9kaWZpZXJzLmZsaXApXG4gICAgfSkpXG4gIH0pO1xufSJdLCJuYW1lcyI6WyJleHBvcnRzIiwiX19lc01vZHVsZSIsInRvTW9kaWZpZXJNYXAiLCJ0b01vZGlmaWVyQXJyYXkiLCJkZWZhdWx0IiwibWVyZ2VPcHRpb25zV2l0aFBvcHBlckNvbmZpZyIsIm1vZGlmaWVycyIsInJlc3VsdCIsIkFycmF5IiwiaXNBcnJheSIsImZvckVhY2giLCJtIiwibmFtZSIsIm1hcCIsIk9iamVjdCIsImtleXMiLCJrIiwiZW5hYmxlZCIsImVuYWJsZUV2ZW50cyIsInBsYWNlbWVudCIsImZsaXAiLCJvZmZzZXQiLCJmaXhlZCIsImNvbnRhaW5lclBhZGRpbmciLCJhcnJvd0VsZW1lbnQiLCJwb3BwZXJDb25maWciLCJfbW9kaWZpZXJzJGV2ZW50TGlzdGUiLCJfbW9kaWZpZXJzJHByZXZlbnRPdmUiLCJfbW9kaWZpZXJzJHByZXZlbnRPdmUyIiwiX21vZGlmaWVycyRvZmZzZXQiLCJfbW9kaWZpZXJzJGFycm93IiwiYXNzaWduIiwic3RyYXRlZ3kiLCJldmVudExpc3RlbmVycyIsIm9wdGlvbnMiLCJwcmV2ZW50T3ZlcmZsb3ciLCJwYWRkaW5nIiwiYXJyb3ciLCJlbGVtZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/mergeOptionsWithPopperConfig.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/popper.js":
/*!************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/popper.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nvar top = \"top\";\nvar bottom = \"bottom\";\nvar right = \"right\";\nvar left = \"left\";\nvar auto = \"auto\";\nvar basePlacements = [\n    top,\n    bottom,\n    right,\n    left\n];\nvar start = \"start\";\nvar end = \"end\";\nvar clippingParents = \"clippingParents\";\nvar viewport = \"viewport\";\nvar popper = \"popper\";\nvar reference = \"reference\";\nvar variationPlacements = /*#__PURE__*/ basePlacements.reduce(function(acc, placement) {\n    return acc.concat([\n        placement + \"-\" + start,\n        placement + \"-\" + end\n    ]);\n}, []);\nvar placements = /*#__PURE__*/ [].concat(basePlacements, [\n    auto\n]).reduce(function(acc, placement) {\n    return acc.concat([\n        placement,\n        placement + \"-\" + start,\n        placement + \"-\" + end\n    ]);\n}, []); // modifiers that need to read the DOM\nvar beforeRead = \"beforeRead\";\nvar read = \"read\";\nvar afterRead = \"afterRead\"; // pure-logic modifiers\nvar beforeMain = \"beforeMain\";\nvar main = \"main\";\nvar afterMain = \"afterMain\"; // modifier with the purpose to write to the DOM (or write into a framework state)\nvar beforeWrite = \"beforeWrite\";\nvar write = \"write\";\nvar afterWrite = \"afterWrite\";\nvar modifierPhases = [\n    beforeRead,\n    read,\n    afterRead,\n    beforeMain,\n    main,\n    afterMain,\n    beforeWrite,\n    write,\n    afterWrite\n];\nfunction getBasePlacement(placement) {\n    return placement.split(\"-\")[0];\n}\nfunction getWindow(node) {\n    if (node == null) {\n        return window;\n    }\n    if (node.toString() !== \"[object Window]\") {\n        var ownerDocument = node.ownerDocument;\n        return ownerDocument ? ownerDocument.defaultView || window : window;\n    }\n    return node;\n}\nfunction isElement(node) {\n    var OwnElement = getWindow(node).Element;\n    return node instanceof OwnElement || node instanceof Element;\n}\nfunction isHTMLElement(node) {\n    var OwnElement = getWindow(node).HTMLElement;\n    return node instanceof OwnElement || node instanceof HTMLElement;\n}\nfunction isShadowRoot(node) {\n    // IE 11 has no ShadowRoot\n    if (typeof ShadowRoot === \"undefined\") {\n        return false;\n    }\n    var OwnElement = getWindow(node).ShadowRoot;\n    return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nvar max = Math.max;\nvar min = Math.min;\nvar round = Math.round;\nfunction getUAString() {\n    var uaData = navigator.userAgentData;\n    if (uaData != null && uaData.brands) {\n        return uaData.brands.map(function(item) {\n            return item.brand + \"/\" + item.version;\n        }).join(\" \");\n    }\n    return navigator.userAgent;\n}\nfunction isLayoutViewport() {\n    return !/^((?!chrome|android).)*safari/i.test(getUAString());\n}\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy) {\n    if (includeScale === void 0) {\n        includeScale = false;\n    }\n    if (isFixedStrategy === void 0) {\n        isFixedStrategy = false;\n    }\n    var clientRect = element.getBoundingClientRect();\n    var scaleX = 1;\n    var scaleY = 1;\n    if (includeScale && isHTMLElement(element)) {\n        scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;\n        scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;\n    }\n    var _ref = isElement(element) ? getWindow(element) : window, visualViewport = _ref.visualViewport;\n    var addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n    var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;\n    var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;\n    var width = clientRect.width / scaleX;\n    var height = clientRect.height / scaleY;\n    return {\n        width: width,\n        height: height,\n        top: y,\n        right: x + width,\n        bottom: y + height,\n        left: x,\n        x: x,\n        y: y\n    };\n}\n// means it doesn't take into account transforms.\nfunction getLayoutRect(element) {\n    var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it's not been transformed.\n    // Fixes https://github.com/popperjs/popper-core/issues/1223\n    var width = element.offsetWidth;\n    var height = element.offsetHeight;\n    if (Math.abs(clientRect.width - width) <= 1) {\n        width = clientRect.width;\n    }\n    if (Math.abs(clientRect.height - height) <= 1) {\n        height = clientRect.height;\n    }\n    return {\n        x: element.offsetLeft,\n        y: element.offsetTop,\n        width: width,\n        height: height\n    };\n}\nfunction contains(parent, child) {\n    var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method\n    if (parent.contains(child)) {\n        return true;\n    } else if (rootNode && isShadowRoot(rootNode)) {\n        var next = child;\n        do {\n            if (next && parent.isSameNode(next)) {\n                return true;\n            } // $FlowFixMe[prop-missing]: need a better way to handle this...\n            next = next.parentNode || next.host;\n        }while (next);\n    } // Give up, the result is false\n    return false;\n}\nfunction getNodeName(element) {\n    return element ? (element.nodeName || \"\").toLowerCase() : null;\n}\nfunction getComputedStyle(element) {\n    return getWindow(element).getComputedStyle(element);\n}\nfunction isTableElement(element) {\n    return [\n        \"table\",\n        \"td\",\n        \"th\"\n    ].indexOf(getNodeName(element)) >= 0;\n}\nfunction getDocumentElement(element) {\n    // $FlowFixMe[incompatible-return]: assume body is always available\n    return ((isElement(element) ? element.ownerDocument : element.document) || window.document).documentElement;\n}\nfunction getParentNode(element) {\n    if (getNodeName(element) === \"html\") {\n        return element;\n    }\n    return(// $FlowFixMe[incompatible-return]\n    // $FlowFixMe[prop-missing]\n    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n    element.parentNode || (isShadowRoot(element) ? element.host : null) || // ShadowRoot detected\n    // $FlowFixMe[incompatible-call]: HTMLElement is a Node\n    getDocumentElement(element) // fallback\n    );\n}\nfunction getTrueOffsetParent(element) {\n    if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837\n    getComputedStyle(element).position === \"fixed\") {\n        return null;\n    }\n    return element.offsetParent;\n} // `.offsetParent` reports `null` for fixed elements, while absolute elements\n// return the containing block\nfunction getContainingBlock(element) {\n    var isFirefox = /firefox/i.test(getUAString());\n    var isIE = /Trident/i.test(getUAString());\n    if (isIE && isHTMLElement(element)) {\n        // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport\n        var elementCss = getComputedStyle(element);\n        if (elementCss.position === \"fixed\") {\n            return null;\n        }\n    }\n    var currentNode = getParentNode(element);\n    if (isShadowRoot(currentNode)) {\n        currentNode = currentNode.host;\n    }\n    while(isHTMLElement(currentNode) && [\n        \"html\",\n        \"body\"\n    ].indexOf(getNodeName(currentNode)) < 0){\n        var css = getComputedStyle(currentNode); // This is non-exhaustive but covers the most common CSS properties that\n        // create a containing block.\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n        if (css.transform !== \"none\" || css.perspective !== \"none\" || css.contain === \"paint\" || [\n            \"transform\",\n            \"perspective\"\n        ].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === \"filter\" || isFirefox && css.filter && css.filter !== \"none\") {\n            return currentNode;\n        } else {\n            currentNode = currentNode.parentNode;\n        }\n    }\n    return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element) {\n    var window1 = getWindow(element);\n    var offsetParent = getTrueOffsetParent(element);\n    while(offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === \"static\"){\n        offsetParent = getTrueOffsetParent(offsetParent);\n    }\n    if (offsetParent && (getNodeName(offsetParent) === \"html\" || getNodeName(offsetParent) === \"body\" && getComputedStyle(offsetParent).position === \"static\")) {\n        return window1;\n    }\n    return offsetParent || getContainingBlock(element) || window1;\n}\nfunction getMainAxisFromPlacement(placement) {\n    return [\n        \"top\",\n        \"bottom\"\n    ].indexOf(placement) >= 0 ? \"x\" : \"y\";\n}\nfunction within(min$1, value, max$1) {\n    return max(min$1, min(value, max$1));\n}\nfunction withinMaxClamp(min, value, max) {\n    var v = within(min, value, max);\n    return v > max ? max : v;\n}\nfunction getFreshSideObject() {\n    return {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n    };\n}\nfunction mergePaddingObject(paddingObject) {\n    return Object.assign({}, getFreshSideObject(), paddingObject);\n}\nfunction expandToHashMap(value, keys) {\n    return keys.reduce(function(hashMap, key) {\n        hashMap[key] = value;\n        return hashMap;\n    }, {});\n}\nvar toPaddingObject = function toPaddingObject(padding, state) {\n    padding = typeof padding === \"function\" ? padding(Object.assign({}, state.rects, {\n        placement: state.placement\n    })) : padding;\n    return mergePaddingObject(typeof padding !== \"number\" ? padding : expandToHashMap(padding, basePlacements));\n};\nfunction arrow(_ref) {\n    var _state$modifiersData$;\n    var state = _ref.state, name = _ref.name, options = _ref.options;\n    var arrowElement = state.elements.arrow;\n    var popperOffsets = state.modifiersData.popperOffsets;\n    var basePlacement = getBasePlacement(state.placement);\n    var axis = getMainAxisFromPlacement(basePlacement);\n    var isVertical = [\n        left,\n        right\n    ].indexOf(basePlacement) >= 0;\n    var len = isVertical ? \"height\" : \"width\";\n    if (!arrowElement || !popperOffsets) {\n        return;\n    }\n    var paddingObject = toPaddingObject(options.padding, state);\n    var arrowRect = getLayoutRect(arrowElement);\n    var minProp = axis === \"y\" ? top : left;\n    var maxProp = axis === \"y\" ? bottom : right;\n    var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];\n    var startDiff = popperOffsets[axis] - state.rects.reference[axis];\n    var arrowOffsetParent = getOffsetParent(arrowElement);\n    var clientSize = arrowOffsetParent ? axis === \"y\" ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n    var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is\n    // outside of the popper bounds\n    var min = paddingObject[minProp];\n    var max = clientSize - arrowRect[len] - paddingObject[maxProp];\n    var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;\n    var offset = within(min, center, max); // Prevents breaking syntax highlighting...\n    var axisProp = axis;\n    state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);\n}\nfunction effect$1(_ref2) {\n    var state = _ref2.state, options = _ref2.options;\n    var _options$element = options.element, arrowElement = _options$element === void 0 ? \"[data-popper-arrow]\" : _options$element;\n    if (arrowElement == null) {\n        return;\n    } // CSS selector\n    if (typeof arrowElement === \"string\") {\n        arrowElement = state.elements.popper.querySelector(arrowElement);\n        if (!arrowElement) {\n            return;\n        }\n    }\n    if (true) {\n        if (!isHTMLElement(arrowElement)) {\n            console.error([\n                'Popper: \"arrow\" element must be an HTMLElement (not an SVGElement).',\n                \"To use an SVG arrow, wrap it in an HTMLElement that will be used as\",\n                \"the arrow.\"\n            ].join(\" \"));\n        }\n    }\n    if (!contains(state.elements.popper, arrowElement)) {\n        if (true) {\n            console.error([\n                'Popper: \"arrow\" modifier\\'s `element` must be a child of the popper',\n                \"element.\"\n            ].join(\" \"));\n        }\n        return;\n    }\n    state.elements.arrow = arrowElement;\n} // eslint-disable-next-line import/no-unused-modules\nvar arrow$1 = {\n    name: \"arrow\",\n    enabled: true,\n    phase: \"main\",\n    fn: arrow,\n    effect: effect$1,\n    requires: [\n        \"popperOffsets\"\n    ],\n    requiresIfExists: [\n        \"preventOverflow\"\n    ]\n};\nfunction getVariation(placement) {\n    return placement.split(\"-\")[1];\n}\nvar unsetSides = {\n    top: \"auto\",\n    right: \"auto\",\n    bottom: \"auto\",\n    left: \"auto\"\n}; // Round the offsets to the nearest suitable subpixel based on the DPR.\n// Zooming can change the DPR, but it seems to report a value that will\n// cleanly divide the values into the appropriate subpixels.\nfunction roundOffsetsByDPR(_ref) {\n    var x = _ref.x, y = _ref.y;\n    var win = window;\n    var dpr = win.devicePixelRatio || 1;\n    return {\n        x: round(x * dpr) / dpr || 0,\n        y: round(y * dpr) / dpr || 0\n    };\n}\nfunction mapToStyles(_ref2) {\n    var _Object$assign2;\n    var popper = _ref2.popper, popperRect = _ref2.popperRect, placement = _ref2.placement, variation = _ref2.variation, offsets = _ref2.offsets, position = _ref2.position, gpuAcceleration = _ref2.gpuAcceleration, adaptive = _ref2.adaptive, roundOffsets = _ref2.roundOffsets, isFixed = _ref2.isFixed;\n    var _offsets$x = offsets.x, x = _offsets$x === void 0 ? 0 : _offsets$x, _offsets$y = offsets.y, y = _offsets$y === void 0 ? 0 : _offsets$y;\n    var _ref3 = typeof roundOffsets === \"function\" ? roundOffsets({\n        x: x,\n        y: y\n    }) : {\n        x: x,\n        y: y\n    };\n    x = _ref3.x;\n    y = _ref3.y;\n    var hasX = offsets.hasOwnProperty(\"x\");\n    var hasY = offsets.hasOwnProperty(\"y\");\n    var sideX = left;\n    var sideY = top;\n    var win = window;\n    if (adaptive) {\n        var offsetParent = getOffsetParent(popper);\n        var heightProp = \"clientHeight\";\n        var widthProp = \"clientWidth\";\n        if (offsetParent === getWindow(popper)) {\n            offsetParent = getDocumentElement(popper);\n            if (getComputedStyle(offsetParent).position !== \"static\" && position === \"absolute\") {\n                heightProp = \"scrollHeight\";\n                widthProp = \"scrollWidth\";\n            }\n        } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it\n        offsetParent = offsetParent;\n        if (placement === top || (placement === left || placement === right) && variation === end) {\n            sideY = bottom;\n            var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : offsetParent[heightProp];\n            y -= offsetY - popperRect.height;\n            y *= gpuAcceleration ? 1 : -1;\n        }\n        if (placement === left || (placement === top || placement === bottom) && variation === end) {\n            sideX = right;\n            var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : offsetParent[widthProp];\n            x -= offsetX - popperRect.width;\n            x *= gpuAcceleration ? 1 : -1;\n        }\n    }\n    var commonStyles = Object.assign({\n        position: position\n    }, adaptive && unsetSides);\n    var _ref4 = roundOffsets === true ? roundOffsetsByDPR({\n        x: x,\n        y: y\n    }) : {\n        x: x,\n        y: y\n    };\n    x = _ref4.x;\n    y = _ref4.y;\n    if (gpuAcceleration) {\n        var _Object$assign;\n        return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? \"0\" : \"\", _Object$assign[sideX] = hasX ? \"0\" : \"\", _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? \"translate(\" + x + \"px, \" + y + \"px)\" : \"translate3d(\" + x + \"px, \" + y + \"px, 0)\", _Object$assign));\n    }\n    return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + \"px\" : \"\", _Object$assign2[sideX] = hasX ? x + \"px\" : \"\", _Object$assign2.transform = \"\", _Object$assign2));\n}\nfunction computeStyles(_ref5) {\n    var state = _ref5.state, options = _ref5.options;\n    var _options$gpuAccelerat = options.gpuAcceleration, gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat, _options$adaptive = options.adaptive, adaptive = _options$adaptive === void 0 ? true : _options$adaptive, _options$roundOffsets = options.roundOffsets, roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;\n    if (true) {\n        var transitionProperty = getComputedStyle(state.elements.popper).transitionProperty || \"\";\n        if (adaptive && [\n            \"transform\",\n            \"top\",\n            \"right\",\n            \"bottom\",\n            \"left\"\n        ].some(function(property) {\n            return transitionProperty.indexOf(property) >= 0;\n        })) {\n            console.warn([\n                \"Popper: Detected CSS transitions on at least one of the following\",\n                'CSS properties: \"transform\", \"top\", \"right\", \"bottom\", \"left\".',\n                \"\\n\\n\",\n                'Disable the \"computeStyles\" modifier\\'s `adaptive` option to allow',\n                \"for smooth transitions, or remove these properties from the CSS\",\n                \"transition declaration on the popper element if only transitioning\",\n                \"opacity or background-color for example.\",\n                \"\\n\\n\",\n                \"We recommend using the popper element as a wrapper around an inner\",\n                \"element that can have any CSS property transitioned for animations.\"\n            ].join(\" \"));\n        }\n    }\n    var commonStyles = {\n        placement: getBasePlacement(state.placement),\n        variation: getVariation(state.placement),\n        popper: state.elements.popper,\n        popperRect: state.rects.popper,\n        gpuAcceleration: gpuAcceleration,\n        isFixed: state.options.strategy === \"fixed\"\n    };\n    if (state.modifiersData.popperOffsets != null) {\n        state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {\n            offsets: state.modifiersData.popperOffsets,\n            position: state.options.strategy,\n            adaptive: adaptive,\n            roundOffsets: roundOffsets\n        })));\n    }\n    if (state.modifiersData.arrow != null) {\n        state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {\n            offsets: state.modifiersData.arrow,\n            position: \"absolute\",\n            adaptive: false,\n            roundOffsets: roundOffsets\n        })));\n    }\n    state.attributes.popper = Object.assign({}, state.attributes.popper, {\n        \"data-popper-placement\": state.placement\n    });\n} // eslint-disable-next-line import/no-unused-modules\nvar computeStyles$1 = {\n    name: \"computeStyles\",\n    enabled: true,\n    phase: \"beforeWrite\",\n    fn: computeStyles,\n    data: {}\n};\nvar passive = {\n    passive: true\n};\nfunction effect(_ref) {\n    var state = _ref.state, instance = _ref.instance, options = _ref.options;\n    var _options$scroll = options.scroll, scroll = _options$scroll === void 0 ? true : _options$scroll, _options$resize = options.resize, resize = _options$resize === void 0 ? true : _options$resize;\n    var window1 = getWindow(state.elements.popper);\n    var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);\n    if (scroll) {\n        scrollParents.forEach(function(scrollParent) {\n            scrollParent.addEventListener(\"scroll\", instance.update, passive);\n        });\n    }\n    if (resize) {\n        window1.addEventListener(\"resize\", instance.update, passive);\n    }\n    return function() {\n        if (scroll) {\n            scrollParents.forEach(function(scrollParent) {\n                scrollParent.removeEventListener(\"scroll\", instance.update, passive);\n            });\n        }\n        if (resize) {\n            window1.removeEventListener(\"resize\", instance.update, passive);\n        }\n    };\n} // eslint-disable-next-line import/no-unused-modules\nvar eventListeners = {\n    name: \"eventListeners\",\n    enabled: true,\n    phase: \"write\",\n    fn: function fn() {},\n    effect: effect,\n    data: {}\n};\nvar hash$1 = {\n    left: \"right\",\n    right: \"left\",\n    bottom: \"top\",\n    top: \"bottom\"\n};\nfunction getOppositePlacement(placement) {\n    return placement.replace(/left|right|bottom|top/g, function(matched) {\n        return hash$1[matched];\n    });\n}\nvar hash = {\n    start: \"end\",\n    end: \"start\"\n};\nfunction getOppositeVariationPlacement(placement) {\n    return placement.replace(/start|end/g, function(matched) {\n        return hash[matched];\n    });\n}\nfunction getWindowScroll(node) {\n    var win = getWindow(node);\n    var scrollLeft = win.pageXOffset;\n    var scrollTop = win.pageYOffset;\n    return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n    };\n}\nfunction getWindowScrollBarX(element) {\n    // If <html> has a CSS width greater than the viewport, then this will be\n    // incorrect for RTL.\n    // Popper 1 is broken in this case and never had a bug report so let's assume\n    // it's not an issue. I don't think anyone ever specifies width on <html>\n    // anyway.\n    // Browsers where the left scrollbar doesn't cause an issue report `0` for\n    // this (e.g. Edge 2019, IE11, Safari)\n    return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;\n}\nfunction getViewportRect(element, strategy) {\n    var win = getWindow(element);\n    var html = getDocumentElement(element);\n    var visualViewport = win.visualViewport;\n    var width = html.clientWidth;\n    var height = html.clientHeight;\n    var x = 0;\n    var y = 0;\n    if (visualViewport) {\n        width = visualViewport.width;\n        height = visualViewport.height;\n        var layoutViewport = isLayoutViewport();\n        if (layoutViewport || !layoutViewport && strategy === \"fixed\") {\n            x = visualViewport.offsetLeft;\n            y = visualViewport.offsetTop;\n        }\n    }\n    return {\n        width: width,\n        height: height,\n        x: x + getWindowScrollBarX(element),\n        y: y\n    };\n}\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\nfunction getDocumentRect(element) {\n    var _element$ownerDocumen;\n    var html = getDocumentElement(element);\n    var winScroll = getWindowScroll(element);\n    var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n    var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n    var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n    var x = -winScroll.scrollLeft + getWindowScrollBarX(element);\n    var y = -winScroll.scrollTop;\n    if (getComputedStyle(body || html).direction === \"rtl\") {\n        x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n    }\n    return {\n        width: width,\n        height: height,\n        x: x,\n        y: y\n    };\n}\nfunction isScrollParent(element) {\n    // Firefox wants us to check `-x` and `-y` variations as well\n    var _getComputedStyle = getComputedStyle(element), overflow = _getComputedStyle.overflow, overflowX = _getComputedStyle.overflowX, overflowY = _getComputedStyle.overflowY;\n    return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}\nfunction getScrollParent(node) {\n    if ([\n        \"html\",\n        \"body\",\n        \"#document\"\n    ].indexOf(getNodeName(node)) >= 0) {\n        // $FlowFixMe[incompatible-return]: assume body is always available\n        return node.ownerDocument.body;\n    }\n    if (isHTMLElement(node) && isScrollParent(node)) {\n        return node;\n    }\n    return getScrollParent(getParentNode(node));\n}\n/*\ngiven a DOM element, return the list of all scroll parents, up the list of ancesors\nuntil we get to the top window object. This list is what we attach scroll listeners\nto, because if any of these parent elements scroll, we'll need to re-calculate the\nreference element's position.\n*/ function listScrollParents(element, list) {\n    var _element$ownerDocumen;\n    if (list === void 0) {\n        list = [];\n    }\n    var scrollParent = getScrollParent(element);\n    var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);\n    var win = getWindow(scrollParent);\n    var target = isBody ? [\n        win\n    ].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;\n    var updatedList = list.concat(target);\n    return isBody ? updatedList : updatedList.concat(listScrollParents(getParentNode(target)));\n}\nfunction rectToClientRect(rect) {\n    return Object.assign({}, rect, {\n        left: rect.x,\n        top: rect.y,\n        right: rect.x + rect.width,\n        bottom: rect.y + rect.height\n    });\n}\nfunction getInnerBoundingClientRect(element, strategy) {\n    var rect = getBoundingClientRect(element, false, strategy === \"fixed\");\n    rect.top = rect.top + element.clientTop;\n    rect.left = rect.left + element.clientLeft;\n    rect.bottom = rect.top + element.clientHeight;\n    rect.right = rect.left + element.clientWidth;\n    rect.width = element.clientWidth;\n    rect.height = element.clientHeight;\n    rect.x = rect.left;\n    rect.y = rect.top;\n    return rect;\n}\nfunction getClientRectFromMixedType(element, clippingParent, strategy) {\n    return clippingParent === viewport ? rectToClientRect(getViewportRect(element, strategy)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent, strategy) : rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping parent\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\nfunction getClippingParents(element) {\n    var clippingParents = listScrollParents(getParentNode(element));\n    var canEscapeClipping = [\n        \"absolute\",\n        \"fixed\"\n    ].indexOf(getComputedStyle(element).position) >= 0;\n    var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;\n    if (!isElement(clipperElement)) {\n        return [];\n    } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414\n    return clippingParents.filter(function(clippingParent) {\n        return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== \"body\";\n    });\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping parents\nfunction getClippingRect(element, boundary, rootBoundary, strategy) {\n    var mainClippingParents = boundary === \"clippingParents\" ? getClippingParents(element) : [].concat(boundary);\n    var clippingParents = [].concat(mainClippingParents, [\n        rootBoundary\n    ]);\n    var firstClippingParent = clippingParents[0];\n    var clippingRect = clippingParents.reduce(function(accRect, clippingParent) {\n        var rect = getClientRectFromMixedType(element, clippingParent, strategy);\n        accRect.top = max(rect.top, accRect.top);\n        accRect.right = min(rect.right, accRect.right);\n        accRect.bottom = min(rect.bottom, accRect.bottom);\n        accRect.left = max(rect.left, accRect.left);\n        return accRect;\n    }, getClientRectFromMixedType(element, firstClippingParent, strategy));\n    clippingRect.width = clippingRect.right - clippingRect.left;\n    clippingRect.height = clippingRect.bottom - clippingRect.top;\n    clippingRect.x = clippingRect.left;\n    clippingRect.y = clippingRect.top;\n    return clippingRect;\n}\nfunction computeOffsets(_ref) {\n    var reference = _ref.reference, element = _ref.element, placement = _ref.placement;\n    var basePlacement = placement ? getBasePlacement(placement) : null;\n    var variation = placement ? getVariation(placement) : null;\n    var commonX = reference.x + reference.width / 2 - element.width / 2;\n    var commonY = reference.y + reference.height / 2 - element.height / 2;\n    var offsets;\n    switch(basePlacement){\n        case top:\n            offsets = {\n                x: commonX,\n                y: reference.y - element.height\n            };\n            break;\n        case bottom:\n            offsets = {\n                x: commonX,\n                y: reference.y + reference.height\n            };\n            break;\n        case right:\n            offsets = {\n                x: reference.x + reference.width,\n                y: commonY\n            };\n            break;\n        case left:\n            offsets = {\n                x: reference.x - element.width,\n                y: commonY\n            };\n            break;\n        default:\n            offsets = {\n                x: reference.x,\n                y: reference.y\n            };\n    }\n    var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;\n    if (mainAxis != null) {\n        var len = mainAxis === \"y\" ? \"height\" : \"width\";\n        switch(variation){\n            case start:\n                offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);\n                break;\n            case end:\n                offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);\n                break;\n        }\n    }\n    return offsets;\n}\nfunction detectOverflow(state, options) {\n    if (options === void 0) {\n        options = {};\n    }\n    var _options = options, _options$placement = _options.placement, placement = _options$placement === void 0 ? state.placement : _options$placement, _options$strategy = _options.strategy, strategy = _options$strategy === void 0 ? state.strategy : _options$strategy, _options$boundary = _options.boundary, boundary = _options$boundary === void 0 ? clippingParents : _options$boundary, _options$rootBoundary = _options.rootBoundary, rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary, _options$elementConte = _options.elementContext, elementContext = _options$elementConte === void 0 ? popper : _options$elementConte, _options$altBoundary = _options.altBoundary, altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary, _options$padding = _options.padding, padding = _options$padding === void 0 ? 0 : _options$padding;\n    var paddingObject = mergePaddingObject(typeof padding !== \"number\" ? padding : expandToHashMap(padding, basePlacements));\n    var altContext = elementContext === popper ? reference : popper;\n    var popperRect = state.rects.popper;\n    var element = state.elements[altBoundary ? altContext : elementContext];\n    var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary, strategy);\n    var referenceClientRect = getBoundingClientRect(state.elements.reference);\n    var popperOffsets = computeOffsets({\n        reference: referenceClientRect,\n        element: popperRect,\n        strategy: \"absolute\",\n        placement: placement\n    });\n    var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets));\n    var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect\n    // 0 or negative = within the clipping rect\n    var overflowOffsets = {\n        top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n        bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n        left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n        right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n    };\n    var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element\n    if (elementContext === popper && offsetData) {\n        var offset = offsetData[placement];\n        Object.keys(overflowOffsets).forEach(function(key) {\n            var multiply = [\n                right,\n                bottom\n            ].indexOf(key) >= 0 ? 1 : -1;\n            var axis = [\n                top,\n                bottom\n            ].indexOf(key) >= 0 ? \"y\" : \"x\";\n            overflowOffsets[key] += offset[axis] * multiply;\n        });\n    }\n    return overflowOffsets;\n}\nfunction computeAutoPlacement(state, options) {\n    if (options === void 0) {\n        options = {};\n    }\n    var _options = options, placement = _options.placement, boundary = _options.boundary, rootBoundary = _options.rootBoundary, padding = _options.padding, flipVariations = _options.flipVariations, _options$allowedAutoP = _options.allowedAutoPlacements, allowedAutoPlacements = _options$allowedAutoP === void 0 ? placements : _options$allowedAutoP;\n    var variation = getVariation(placement);\n    var placements$1 = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function(placement) {\n        return getVariation(placement) === variation;\n    }) : basePlacements;\n    var allowedPlacements = placements$1.filter(function(placement) {\n        return allowedAutoPlacements.indexOf(placement) >= 0;\n    });\n    if (allowedPlacements.length === 0) {\n        allowedPlacements = placements$1;\n        if (true) {\n            console.error([\n                \"Popper: The `allowedAutoPlacements` option did not allow any\",\n                \"placements. Ensure the `placement` option matches the variation\",\n                \"of the allowed placements.\",\n                'For example, \"auto\" cannot be used to allow \"bottom-start\".',\n                'Use \"auto-start\" instead.'\n            ].join(\" \"));\n        }\n    } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...\n    var overflows = allowedPlacements.reduce(function(acc, placement) {\n        acc[placement] = detectOverflow(state, {\n            placement: placement,\n            boundary: boundary,\n            rootBoundary: rootBoundary,\n            padding: padding\n        })[getBasePlacement(placement)];\n        return acc;\n    }, {});\n    return Object.keys(overflows).sort(function(a, b) {\n        return overflows[a] - overflows[b];\n    });\n}\nfunction getExpandedFallbackPlacements(placement) {\n    if (getBasePlacement(placement) === auto) {\n        return [];\n    }\n    var oppositePlacement = getOppositePlacement(placement);\n    return [\n        getOppositeVariationPlacement(placement),\n        oppositePlacement,\n        getOppositeVariationPlacement(oppositePlacement)\n    ];\n}\nfunction flip(_ref) {\n    var state = _ref.state, options = _ref.options, name = _ref.name;\n    if (state.modifiersData[name]._skip) {\n        return;\n    }\n    var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis, specifiedFallbackPlacements = options.fallbackPlacements, padding = options.padding, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, _options$flipVariatio = options.flipVariations, flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio, allowedAutoPlacements = options.allowedAutoPlacements;\n    var preferredPlacement = state.options.placement;\n    var basePlacement = getBasePlacement(preferredPlacement);\n    var isBasePlacement = basePlacement === preferredPlacement;\n    var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [\n        getOppositePlacement(preferredPlacement)\n    ] : getExpandedFallbackPlacements(preferredPlacement));\n    var placements = [\n        preferredPlacement\n    ].concat(fallbackPlacements).reduce(function(acc, placement) {\n        return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {\n            placement: placement,\n            boundary: boundary,\n            rootBoundary: rootBoundary,\n            padding: padding,\n            flipVariations: flipVariations,\n            allowedAutoPlacements: allowedAutoPlacements\n        }) : placement);\n    }, []);\n    var referenceRect = state.rects.reference;\n    var popperRect = state.rects.popper;\n    var checksMap = new Map();\n    var makeFallbackChecks = true;\n    var firstFittingPlacement = placements[0];\n    for(var i = 0; i < placements.length; i++){\n        var placement = placements[i];\n        var _basePlacement = getBasePlacement(placement);\n        var isStartVariation = getVariation(placement) === start;\n        var isVertical = [\n            top,\n            bottom\n        ].indexOf(_basePlacement) >= 0;\n        var len = isVertical ? \"width\" : \"height\";\n        var overflow = detectOverflow(state, {\n            placement: placement,\n            boundary: boundary,\n            rootBoundary: rootBoundary,\n            altBoundary: altBoundary,\n            padding: padding\n        });\n        var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;\n        if (referenceRect[len] > popperRect[len]) {\n            mainVariationSide = getOppositePlacement(mainVariationSide);\n        }\n        var altVariationSide = getOppositePlacement(mainVariationSide);\n        var checks = [];\n        if (checkMainAxis) {\n            checks.push(overflow[_basePlacement] <= 0);\n        }\n        if (checkAltAxis) {\n            checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);\n        }\n        if (checks.every(function(check) {\n            return check;\n        })) {\n            firstFittingPlacement = placement;\n            makeFallbackChecks = false;\n            break;\n        }\n        checksMap.set(placement, checks);\n    }\n    if (makeFallbackChecks) {\n        // `2` may be desired in some cases – research later\n        var numberOfChecks = flipVariations ? 3 : 1;\n        var _loop = function _loop(_i) {\n            var fittingPlacement = placements.find(function(placement) {\n                var checks = checksMap.get(placement);\n                if (checks) {\n                    return checks.slice(0, _i).every(function(check) {\n                        return check;\n                    });\n                }\n            });\n            if (fittingPlacement) {\n                firstFittingPlacement = fittingPlacement;\n                return \"break\";\n            }\n        };\n        for(var _i = numberOfChecks; _i > 0; _i--){\n            var _ret = _loop(_i);\n            if (_ret === \"break\") break;\n        }\n    }\n    if (state.placement !== firstFittingPlacement) {\n        state.modifiersData[name]._skip = true;\n        state.placement = firstFittingPlacement;\n        state.reset = true;\n    }\n} // eslint-disable-next-line import/no-unused-modules\nvar flip$1 = {\n    name: \"flip\",\n    enabled: true,\n    phase: \"main\",\n    fn: flip,\n    requiresIfExists: [\n        \"offset\"\n    ],\n    data: {\n        _skip: false\n    }\n};\nfunction getSideOffsets(overflow, rect, preventedOffsets) {\n    if (preventedOffsets === void 0) {\n        preventedOffsets = {\n            x: 0,\n            y: 0\n        };\n    }\n    return {\n        top: overflow.top - rect.height - preventedOffsets.y,\n        right: overflow.right - rect.width + preventedOffsets.x,\n        bottom: overflow.bottom - rect.height + preventedOffsets.y,\n        left: overflow.left - rect.width - preventedOffsets.x\n    };\n}\nfunction isAnySideFullyClipped(overflow) {\n    return [\n        top,\n        right,\n        bottom,\n        left\n    ].some(function(side) {\n        return overflow[side] >= 0;\n    });\n}\nfunction hide(_ref) {\n    var state = _ref.state, name = _ref.name;\n    var referenceRect = state.rects.reference;\n    var popperRect = state.rects.popper;\n    var preventedOffsets = state.modifiersData.preventOverflow;\n    var referenceOverflow = detectOverflow(state, {\n        elementContext: \"reference\"\n    });\n    var popperAltOverflow = detectOverflow(state, {\n        altBoundary: true\n    });\n    var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);\n    var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);\n    var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);\n    var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);\n    state.modifiersData[name] = {\n        referenceClippingOffsets: referenceClippingOffsets,\n        popperEscapeOffsets: popperEscapeOffsets,\n        isReferenceHidden: isReferenceHidden,\n        hasPopperEscaped: hasPopperEscaped\n    };\n    state.attributes.popper = Object.assign({}, state.attributes.popper, {\n        \"data-popper-reference-hidden\": isReferenceHidden,\n        \"data-popper-escaped\": hasPopperEscaped\n    });\n} // eslint-disable-next-line import/no-unused-modules\nvar hide$1 = {\n    name: \"hide\",\n    enabled: true,\n    phase: \"main\",\n    requiresIfExists: [\n        \"preventOverflow\"\n    ],\n    fn: hide\n};\nfunction distanceAndSkiddingToXY(placement, rects, offset) {\n    var basePlacement = getBasePlacement(placement);\n    var invertDistance = [\n        left,\n        top\n    ].indexOf(basePlacement) >= 0 ? -1 : 1;\n    var _ref = typeof offset === \"function\" ? offset(Object.assign({}, rects, {\n        placement: placement\n    })) : offset, skidding = _ref[0], distance = _ref[1];\n    skidding = skidding || 0;\n    distance = (distance || 0) * invertDistance;\n    return [\n        left,\n        right\n    ].indexOf(basePlacement) >= 0 ? {\n        x: distance,\n        y: skidding\n    } : {\n        x: skidding,\n        y: distance\n    };\n}\nfunction offset(_ref2) {\n    var state = _ref2.state, options = _ref2.options, name = _ref2.name;\n    var _options$offset = options.offset, offset = _options$offset === void 0 ? [\n        0,\n        0\n    ] : _options$offset;\n    var data = placements.reduce(function(acc, placement) {\n        acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);\n        return acc;\n    }, {});\n    var _data$state$placement = data[state.placement], x = _data$state$placement.x, y = _data$state$placement.y;\n    if (state.modifiersData.popperOffsets != null) {\n        state.modifiersData.popperOffsets.x += x;\n        state.modifiersData.popperOffsets.y += y;\n    }\n    state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\nvar offset$1 = {\n    name: \"offset\",\n    enabled: true,\n    phase: \"main\",\n    requires: [\n        \"popperOffsets\"\n    ],\n    fn: offset\n};\nfunction popperOffsets(_ref) {\n    var state = _ref.state, name = _ref.name;\n    // Offsets are the actual position the popper needs to have to be\n    // properly positioned near its reference element\n    // This is the most basic placement, and will be adjusted by\n    // the modifiers in the next step\n    state.modifiersData[name] = computeOffsets({\n        reference: state.rects.reference,\n        element: state.rects.popper,\n        strategy: \"absolute\",\n        placement: state.placement\n    });\n} // eslint-disable-next-line import/no-unused-modules\nvar popperOffsets$1 = {\n    name: \"popperOffsets\",\n    enabled: true,\n    phase: \"read\",\n    fn: popperOffsets,\n    data: {}\n};\nfunction getAltAxis(axis) {\n    return axis === \"x\" ? \"y\" : \"x\";\n}\nfunction preventOverflow(_ref) {\n    var state = _ref.state, options = _ref.options, name = _ref.name;\n    var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, padding = options.padding, _options$tether = options.tether, tether = _options$tether === void 0 ? true : _options$tether, _options$tetherOffset = options.tetherOffset, tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;\n    var overflow = detectOverflow(state, {\n        boundary: boundary,\n        rootBoundary: rootBoundary,\n        padding: padding,\n        altBoundary: altBoundary\n    });\n    var basePlacement = getBasePlacement(state.placement);\n    var variation = getVariation(state.placement);\n    var isBasePlacement = !variation;\n    var mainAxis = getMainAxisFromPlacement(basePlacement);\n    var altAxis = getAltAxis(mainAxis);\n    var popperOffsets = state.modifiersData.popperOffsets;\n    var referenceRect = state.rects.reference;\n    var popperRect = state.rects.popper;\n    var tetherOffsetValue = typeof tetherOffset === \"function\" ? tetherOffset(Object.assign({}, state.rects, {\n        placement: state.placement\n    })) : tetherOffset;\n    var normalizedTetherOffsetValue = typeof tetherOffsetValue === \"number\" ? {\n        mainAxis: tetherOffsetValue,\n        altAxis: tetherOffsetValue\n    } : Object.assign({\n        mainAxis: 0,\n        altAxis: 0\n    }, tetherOffsetValue);\n    var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;\n    var data = {\n        x: 0,\n        y: 0\n    };\n    if (!popperOffsets) {\n        return;\n    }\n    if (checkMainAxis) {\n        var _offsetModifierState$;\n        var mainSide = mainAxis === \"y\" ? top : left;\n        var altSide = mainAxis === \"y\" ? bottom : right;\n        var len = mainAxis === \"y\" ? \"height\" : \"width\";\n        var offset = popperOffsets[mainAxis];\n        var min$1 = offset + overflow[mainSide];\n        var max$1 = offset - overflow[altSide];\n        var additive = tether ? -popperRect[len] / 2 : 0;\n        var minLen = variation === start ? referenceRect[len] : popperRect[len];\n        var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go\n        // outside the reference bounds\n        var arrowElement = state.elements.arrow;\n        var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {\n            width: 0,\n            height: 0\n        };\n        var arrowPaddingObject = state.modifiersData[\"arrow#persistent\"] ? state.modifiersData[\"arrow#persistent\"].padding : getFreshSideObject();\n        var arrowPaddingMin = arrowPaddingObject[mainSide];\n        var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want\n        // to include its full size in the calculation. If the reference is small\n        // and near the edge of a boundary, the popper can overflow even if the\n        // reference is not overflowing as well (e.g. virtual elements with no\n        // width or height)\n        var arrowLen = within(0, referenceRect[len], arrowRect[len]);\n        var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;\n        var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;\n        var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);\n        var clientOffset = arrowOffsetParent ? mainAxis === \"y\" ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;\n        var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;\n        var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;\n        var tetherMax = offset + maxOffset - offsetModifierValue;\n        var preventedOffset = within(tether ? min(min$1, tetherMin) : min$1, offset, tether ? max(max$1, tetherMax) : max$1);\n        popperOffsets[mainAxis] = preventedOffset;\n        data[mainAxis] = preventedOffset - offset;\n    }\n    if (checkAltAxis) {\n        var _offsetModifierState$2;\n        var _mainSide = mainAxis === \"x\" ? top : left;\n        var _altSide = mainAxis === \"x\" ? bottom : right;\n        var _offset = popperOffsets[altAxis];\n        var _len = altAxis === \"y\" ? \"height\" : \"width\";\n        var _min = _offset + overflow[_mainSide];\n        var _max = _offset - overflow[_altSide];\n        var isOriginSide = [\n            top,\n            left\n        ].indexOf(basePlacement) !== -1;\n        var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;\n        var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;\n        var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;\n        var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);\n        popperOffsets[altAxis] = _preventedOffset;\n        data[altAxis] = _preventedOffset - _offset;\n    }\n    state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\nvar preventOverflow$1 = {\n    name: \"preventOverflow\",\n    enabled: true,\n    phase: \"main\",\n    fn: preventOverflow,\n    requiresIfExists: [\n        \"offset\"\n    ]\n};\nfunction getHTMLElementScroll(element) {\n    return {\n        scrollLeft: element.scrollLeft,\n        scrollTop: element.scrollTop\n    };\n}\nfunction getNodeScroll(node) {\n    if (node === getWindow(node) || !isHTMLElement(node)) {\n        return getWindowScroll(node);\n    } else {\n        return getHTMLElementScroll(node);\n    }\n}\nfunction isElementScaled(element) {\n    var rect = element.getBoundingClientRect();\n    var scaleX = round(rect.width) / element.offsetWidth || 1;\n    var scaleY = round(rect.height) / element.offsetHeight || 1;\n    return scaleX !== 1 || scaleY !== 1;\n} // Returns the composite rect of an element relative to its offsetParent.\n// Composite means it takes into account transforms as well as layout.\nfunction getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {\n    if (isFixed === void 0) {\n        isFixed = false;\n    }\n    var isOffsetParentAnElement = isHTMLElement(offsetParent);\n    var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);\n    var documentElement = getDocumentElement(offsetParent);\n    var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled, isFixed);\n    var scroll = {\n        scrollLeft: 0,\n        scrollTop: 0\n    };\n    var offsets = {\n        x: 0,\n        y: 0\n    };\n    if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n        if (getNodeName(offsetParent) !== \"body\" || // https://github.com/popperjs/popper-core/issues/1078\n        isScrollParent(documentElement)) {\n            scroll = getNodeScroll(offsetParent);\n        }\n        if (isHTMLElement(offsetParent)) {\n            offsets = getBoundingClientRect(offsetParent, true);\n            offsets.x += offsetParent.clientLeft;\n            offsets.y += offsetParent.clientTop;\n        } else if (documentElement) {\n            offsets.x = getWindowScrollBarX(documentElement);\n        }\n    }\n    return {\n        x: rect.left + scroll.scrollLeft - offsets.x,\n        y: rect.top + scroll.scrollTop - offsets.y,\n        width: rect.width,\n        height: rect.height\n    };\n}\nfunction order(modifiers) {\n    var map = new Map();\n    var visited = new Set();\n    var result = [];\n    modifiers.forEach(function(modifier) {\n        map.set(modifier.name, modifier);\n    }); // On visiting object, check for its dependencies and visit them recursively\n    function sort(modifier) {\n        visited.add(modifier.name);\n        var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);\n        requires.forEach(function(dep) {\n            if (!visited.has(dep)) {\n                var depModifier = map.get(dep);\n                if (depModifier) {\n                    sort(depModifier);\n                }\n            }\n        });\n        result.push(modifier);\n    }\n    modifiers.forEach(function(modifier) {\n        if (!visited.has(modifier.name)) {\n            // check for visited object\n            sort(modifier);\n        }\n    });\n    return result;\n}\nfunction orderModifiers(modifiers) {\n    // order based on dependencies\n    var orderedModifiers = order(modifiers); // order based on phase\n    return modifierPhases.reduce(function(acc, phase) {\n        return acc.concat(orderedModifiers.filter(function(modifier) {\n            return modifier.phase === phase;\n        }));\n    }, []);\n}\nfunction debounce(fn) {\n    var pending;\n    return function() {\n        if (!pending) {\n            pending = new Promise(function(resolve) {\n                Promise.resolve().then(function() {\n                    pending = undefined;\n                    resolve(fn());\n                });\n            });\n        }\n        return pending;\n    };\n}\nfunction format(str) {\n    for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n        args[_key - 1] = arguments[_key];\n    }\n    return [].concat(args).reduce(function(p, c) {\n        return p.replace(/%s/, c);\n    }, str);\n}\nvar INVALID_MODIFIER_ERROR = 'Popper: modifier \"%s\" provided an invalid %s property, expected %s but got %s';\nvar MISSING_DEPENDENCY_ERROR = 'Popper: modifier \"%s\" requires \"%s\", but \"%s\" modifier is not available';\nvar VALID_PROPERTIES = [\n    \"name\",\n    \"enabled\",\n    \"phase\",\n    \"fn\",\n    \"effect\",\n    \"requires\",\n    \"options\"\n];\nfunction validateModifiers(modifiers) {\n    modifiers.forEach(function(modifier) {\n        [].concat(Object.keys(modifier), VALID_PROPERTIES) // IE11-compatible replacement for `new Set(iterable)`\n        .filter(function(value, index, self) {\n            return self.indexOf(value) === index;\n        }).forEach(function(key) {\n            switch(key){\n                case \"name\":\n                    if (typeof modifier.name !== \"string\") {\n                        console.error(format(INVALID_MODIFIER_ERROR, String(modifier.name), '\"name\"', '\"string\"', '\"' + String(modifier.name) + '\"'));\n                    }\n                    break;\n                case \"enabled\":\n                    if (typeof modifier.enabled !== \"boolean\") {\n                        console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"enabled\"', '\"boolean\"', '\"' + String(modifier.enabled) + '\"'));\n                    }\n                    break;\n                case \"phase\":\n                    if (modifierPhases.indexOf(modifier.phase) < 0) {\n                        console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"phase\"', \"either \" + modifierPhases.join(\", \"), '\"' + String(modifier.phase) + '\"'));\n                    }\n                    break;\n                case \"fn\":\n                    if (typeof modifier.fn !== \"function\") {\n                        console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"fn\"', '\"function\"', '\"' + String(modifier.fn) + '\"'));\n                    }\n                    break;\n                case \"effect\":\n                    if (modifier.effect != null && typeof modifier.effect !== \"function\") {\n                        console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"effect\"', '\"function\"', '\"' + String(modifier.fn) + '\"'));\n                    }\n                    break;\n                case \"requires\":\n                    if (modifier.requires != null && !Array.isArray(modifier.requires)) {\n                        console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"requires\"', '\"array\"', '\"' + String(modifier.requires) + '\"'));\n                    }\n                    break;\n                case \"requiresIfExists\":\n                    if (!Array.isArray(modifier.requiresIfExists)) {\n                        console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"requiresIfExists\"', '\"array\"', '\"' + String(modifier.requiresIfExists) + '\"'));\n                    }\n                    break;\n                case \"options\":\n                case \"data\":\n                    break;\n                default:\n                    console.error('PopperJS: an invalid property has been provided to the \"' + modifier.name + '\" modifier, valid properties are ' + VALID_PROPERTIES.map(function(s) {\n                        return '\"' + s + '\"';\n                    }).join(\", \") + '; but \"' + key + '\" was provided.');\n            }\n            modifier.requires && modifier.requires.forEach(function(requirement) {\n                if (modifiers.find(function(mod) {\n                    return mod.name === requirement;\n                }) == null) {\n                    console.error(format(MISSING_DEPENDENCY_ERROR, String(modifier.name), requirement, requirement));\n                }\n            });\n        });\n    });\n}\nfunction uniqueBy(arr, fn) {\n    var identifiers = new Set();\n    return arr.filter(function(item) {\n        var identifier = fn(item);\n        if (!identifiers.has(identifier)) {\n            identifiers.add(identifier);\n            return true;\n        }\n    });\n}\nfunction mergeByName(modifiers) {\n    var merged = modifiers.reduce(function(merged, current) {\n        var existing = merged[current.name];\n        merged[current.name] = existing ? Object.assign({}, existing, current, {\n            options: Object.assign({}, existing.options, current.options),\n            data: Object.assign({}, existing.data, current.data)\n        }) : current;\n        return merged;\n    }, {}); // IE11 does not support Object.values\n    return Object.keys(merged).map(function(key) {\n        return merged[key];\n    });\n}\nvar INVALID_ELEMENT_ERROR = \"Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.\";\nvar INFINITE_LOOP_ERROR = \"Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.\";\nvar DEFAULT_OPTIONS = {\n    placement: \"bottom\",\n    modifiers: [],\n    strategy: \"absolute\"\n};\nfunction areValidElements() {\n    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n        args[_key] = arguments[_key];\n    }\n    return !args.some(function(element) {\n        return !(element && typeof element.getBoundingClientRect === \"function\");\n    });\n}\nfunction popperGenerator(generatorOptions) {\n    if (generatorOptions === void 0) {\n        generatorOptions = {};\n    }\n    var _generatorOptions = generatorOptions, _generatorOptions$def = _generatorOptions.defaultModifiers, defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def, _generatorOptions$def2 = _generatorOptions.defaultOptions, defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;\n    return function createPopper(reference, popper, options) {\n        if (options === void 0) {\n            options = defaultOptions;\n        }\n        var state = {\n            placement: \"bottom\",\n            orderedModifiers: [],\n            options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),\n            modifiersData: {},\n            elements: {\n                reference: reference,\n                popper: popper\n            },\n            attributes: {},\n            styles: {}\n        };\n        var effectCleanupFns = [];\n        var isDestroyed = false;\n        var instance = {\n            state: state,\n            setOptions: function setOptions(setOptionsAction) {\n                var options = typeof setOptionsAction === \"function\" ? setOptionsAction(state.options) : setOptionsAction;\n                cleanupModifierEffects();\n                state.options = Object.assign({}, defaultOptions, state.options, options);\n                state.scrollParents = {\n                    reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],\n                    popper: listScrollParents(popper)\n                }; // Orders the modifiers based on their dependencies and `phase`\n                // properties\n                var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers\n                state.orderedModifiers = orderedModifiers.filter(function(m) {\n                    return m.enabled;\n                }); // Validate the provided modifiers so that the consumer will get warned\n                // if one of the modifiers is invalid for any reason\n                if (true) {\n                    var modifiers = uniqueBy([].concat(orderedModifiers, state.options.modifiers), function(_ref) {\n                        var name = _ref.name;\n                        return name;\n                    });\n                    validateModifiers(modifiers);\n                    if (getBasePlacement(state.options.placement) === auto) {\n                        var flipModifier = state.orderedModifiers.find(function(_ref2) {\n                            var name = _ref2.name;\n                            return name === \"flip\";\n                        });\n                        if (!flipModifier) {\n                            console.error([\n                                'Popper: \"auto\" placements require the \"flip\" modifier be',\n                                \"present and enabled to work.\"\n                            ].join(\" \"));\n                        }\n                    }\n                    var _getComputedStyle = getComputedStyle(popper), marginTop = _getComputedStyle.marginTop, marginRight = _getComputedStyle.marginRight, marginBottom = _getComputedStyle.marginBottom, marginLeft = _getComputedStyle.marginLeft; // We no longer take into account `margins` on the popper, and it can\n                    // cause bugs with positioning, so we'll warn the consumer\n                    if ([\n                        marginTop,\n                        marginRight,\n                        marginBottom,\n                        marginLeft\n                    ].some(function(margin) {\n                        return parseFloat(margin);\n                    })) {\n                        console.warn([\n                            'Popper: CSS \"margin\" styles cannot be used to apply padding',\n                            \"between the popper and its reference element or boundary.\",\n                            \"To replicate margin, use the `offset` modifier, as well as\",\n                            \"the `padding` option in the `preventOverflow` and `flip`\",\n                            \"modifiers.\"\n                        ].join(\" \"));\n                    }\n                }\n                runModifierEffects();\n                return instance.update();\n            },\n            // Sync update – it will always be executed, even if not necessary. This\n            // is useful for low frequency updates where sync behavior simplifies the\n            // logic.\n            // For high frequency updates (e.g. `resize` and `scroll` events), always\n            // prefer the async Popper#update method\n            forceUpdate: function forceUpdate() {\n                if (isDestroyed) {\n                    return;\n                }\n                var _state$elements = state.elements, reference = _state$elements.reference, popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements\n                // anymore\n                if (!areValidElements(reference, popper)) {\n                    if (true) {\n                        console.error(INVALID_ELEMENT_ERROR);\n                    }\n                    return;\n                } // Store the reference and popper rects to be read by modifiers\n                state.rects = {\n                    reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === \"fixed\"),\n                    popper: getLayoutRect(popper)\n                }; // Modifiers have the ability to reset the current update cycle. The\n                // most common use case for this is the `flip` modifier changing the\n                // placement, which then needs to re-run all the modifiers, because the\n                // logic was previously ran for the previous placement and is therefore\n                // stale/incorrect\n                state.reset = false;\n                state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier\n                // is filled with the initial data specified by the modifier. This means\n                // it doesn't persist and is fresh on each update.\n                // To ensure persistent data, use `${name}#persistent`\n                state.orderedModifiers.forEach(function(modifier) {\n                    return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);\n                });\n                var __debug_loops__ = 0;\n                for(var index = 0; index < state.orderedModifiers.length; index++){\n                    if (true) {\n                        __debug_loops__ += 1;\n                        if (__debug_loops__ > 100) {\n                            console.error(INFINITE_LOOP_ERROR);\n                            break;\n                        }\n                    }\n                    if (state.reset === true) {\n                        state.reset = false;\n                        index = -1;\n                        continue;\n                    }\n                    var _state$orderedModifie = state.orderedModifiers[index], fn = _state$orderedModifie.fn, _state$orderedModifie2 = _state$orderedModifie.options, _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2, name = _state$orderedModifie.name;\n                    if (typeof fn === \"function\") {\n                        state = fn({\n                            state: state,\n                            options: _options,\n                            name: name,\n                            instance: instance\n                        }) || state;\n                    }\n                }\n            },\n            // Async and optimistically optimized update – it will not be executed if\n            // not necessary (debounced to run at most once-per-tick)\n            update: debounce(function() {\n                return new Promise(function(resolve) {\n                    instance.forceUpdate();\n                    resolve(state);\n                });\n            }),\n            destroy: function destroy() {\n                cleanupModifierEffects();\n                isDestroyed = true;\n            }\n        };\n        if (!areValidElements(reference, popper)) {\n            if (true) {\n                console.error(INVALID_ELEMENT_ERROR);\n            }\n            return instance;\n        }\n        instance.setOptions(options).then(function(state) {\n            if (!isDestroyed && options.onFirstUpdate) {\n                options.onFirstUpdate(state);\n            }\n        }); // Modifiers have the ability to execute arbitrary code before the first\n        // update cycle runs. They will be executed in the same order as the update\n        // cycle. This is useful when a modifier adds some persistent data that\n        // other modifiers need to use, but the modifier is run after the dependent\n        // one.\n        function runModifierEffects() {\n            state.orderedModifiers.forEach(function(_ref3) {\n                var name = _ref3.name, _ref3$options = _ref3.options, options = _ref3$options === void 0 ? {} : _ref3$options, effect = _ref3.effect;\n                if (typeof effect === \"function\") {\n                    var cleanupFn = effect({\n                        state: state,\n                        name: name,\n                        instance: instance,\n                        options: options\n                    });\n                    var noopFn = function noopFn() {};\n                    effectCleanupFns.push(cleanupFn || noopFn);\n                }\n            });\n        }\n        function cleanupModifierEffects() {\n            effectCleanupFns.forEach(function(fn) {\n                return fn();\n            });\n            effectCleanupFns = [];\n        }\n        return instance;\n    };\n}\n// For the common JS build we will turn this file into a bundle with no imports.\n// This is b/c the Popper lib is all esm files, and would break in a common js only environment\nconst createPopper = popperGenerator({\n    defaultModifiers: [\n        hide$1,\n        popperOffsets$1,\n        computeStyles$1,\n        eventListeners,\n        offset$1,\n        flip$1,\n        preventOverflow$1,\n        arrow$1\n    ]\n});\nexports.createPopper = createPopper;\nexports.placements = placements;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/popper.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/ssr.js":
/*!*********************************************!*\
  !*** ./node_modules/@restart/ui/cjs/ssr.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nvar _ssr = __webpack_require__(/*! @react-aria/ssr */ \"(ssr)/./node_modules/@react-aria/ssr/dist/main.js\");\nexports.useSSRSafeId = _ssr.useSSRSafeId;\nexports.useIsSSR = _ssr.useIsSSR;\nexports.SSRProvider = _ssr.SSRProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvdWkvY2pzL3Nzci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSxrQkFBa0IsR0FBRztBQUNyQixJQUFJRSxPQUFPQyxtQkFBT0EsQ0FBQywwRUFBaUI7QUFDcENILG9CQUFvQixHQUFHRSxLQUFLRSxZQUFZO0FBQ3hDSixnQkFBZ0IsR0FBR0UsS0FBS0csUUFBUTtBQUNoQ0wsbUJBQW1CLEdBQUdFLEtBQUtJLFdBQVciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92ZW50YS1hdXRvcy8uL25vZGVfbW9kdWxlcy9AcmVzdGFydC91aS9janMvc3NyLmpzPzk5MGMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG52YXIgX3NzciA9IHJlcXVpcmUoXCJAcmVhY3QtYXJpYS9zc3JcIik7XG5leHBvcnRzLnVzZVNTUlNhZmVJZCA9IF9zc3IudXNlU1NSU2FmZUlkO1xuZXhwb3J0cy51c2VJc1NTUiA9IF9zc3IudXNlSXNTU1I7XG5leHBvcnRzLlNTUlByb3ZpZGVyID0gX3Nzci5TU1JQcm92aWRlcjsiXSwibmFtZXMiOlsiZXhwb3J0cyIsIl9fZXNNb2R1bGUiLCJfc3NyIiwicmVxdWlyZSIsInVzZVNTUlNhZmVJZCIsInVzZUlzU1NSIiwiU1NSUHJvdmlkZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/ssr.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/useClickOutside.js":
/*!*********************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/useClickOutside.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = exports.getRefTarget = void 0;\nvar _contains = _interopRequireDefault(__webpack_require__(/*! dom-helpers/contains */ \"(ssr)/./node_modules/dom-helpers/esm/contains.js\"));\nvar _listen = _interopRequireDefault(__webpack_require__(/*! dom-helpers/listen */ \"(ssr)/./node_modules/dom-helpers/esm/listen.js\"));\nvar _ownerDocument = _interopRequireDefault(__webpack_require__(/*! dom-helpers/ownerDocument */ \"(ssr)/./node_modules/dom-helpers/esm/ownerDocument.js\"));\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar _useEventCallback = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/useEventCallback */ \"(ssr)/./node_modules/@restart/hooks/cjs/useEventCallback.js\"));\nvar _warning = _interopRequireDefault(__webpack_require__(/*! warning */ \"(ssr)/./node_modules/warning/warning.js\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nconst noop = ()=>{};\nfunction isLeftClickEvent(event) {\n    return event.button === 0;\n}\nfunction isModifiedEvent(event) {\n    return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nconst getRefTarget = (ref)=>ref && (\"current\" in ref ? ref.current : ref);\nexports.getRefTarget = getRefTarget;\nconst InitialTriggerEvents = {\n    click: \"mousedown\",\n    mouseup: \"mousedown\",\n    pointerup: \"pointerdown\"\n};\n/**\n * The `useClickOutside` hook registers your callback on the document that fires\n * when a pointer event is registered outside of the provided ref or element.\n *\n * @param {Ref<HTMLElement>| HTMLElement} ref  The element boundary\n * @param {function} onClickOutside\n * @param {object=}  options\n * @param {boolean=} options.disabled\n * @param {string=}  options.clickTrigger The DOM event name (click, mousedown, etc) to attach listeners on\n */ function useClickOutside(ref, onClickOutside = noop, { disabled, clickTrigger = \"click\" } = {}) {\n    const preventMouseClickOutsideRef = (0, _react.useRef)(false);\n    const waitingForTrigger = (0, _react.useRef)(false);\n    const handleMouseCapture = (0, _react.useCallback)((e)=>{\n        const currentTarget = getRefTarget(ref);\n        (0, _warning.default)(!!currentTarget, \"ClickOutside captured a close event but does not have a ref to compare it to. \" + \"useClickOutside(), should be passed a ref that resolves to a DOM node\");\n        preventMouseClickOutsideRef.current = !currentTarget || isModifiedEvent(e) || !isLeftClickEvent(e) || !!(0, _contains.default)(currentTarget, e.target) || waitingForTrigger.current;\n        waitingForTrigger.current = false;\n    }, [\n        ref\n    ]);\n    const handleInitialMouse = (0, _useEventCallback.default)((e)=>{\n        const currentTarget = getRefTarget(ref);\n        if (currentTarget && (0, _contains.default)(currentTarget, e.target)) {\n            waitingForTrigger.current = true;\n        }\n    });\n    const handleMouse = (0, _useEventCallback.default)((e)=>{\n        if (!preventMouseClickOutsideRef.current) {\n            onClickOutside(e);\n        }\n    });\n    (0, _react.useEffect)(()=>{\n        var _ownerWindow$event, _ownerWindow$parent;\n        if (disabled || ref == null) return undefined;\n        const doc = (0, _ownerDocument.default)(getRefTarget(ref));\n        const ownerWindow = doc.defaultView || window;\n        // Store the current event to avoid triggering handlers immediately\n        // For things rendered in an iframe, the event might originate on the parent window\n        // so we should fall back to that global event if the local one doesn't exist\n        // https://github.com/facebook/react/issues/20074\n        let currentEvent = (_ownerWindow$event = ownerWindow.event) != null ? _ownerWindow$event : (_ownerWindow$parent = ownerWindow.parent) == null ? void 0 : _ownerWindow$parent.event;\n        let removeInitialTriggerListener = null;\n        if (InitialTriggerEvents[clickTrigger]) {\n            removeInitialTriggerListener = (0, _listen.default)(doc, InitialTriggerEvents[clickTrigger], handleInitialMouse, true);\n        }\n        // Use capture for this listener so it fires before React's listener, to\n        // avoid false positives in the contains() check below if the target DOM\n        // element is removed in the React mouse callback.\n        const removeMouseCaptureListener = (0, _listen.default)(doc, clickTrigger, handleMouseCapture, true);\n        const removeMouseListener = (0, _listen.default)(doc, clickTrigger, (e)=>{\n            // skip if this event is the same as the one running when we added the handlers\n            if (e === currentEvent) {\n                currentEvent = undefined;\n                return;\n            }\n            handleMouse(e);\n        });\n        let mobileSafariHackListeners = [];\n        if (\"ontouchstart\" in doc.documentElement) {\n            mobileSafariHackListeners = [].slice.call(doc.body.children).map((el)=>(0, _listen.default)(el, \"mousemove\", noop));\n        }\n        return ()=>{\n            removeInitialTriggerListener == null ? void 0 : removeInitialTriggerListener();\n            removeMouseCaptureListener();\n            removeMouseListener();\n            mobileSafariHackListeners.forEach((remove)=>remove());\n        };\n    }, [\n        ref,\n        disabled,\n        clickTrigger,\n        handleMouseCapture,\n        handleInitialMouse,\n        handleMouse\n    ]);\n}\nvar _default = useClickOutside;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/useClickOutside.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/usePopper.js":
/*!***************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/usePopper.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar _dequal = __webpack_require__(/*! dequal */ \"(ssr)/./node_modules/dequal/dist/index.js\");\nvar _useSafeState = _interopRequireDefault(__webpack_require__(/*! @restart/hooks/useSafeState */ \"(ssr)/./node_modules/@restart/hooks/cjs/useSafeState.js\"));\nvar _popper = __webpack_require__(/*! ./popper */ \"(ssr)/./node_modules/@restart/ui/cjs/popper.js\");\nconst _excluded = [\n    \"enabled\",\n    \"placement\",\n    \"strategy\",\n    \"modifiers\"\n];\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\nconst disabledApplyStylesModifier = {\n    name: \"applyStyles\",\n    enabled: false,\n    phase: \"afterWrite\",\n    fn: ()=>undefined\n};\n// until docjs supports type exports...\nconst ariaDescribedByModifier = {\n    name: \"ariaDescribedBy\",\n    enabled: true,\n    phase: \"afterWrite\",\n    effect: ({ state })=>()=>{\n            const { reference, popper } = state.elements;\n            if (\"removeAttribute\" in reference) {\n                const ids = (reference.getAttribute(\"aria-describedby\") || \"\").split(\",\").filter((id)=>id.trim() !== popper.id);\n                if (!ids.length) reference.removeAttribute(\"aria-describedby\");\n                else reference.setAttribute(\"aria-describedby\", ids.join(\",\"));\n            }\n        },\n    fn: ({ state })=>{\n        var _popper$getAttribute;\n        const { popper, reference } = state.elements;\n        const role = (_popper$getAttribute = popper.getAttribute(\"role\")) == null ? void 0 : _popper$getAttribute.toLowerCase();\n        if (popper.id && role === \"tooltip\" && \"setAttribute\" in reference) {\n            const ids = reference.getAttribute(\"aria-describedby\");\n            if (ids && ids.split(\",\").indexOf(popper.id) !== -1) {\n                return;\n            }\n            reference.setAttribute(\"aria-describedby\", ids ? `${ids},${popper.id}` : popper.id);\n        }\n    }\n};\nconst EMPTY_MODIFIERS = [];\n/**\n * Position an element relative some reference element using Popper.js\n *\n * @param referenceElement\n * @param popperElement\n * @param {object}      options\n * @param {object=}     options.modifiers Popper.js modifiers\n * @param {boolean=}    options.enabled toggle the popper functionality on/off\n * @param {string=}     options.placement The popper element placement relative to the reference element\n * @param {string=}     options.strategy the positioning strategy\n * @param {function=}   options.onCreate called when the popper is created\n * @param {function=}   options.onUpdate called when the popper is updated\n *\n * @returns {UsePopperState} The popper state\n */ function usePopper(referenceElement, popperElement, _ref = {}) {\n    let { enabled = true, placement = \"bottom\", strategy = \"absolute\", modifiers = EMPTY_MODIFIERS } = _ref, config = _objectWithoutPropertiesLoose(_ref, _excluded);\n    const prevModifiers = (0, _react.useRef)(modifiers);\n    const popperInstanceRef = (0, _react.useRef)();\n    const update = (0, _react.useCallback)(()=>{\n        var _popperInstanceRef$cu;\n        (_popperInstanceRef$cu = popperInstanceRef.current) == null ? void 0 : _popperInstanceRef$cu.update();\n    }, []);\n    const forceUpdate = (0, _react.useCallback)(()=>{\n        var _popperInstanceRef$cu2;\n        (_popperInstanceRef$cu2 = popperInstanceRef.current) == null ? void 0 : _popperInstanceRef$cu2.forceUpdate();\n    }, []);\n    const [popperState, setState] = (0, _useSafeState.default)((0, _react.useState)({\n        placement,\n        update,\n        forceUpdate,\n        attributes: {},\n        styles: {\n            popper: {},\n            arrow: {}\n        }\n    }));\n    const updateModifier = (0, _react.useMemo)(()=>({\n            name: \"updateStateModifier\",\n            enabled: true,\n            phase: \"write\",\n            requires: [\n                \"computeStyles\"\n            ],\n            fn: ({ state })=>{\n                const styles = {};\n                const attributes = {};\n                Object.keys(state.elements).forEach((element)=>{\n                    styles[element] = state.styles[element];\n                    attributes[element] = state.attributes[element];\n                });\n                setState({\n                    state,\n                    styles,\n                    attributes,\n                    update,\n                    forceUpdate,\n                    placement: state.placement\n                });\n            }\n        }), [\n        update,\n        forceUpdate,\n        setState\n    ]);\n    const nextModifiers = (0, _react.useMemo)(()=>{\n        if (!(0, _dequal.dequal)(prevModifiers.current, modifiers)) {\n            prevModifiers.current = modifiers;\n        }\n        return prevModifiers.current;\n    }, [\n        modifiers\n    ]);\n    (0, _react.useEffect)(()=>{\n        if (!popperInstanceRef.current || !enabled) return;\n        popperInstanceRef.current.setOptions({\n            placement,\n            strategy,\n            modifiers: [\n                ...nextModifiers,\n                updateModifier,\n                disabledApplyStylesModifier\n            ]\n        });\n    }, [\n        strategy,\n        placement,\n        updateModifier,\n        enabled,\n        nextModifiers\n    ]);\n    (0, _react.useEffect)(()=>{\n        if (!enabled || referenceElement == null || popperElement == null) {\n            return undefined;\n        }\n        popperInstanceRef.current = (0, _popper.createPopper)(referenceElement, popperElement, Object.assign({}, config, {\n            placement,\n            strategy,\n            modifiers: [\n                ...nextModifiers,\n                ariaDescribedByModifier,\n                updateModifier\n            ]\n        }));\n        return ()=>{\n            if (popperInstanceRef.current != null) {\n                popperInstanceRef.current.destroy();\n                popperInstanceRef.current = undefined;\n                setState((s)=>Object.assign({}, s, {\n                        attributes: {},\n                        styles: {\n                            popper: {}\n                        }\n                    }));\n            }\n        };\n    // This is only run once to _create_ the popper\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        enabled,\n        referenceElement,\n        popperElement\n    ]);\n    return popperState;\n}\nvar _default = usePopper;\nexports[\"default\"] = _default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/usePopper.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/useWaitForDOMRef.js":
/*!**********************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/useWaitForDOMRef.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = useWaitForDOMRef;\nexports.resolveContainerRef = void 0;\nvar _ownerDocument = _interopRequireDefault(__webpack_require__(/*! dom-helpers/ownerDocument */ \"(ssr)/./node_modules/dom-helpers/esm/ownerDocument.js\"));\nvar _canUseDOM = _interopRequireDefault(__webpack_require__(/*! dom-helpers/canUseDOM */ \"(ssr)/./node_modules/dom-helpers/esm/canUseDOM.js\"));\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar _useWindow = _interopRequireDefault(__webpack_require__(/*! ./useWindow */ \"(ssr)/./node_modules/@restart/ui/cjs/useWindow.js\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nconst resolveContainerRef = (ref, document)=>{\n    if (!_canUseDOM.default) return null;\n    if (ref == null) return (document || (0, _ownerDocument.default)()).body;\n    if (typeof ref === \"function\") ref = ref();\n    if (ref && \"current\" in ref) ref = ref.current;\n    if (ref && (\"nodeType\" in ref || ref.getBoundingClientRect)) return ref;\n    return null;\n};\nexports.resolveContainerRef = resolveContainerRef;\nfunction useWaitForDOMRef(ref, onResolved) {\n    const window = (0, _useWindow.default)();\n    const [resolvedRef, setRef] = (0, _react.useState)(()=>resolveContainerRef(ref, window == null ? void 0 : window.document));\n    if (!resolvedRef) {\n        const earlyRef = resolveContainerRef(ref);\n        if (earlyRef) setRef(earlyRef);\n    }\n    (0, _react.useEffect)(()=>{\n        if (onResolved && resolvedRef) {\n            onResolved(resolvedRef);\n        }\n    }, [\n        onResolved,\n        resolvedRef\n    ]);\n    (0, _react.useEffect)(()=>{\n        const nextRef = resolveContainerRef(ref);\n        if (nextRef !== resolvedRef) {\n            setRef(nextRef);\n        }\n    }, [\n        ref,\n        resolvedRef\n    ]);\n    return resolvedRef;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvdWkvY2pzL3VzZVdhaXRGb3JET01SZWYuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsa0JBQWtCLEdBQUc7QUFDckJBLGtCQUFlLEdBQUdHO0FBQ2xCSCwyQkFBMkIsR0FBRyxLQUFLO0FBQ25DLElBQUlLLGlCQUFpQkMsdUJBQXVCQyxtQkFBT0EsQ0FBQyx3RkFBMkI7QUFDL0UsSUFBSUMsYUFBYUYsdUJBQXVCQyxtQkFBT0EsQ0FBQyxnRkFBdUI7QUFDdkUsSUFBSUUsU0FBU0YsbUJBQU9BLENBQUMsd0dBQU87QUFDNUIsSUFBSUcsYUFBYUosdUJBQXVCQyxtQkFBT0EsQ0FBQyxzRUFBYTtBQUM3RCxTQUFTRCx1QkFBdUJLLEdBQUc7SUFBSSxPQUFPQSxPQUFPQSxJQUFJVixVQUFVLEdBQUdVLE1BQU07UUFBRVQsU0FBU1M7SUFBSTtBQUFHO0FBQzlGLE1BQU1QLHNCQUFzQixDQUFDUSxLQUFLQztJQUNoQyxJQUFJLENBQUNMLFdBQVdOLE9BQU8sRUFBRSxPQUFPO0lBQ2hDLElBQUlVLE9BQU8sTUFBTSxPQUFPLENBQUNDLFlBQVksQ0FBQyxHQUFHUixlQUFlSCxPQUFPLEdBQUUsRUFBR1ksSUFBSTtJQUN4RSxJQUFJLE9BQU9GLFFBQVEsWUFBWUEsTUFBTUE7SUFDckMsSUFBSUEsT0FBTyxhQUFhQSxLQUFLQSxNQUFNQSxJQUFJRyxPQUFPO0lBQzlDLElBQUlILE9BQVEsZUFBY0EsT0FBT0EsSUFBSUkscUJBQXFCLEdBQUcsT0FBT0o7SUFDcEUsT0FBTztBQUNUO0FBQ0FaLDJCQUEyQixHQUFHSTtBQUM5QixTQUFTRCxpQkFBaUJTLEdBQUcsRUFBRUssVUFBVTtJQUN2QyxNQUFNQyxTQUFTLENBQUMsR0FBR1IsV0FBV1IsT0FBTztJQUNyQyxNQUFNLENBQUNpQixhQUFhQyxPQUFPLEdBQUcsQ0FBQyxHQUFHWCxPQUFPWSxRQUFRLEVBQUUsSUFBTWpCLG9CQUFvQlEsS0FBS00sVUFBVSxPQUFPLEtBQUssSUFBSUEsT0FBT0wsUUFBUTtJQUMzSCxJQUFJLENBQUNNLGFBQWE7UUFDaEIsTUFBTUcsV0FBV2xCLG9CQUFvQlE7UUFDckMsSUFBSVUsVUFBVUYsT0FBT0U7SUFDdkI7SUFDQyxJQUFHYixPQUFPYyxTQUFTLEVBQUU7UUFDcEIsSUFBSU4sY0FBY0UsYUFBYTtZQUM3QkYsV0FBV0U7UUFDYjtJQUNGLEdBQUc7UUFBQ0Y7UUFBWUU7S0FBWTtJQUMzQixJQUFHVixPQUFPYyxTQUFTLEVBQUU7UUFDcEIsTUFBTUMsVUFBVXBCLG9CQUFvQlE7UUFDcEMsSUFBSVksWUFBWUwsYUFBYTtZQUMzQkMsT0FBT0k7UUFDVDtJQUNGLEdBQUc7UUFBQ1o7UUFBS087S0FBWTtJQUNyQixPQUFPQTtBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdmVudGEtYXV0b3MvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvdWkvY2pzL3VzZVdhaXRGb3JET01SZWYuanM/MDgwZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IHVzZVdhaXRGb3JET01SZWY7XG5leHBvcnRzLnJlc29sdmVDb250YWluZXJSZWYgPSB2b2lkIDA7XG52YXIgX293bmVyRG9jdW1lbnQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJkb20taGVscGVycy9vd25lckRvY3VtZW50XCIpKTtcbnZhciBfY2FuVXNlRE9NID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiZG9tLWhlbHBlcnMvY2FuVXNlRE9NXCIpKTtcbnZhciBfcmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG52YXIgX3VzZVdpbmRvdyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdXNlV2luZG93XCIpKTtcbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5jb25zdCByZXNvbHZlQ29udGFpbmVyUmVmID0gKHJlZiwgZG9jdW1lbnQpID0+IHtcbiAgaWYgKCFfY2FuVXNlRE9NLmRlZmF1bHQpIHJldHVybiBudWxsO1xuICBpZiAocmVmID09IG51bGwpIHJldHVybiAoZG9jdW1lbnQgfHwgKDAsIF9vd25lckRvY3VtZW50LmRlZmF1bHQpKCkpLmJvZHk7XG4gIGlmICh0eXBlb2YgcmVmID09PSAnZnVuY3Rpb24nKSByZWYgPSByZWYoKTtcbiAgaWYgKHJlZiAmJiAnY3VycmVudCcgaW4gcmVmKSByZWYgPSByZWYuY3VycmVudDtcbiAgaWYgKHJlZiAmJiAoJ25vZGVUeXBlJyBpbiByZWYgfHwgcmVmLmdldEJvdW5kaW5nQ2xpZW50UmVjdCkpIHJldHVybiByZWY7XG4gIHJldHVybiBudWxsO1xufTtcbmV4cG9ydHMucmVzb2x2ZUNvbnRhaW5lclJlZiA9IHJlc29sdmVDb250YWluZXJSZWY7XG5mdW5jdGlvbiB1c2VXYWl0Rm9yRE9NUmVmKHJlZiwgb25SZXNvbHZlZCkge1xuICBjb25zdCB3aW5kb3cgPSAoMCwgX3VzZVdpbmRvdy5kZWZhdWx0KSgpO1xuICBjb25zdCBbcmVzb2x2ZWRSZWYsIHNldFJlZl0gPSAoMCwgX3JlYWN0LnVzZVN0YXRlKSgoKSA9PiByZXNvbHZlQ29udGFpbmVyUmVmKHJlZiwgd2luZG93ID09IG51bGwgPyB2b2lkIDAgOiB3aW5kb3cuZG9jdW1lbnQpKTtcbiAgaWYgKCFyZXNvbHZlZFJlZikge1xuICAgIGNvbnN0IGVhcmx5UmVmID0gcmVzb2x2ZUNvbnRhaW5lclJlZihyZWYpO1xuICAgIGlmIChlYXJseVJlZikgc2V0UmVmKGVhcmx5UmVmKTtcbiAgfVxuICAoMCwgX3JlYWN0LnVzZUVmZmVjdCkoKCkgPT4ge1xuICAgIGlmIChvblJlc29sdmVkICYmIHJlc29sdmVkUmVmKSB7XG4gICAgICBvblJlc29sdmVkKHJlc29sdmVkUmVmKTtcbiAgICB9XG4gIH0sIFtvblJlc29sdmVkLCByZXNvbHZlZFJlZl0pO1xuICAoMCwgX3JlYWN0LnVzZUVmZmVjdCkoKCkgPT4ge1xuICAgIGNvbnN0IG5leHRSZWYgPSByZXNvbHZlQ29udGFpbmVyUmVmKHJlZik7XG4gICAgaWYgKG5leHRSZWYgIT09IHJlc29sdmVkUmVmKSB7XG4gICAgICBzZXRSZWYobmV4dFJlZik7XG4gICAgfVxuICB9LCBbcmVmLCByZXNvbHZlZFJlZl0pO1xuICByZXR1cm4gcmVzb2x2ZWRSZWY7XG59Il0sIm5hbWVzIjpbImV4cG9ydHMiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsInVzZVdhaXRGb3JET01SZWYiLCJyZXNvbHZlQ29udGFpbmVyUmVmIiwiX293bmVyRG9jdW1lbnQiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9jYW5Vc2VET00iLCJfcmVhY3QiLCJfdXNlV2luZG93Iiwib2JqIiwicmVmIiwiZG9jdW1lbnQiLCJib2R5IiwiY3VycmVudCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsIm9uUmVzb2x2ZWQiLCJ3aW5kb3ciLCJyZXNvbHZlZFJlZiIsInNldFJlZiIsInVzZVN0YXRlIiwiZWFybHlSZWYiLCJ1c2VFZmZlY3QiLCJuZXh0UmVmIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/useWaitForDOMRef.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/useWindow.js":
/*!***************************************************!*\
  !*** ./node_modules/@restart/ui/cjs/useWindow.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports.__esModule = true;\nexports[\"default\"] = useWindow;\nexports.WindowProvider = void 0;\nvar _react = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar _canUseDOM = _interopRequireDefault(__webpack_require__(/*! dom-helpers/canUseDOM */ \"(ssr)/./node_modules/dom-helpers/esm/canUseDOM.js\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nconst Context = /*#__PURE__*/ (0, _react.createContext)(_canUseDOM.default ? window : undefined);\nconst WindowProvider = Context.Provider;\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */ exports.WindowProvider = WindowProvider;\nfunction useWindow() {\n    return (0, _react.useContext)(Context);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvdWkvY2pzL3VzZVdpbmRvdy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSxrQkFBa0IsR0FBRztBQUNyQkEsa0JBQWUsR0FBR0c7QUFDbEJILHNCQUFzQixHQUFHLEtBQUs7QUFDOUIsSUFBSUssU0FBU0MsbUJBQU9BLENBQUMsd0dBQU87QUFDNUIsSUFBSUMsYUFBYUMsdUJBQXVCRixtQkFBT0EsQ0FBQyxnRkFBdUI7QUFDdkUsU0FBU0UsdUJBQXVCQyxHQUFHO0lBQUksT0FBT0EsT0FBT0EsSUFBSVIsVUFBVSxHQUFHUSxNQUFNO1FBQUVQLFNBQVNPO0lBQUk7QUFBRztBQUM5RixNQUFNQyxVQUF1QixXQUFGLEdBQUcsSUFBR0wsT0FBT00sYUFBYSxFQUFFSixXQUFXTCxPQUFPLEdBQUdVLFNBQVNDO0FBQ3JGLE1BQU1ULGlCQUFpQk0sUUFBUUksUUFBUTtBQUV2Qzs7Ozs7Q0FLQyxHQUNEZCxzQkFBc0IsR0FBR0k7QUFDekIsU0FBU0Q7SUFDUCxPQUFPLENBQUMsR0FBR0UsT0FBT1UsVUFBVSxFQUFFTDtBQUNoQyIsInNvdXJjZXMiOlsid2VicGFjazovL3ZlbnRhLWF1dG9zLy4vbm9kZV9tb2R1bGVzL0ByZXN0YXJ0L3VpL2Nqcy91c2VXaW5kb3cuanM/NzYxMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IHVzZVdpbmRvdztcbmV4cG9ydHMuV2luZG93UHJvdmlkZXIgPSB2b2lkIDA7XG52YXIgX3JlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xudmFyIF9jYW5Vc2VET00gPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJkb20taGVscGVycy9jYW5Vc2VET01cIikpO1xuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cbmNvbnN0IENvbnRleHQgPSAvKiNfX1BVUkVfXyovKDAsIF9yZWFjdC5jcmVhdGVDb250ZXh0KShfY2FuVXNlRE9NLmRlZmF1bHQgPyB3aW5kb3cgOiB1bmRlZmluZWQpO1xuY29uc3QgV2luZG93UHJvdmlkZXIgPSBDb250ZXh0LlByb3ZpZGVyO1xuXG4vKipcbiAqIFRoZSBkb2N1bWVudCBcIndpbmRvd1wiIHBsYWNlZCBpbiBSZWFjdCBjb250ZXh0LiBIZWxwZnVsIGZvciBkZXRlcm1pbmluZ1xuICogU1NSIGNvbnRleHQsIG9yIHdoZW4gcmVuZGVyaW5nIGludG8gYW4gaWZyYW1lLlxuICpcbiAqIEByZXR1cm5zIHRoZSBjdXJyZW50IHdpbmRvd1xuICovXG5leHBvcnRzLldpbmRvd1Byb3ZpZGVyID0gV2luZG93UHJvdmlkZXI7XG5mdW5jdGlvbiB1c2VXaW5kb3coKSB7XG4gIHJldHVybiAoMCwgX3JlYWN0LnVzZUNvbnRleHQpKENvbnRleHQpO1xufSJdLCJuYW1lcyI6WyJleHBvcnRzIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJ1c2VXaW5kb3ciLCJXaW5kb3dQcm92aWRlciIsIl9yZWFjdCIsInJlcXVpcmUiLCJfY2FuVXNlRE9NIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIm9iaiIsIkNvbnRleHQiLCJjcmVhdGVDb250ZXh0Iiwid2luZG93IiwidW5kZWZpbmVkIiwiUHJvdmlkZXIiLCJ1c2VDb250ZXh0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/useWindow.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/cjs/utils.js":
/*!***********************************************!*\
  !*** ./node_modules/@restart/ui/cjs/utils.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nexports.__esModule = true;\nexports.isEscKey = isEscKey;\n/* eslint-disable import/prefer-default-export */ function isEscKey(e) {\n    return e.code === \"Escape\" || e.keyCode === 27;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvdWkvY2pzL3V0aWxzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLGtCQUFrQixHQUFHO0FBQ3JCQSxnQkFBZ0IsR0FBR0U7QUFDbkIsK0NBQStDLEdBQy9DLFNBQVNBLFNBQVNDLENBQUM7SUFDakIsT0FBT0EsRUFBRUMsSUFBSSxLQUFLLFlBQVlELEVBQUVFLE9BQU8sS0FBSztBQUM5QyIsInNvdXJjZXMiOlsid2VicGFjazovL3ZlbnRhLWF1dG9zLy4vbm9kZV9tb2R1bGVzL0ByZXN0YXJ0L3VpL2Nqcy91dGlscy5qcz85NTkwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5pc0VzY0tleSA9IGlzRXNjS2V5O1xuLyogZXNsaW50LWRpc2FibGUgaW1wb3J0L3ByZWZlci1kZWZhdWx0LWV4cG9ydCAqL1xuZnVuY3Rpb24gaXNFc2NLZXkoZSkge1xuICByZXR1cm4gZS5jb2RlID09PSAnRXNjYXBlJyB8fCBlLmtleUNvZGUgPT09IDI3O1xufSJdLCJuYW1lcyI6WyJleHBvcnRzIiwiX19lc01vZHVsZSIsImlzRXNjS2V5IiwiZSIsImNvZGUiLCJrZXlDb2RlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/cjs/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@restart/ui/node_modules/uncontrollable/lib/esm/index.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@restart/ui/node_modules/uncontrollable/lib/esm/index.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultKey: () => (/* binding */ defaultKey),\n/* harmony export */   useUncontrolled: () => (/* binding */ useUncontrolled),\n/* harmony export */   useUncontrolledProp: () => (/* binding */ useUncontrolledProp)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\nfunction _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n    return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n    if (typeof input !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n        var res = prim.call(input, hint || \"default\");\n        if (typeof res !== \"object\") return res;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n}\n\nfunction defaultKey(key) {\n    return \"default\" + key.charAt(0).toUpperCase() + key.substr(1);\n}\nfunction useUncontrolledProp(propValue, defaultValue, handler) {\n    const wasPropRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(propValue !== undefined);\n    const [stateValue, setState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(defaultValue);\n    const isProp = propValue !== undefined;\n    const wasProp = wasPropRef.current;\n    wasPropRef.current = isProp;\n    /**\n   * If a prop switches from controlled to Uncontrolled\n   * reset its value to the defaultValue\n   */ if (!isProp && wasProp && stateValue !== defaultValue) {\n        setState(defaultValue);\n    }\n    return [\n        isProp ? propValue : stateValue,\n        (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((...args)=>{\n            const [value, ...rest] = args;\n            let returnValue = handler == null ? void 0 : handler(value, ...rest);\n            setState(value);\n            return returnValue;\n        }, [\n            handler\n        ])\n    ];\n}\n\nfunction useUncontrolled(props, config) {\n    return Object.keys(config).reduce((result, fieldName)=>{\n        const _ref = result, _defaultKey = defaultKey(fieldName), { [_defaultKey]: defaultValue, [fieldName]: propsValue } = _ref, rest = _objectWithoutPropertiesLoose(_ref, [\n            _defaultKey,\n            fieldName\n        ].map(_toPropertyKey));\n        const handlerName = config[fieldName];\n        const [value, handler] = useUncontrolledProp(propsValue, defaultValue, props[handlerName]);\n        return Object.assign({}, rest, {\n            [fieldName]: value,\n            [handlerName]: handler\n        });\n    }, props);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvdWkvbm9kZV9tb2R1bGVzL3VuY29udHJvbGxhYmxlL2xpYi9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxTQUFTQSw4QkFBOEJDLE1BQU0sRUFBRUMsUUFBUTtJQUFJLElBQUlELFVBQVUsTUFBTSxPQUFPLENBQUM7SUFBRyxJQUFJRSxTQUFTLENBQUM7SUFBRyxJQUFJQyxhQUFhQyxPQUFPQyxJQUFJLENBQUNMO0lBQVMsSUFBSU0sS0FBS0M7SUFBRyxJQUFLQSxJQUFJLEdBQUdBLElBQUlKLFdBQVdLLE1BQU0sRUFBRUQsSUFBSztRQUFFRCxNQUFNSCxVQUFVLENBQUNJLEVBQUU7UUFBRSxJQUFJTixTQUFTUSxPQUFPLENBQUNILFFBQVEsR0FBRztRQUFVSixNQUFNLENBQUNJLElBQUksR0FBR04sTUFBTSxDQUFDTSxJQUFJO0lBQUU7SUFBRSxPQUFPSjtBQUFRO0FBQ2xULFNBQVNRLGVBQWVDLEdBQUc7SUFBSSxJQUFJTCxNQUFNTSxhQUFhRCxLQUFLO0lBQVcsT0FBTyxPQUFPTCxRQUFRLFdBQVdBLE1BQU1PLE9BQU9QO0FBQU07QUFDMUgsU0FBU00sYUFBYUUsS0FBSyxFQUFFQyxJQUFJO0lBQUksSUFBSSxPQUFPRCxVQUFVLFlBQVlBLFVBQVUsTUFBTSxPQUFPQTtJQUFPLElBQUlFLE9BQU9GLEtBQUssQ0FBQ0csT0FBT0MsV0FBVyxDQUFDO0lBQUUsSUFBSUYsU0FBU0csV0FBVztRQUFFLElBQUlDLE1BQU1KLEtBQUtLLElBQUksQ0FBQ1AsT0FBT0MsUUFBUTtRQUFZLElBQUksT0FBT0ssUUFBUSxVQUFVLE9BQU9BO1FBQUssTUFBTSxJQUFJRSxVQUFVO0lBQWlEO0lBQUUsT0FBTyxDQUFDUCxTQUFTLFdBQVdGLFNBQVNVLE1BQUssRUFBR1Q7QUFBUTtBQUNsVTtBQUMvQyxTQUFTYSxXQUFXckIsR0FBRztJQUM1QixPQUFPLFlBQVlBLElBQUlzQixNQUFNLENBQUMsR0FBR0MsV0FBVyxLQUFLdkIsSUFBSXdCLE1BQU0sQ0FBQztBQUM5RDtBQUNBLFNBQVNDLG9CQUFvQkMsU0FBUyxFQUFFQyxZQUFZLEVBQUVDLE9BQU87SUFDM0QsTUFBTUMsYUFBYVYsNkNBQU1BLENBQUNPLGNBQWNiO0lBQ3hDLE1BQU0sQ0FBQ2lCLFlBQVlDLFNBQVMsR0FBR1gsK0NBQVFBLENBQUNPO0lBQ3hDLE1BQU1LLFNBQVNOLGNBQWNiO0lBQzdCLE1BQU1vQixVQUFVSixXQUFXSyxPQUFPO0lBQ2xDTCxXQUFXSyxPQUFPLEdBQUdGO0lBRXJCOzs7R0FHQyxHQUNELElBQUksQ0FBQ0EsVUFBVUMsV0FBV0gsZUFBZUgsY0FBYztRQUNyREksU0FBU0o7SUFDWDtJQUNBLE9BQU87UUFBQ0ssU0FBU04sWUFBWUk7UUFBWVosa0RBQVdBLENBQUMsQ0FBQyxHQUFHaUI7WUFDdkQsTUFBTSxDQUFDQyxPQUFPLEdBQUdDLEtBQUssR0FBR0Y7WUFDekIsSUFBSUcsY0FBY1YsV0FBVyxPQUFPLEtBQUssSUFBSUEsUUFBUVEsVUFBVUM7WUFDL0ROLFNBQVNLO1lBQ1QsT0FBT0U7UUFDVCxHQUFHO1lBQUNWO1NBQVE7S0FBRTtBQUNoQjtBQUMrQjtBQUN4QixTQUFTVyxnQkFBZ0JDLEtBQUssRUFBRUMsTUFBTTtJQUMzQyxPQUFPM0MsT0FBT0MsSUFBSSxDQUFDMEMsUUFBUUMsTUFBTSxDQUFDLENBQUNDLFFBQVFDO1FBQ3pDLE1BQU1DLE9BQU9GLFFBQ1hHLGNBQWN6QixXQUFXdUIsWUFDekIsRUFDRSxDQUFDRSxZQUFZLEVBQUVuQixZQUFZLEVBQzNCLENBQUNpQixVQUFVLEVBQUVHLFVBQVUsRUFDeEIsR0FBR0YsTUFDSlIsT0FBTzVDLDhCQUE4Qm9ELE1BQU07WUFBQ0M7WUFBYUY7U0FBVSxDQUFDSSxHQUFHLENBQUM1QztRQUMxRSxNQUFNNkMsY0FBY1IsTUFBTSxDQUFDRyxVQUFVO1FBQ3JDLE1BQU0sQ0FBQ1IsT0FBT1IsUUFBUSxHQUFHSCxvQkFBb0JzQixZQUFZcEIsY0FBY2EsS0FBSyxDQUFDUyxZQUFZO1FBQ3pGLE9BQU9uRCxPQUFPb0QsTUFBTSxDQUFDLENBQUMsR0FBR2IsTUFBTTtZQUM3QixDQUFDTyxVQUFVLEVBQUVSO1lBQ2IsQ0FBQ2EsWUFBWSxFQUFFckI7UUFDakI7SUFDRixHQUFHWTtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdmVudGEtYXV0b3MvLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvdWkvbm9kZV9tb2R1bGVzL3VuY29udHJvbGxhYmxlL2xpYi9lc20vaW5kZXguanM/M2UwNiJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7IGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9OyB2YXIgdGFyZ2V0ID0ge307IHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTsgdmFyIGtleSwgaTsgZm9yIChpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspIHsga2V5ID0gc291cmNlS2V5c1tpXTsgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSByZXR1cm4gdGFyZ2V0OyB9XG5mdW5jdGlvbiBfdG9Qcm9wZXJ0eUtleShhcmcpIHsgdmFyIGtleSA9IF90b1ByaW1pdGl2ZShhcmcsIFwic3RyaW5nXCIpOyByZXR1cm4gdHlwZW9mIGtleSA9PT0gXCJzeW1ib2xcIiA/IGtleSA6IFN0cmluZyhrZXkpOyB9XG5mdW5jdGlvbiBfdG9QcmltaXRpdmUoaW5wdXQsIGhpbnQpIHsgaWYgKHR5cGVvZiBpbnB1dCAhPT0gXCJvYmplY3RcIiB8fCBpbnB1dCA9PT0gbnVsbCkgcmV0dXJuIGlucHV0OyB2YXIgcHJpbSA9IGlucHV0W1N5bWJvbC50b1ByaW1pdGl2ZV07IGlmIChwcmltICE9PSB1bmRlZmluZWQpIHsgdmFyIHJlcyA9IHByaW0uY2FsbChpbnB1dCwgaGludCB8fCBcImRlZmF1bHRcIik7IGlmICh0eXBlb2YgcmVzICE9PSBcIm9iamVjdFwiKSByZXR1cm4gcmVzOyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQEB0b1ByaW1pdGl2ZSBtdXN0IHJldHVybiBhIHByaW1pdGl2ZSB2YWx1ZS5cIik7IH0gcmV0dXJuIChoaW50ID09PSBcInN0cmluZ1wiID8gU3RyaW5nIDogTnVtYmVyKShpbnB1dCk7IH1cbmltcG9ydCB7IHVzZUNhbGxiYWNrLCB1c2VSZWYsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuZXhwb3J0IGZ1bmN0aW9uIGRlZmF1bHRLZXkoa2V5KSB7XG4gIHJldHVybiAnZGVmYXVsdCcgKyBrZXkuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBrZXkuc3Vic3RyKDEpO1xufVxuZnVuY3Rpb24gdXNlVW5jb250cm9sbGVkUHJvcChwcm9wVmFsdWUsIGRlZmF1bHRWYWx1ZSwgaGFuZGxlcikge1xuICBjb25zdCB3YXNQcm9wUmVmID0gdXNlUmVmKHByb3BWYWx1ZSAhPT0gdW5kZWZpbmVkKTtcbiAgY29uc3QgW3N0YXRlVmFsdWUsIHNldFN0YXRlXSA9IHVzZVN0YXRlKGRlZmF1bHRWYWx1ZSk7XG4gIGNvbnN0IGlzUHJvcCA9IHByb3BWYWx1ZSAhPT0gdW5kZWZpbmVkO1xuICBjb25zdCB3YXNQcm9wID0gd2FzUHJvcFJlZi5jdXJyZW50O1xuICB3YXNQcm9wUmVmLmN1cnJlbnQgPSBpc1Byb3A7XG5cbiAgLyoqXG4gICAqIElmIGEgcHJvcCBzd2l0Y2hlcyBmcm9tIGNvbnRyb2xsZWQgdG8gVW5jb250cm9sbGVkXG4gICAqIHJlc2V0IGl0cyB2YWx1ZSB0byB0aGUgZGVmYXVsdFZhbHVlXG4gICAqL1xuICBpZiAoIWlzUHJvcCAmJiB3YXNQcm9wICYmIHN0YXRlVmFsdWUgIT09IGRlZmF1bHRWYWx1ZSkge1xuICAgIHNldFN0YXRlKGRlZmF1bHRWYWx1ZSk7XG4gIH1cbiAgcmV0dXJuIFtpc1Byb3AgPyBwcm9wVmFsdWUgOiBzdGF0ZVZhbHVlLCB1c2VDYWxsYmFjaygoLi4uYXJncykgPT4ge1xuICAgIGNvbnN0IFt2YWx1ZSwgLi4ucmVzdF0gPSBhcmdzO1xuICAgIGxldCByZXR1cm5WYWx1ZSA9IGhhbmRsZXIgPT0gbnVsbCA/IHZvaWQgMCA6IGhhbmRsZXIodmFsdWUsIC4uLnJlc3QpO1xuICAgIHNldFN0YXRlKHZhbHVlKTtcbiAgICByZXR1cm4gcmV0dXJuVmFsdWU7XG4gIH0sIFtoYW5kbGVyXSldO1xufVxuZXhwb3J0IHsgdXNlVW5jb250cm9sbGVkUHJvcCB9O1xuZXhwb3J0IGZ1bmN0aW9uIHVzZVVuY29udHJvbGxlZChwcm9wcywgY29uZmlnKSB7XG4gIHJldHVybiBPYmplY3Qua2V5cyhjb25maWcpLnJlZHVjZSgocmVzdWx0LCBmaWVsZE5hbWUpID0+IHtcbiAgICBjb25zdCBfcmVmID0gcmVzdWx0LFxuICAgICAgX2RlZmF1bHRLZXkgPSBkZWZhdWx0S2V5KGZpZWxkTmFtZSksXG4gICAgICB7XG4gICAgICAgIFtfZGVmYXVsdEtleV06IGRlZmF1bHRWYWx1ZSxcbiAgICAgICAgW2ZpZWxkTmFtZV06IHByb3BzVmFsdWVcbiAgICAgIH0gPSBfcmVmLFxuICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYsIFtfZGVmYXVsdEtleSwgZmllbGROYW1lXS5tYXAoX3RvUHJvcGVydHlLZXkpKTtcbiAgICBjb25zdCBoYW5kbGVyTmFtZSA9IGNvbmZpZ1tmaWVsZE5hbWVdO1xuICAgIGNvbnN0IFt2YWx1ZSwgaGFuZGxlcl0gPSB1c2VVbmNvbnRyb2xsZWRQcm9wKHByb3BzVmFsdWUsIGRlZmF1bHRWYWx1ZSwgcHJvcHNbaGFuZGxlck5hbWVdKTtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgcmVzdCwge1xuICAgICAgW2ZpZWxkTmFtZV06IHZhbHVlLFxuICAgICAgW2hhbmRsZXJOYW1lXTogaGFuZGxlclxuICAgIH0pO1xuICB9LCBwcm9wcyk7XG59Il0sIm5hbWVzIjpbIl9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIiwic291cmNlIiwiZXhjbHVkZWQiLCJ0YXJnZXQiLCJzb3VyY2VLZXlzIiwiT2JqZWN0Iiwia2V5cyIsImtleSIsImkiLCJsZW5ndGgiLCJpbmRleE9mIiwiX3RvUHJvcGVydHlLZXkiLCJhcmciLCJfdG9QcmltaXRpdmUiLCJTdHJpbmciLCJpbnB1dCIsImhpbnQiLCJwcmltIiwiU3ltYm9sIiwidG9QcmltaXRpdmUiLCJ1bmRlZmluZWQiLCJyZXMiLCJjYWxsIiwiVHlwZUVycm9yIiwiTnVtYmVyIiwidXNlQ2FsbGJhY2siLCJ1c2VSZWYiLCJ1c2VTdGF0ZSIsImRlZmF1bHRLZXkiLCJjaGFyQXQiLCJ0b1VwcGVyQ2FzZSIsInN1YnN0ciIsInVzZVVuY29udHJvbGxlZFByb3AiLCJwcm9wVmFsdWUiLCJkZWZhdWx0VmFsdWUiLCJoYW5kbGVyIiwid2FzUHJvcFJlZiIsInN0YXRlVmFsdWUiLCJzZXRTdGF0ZSIsImlzUHJvcCIsIndhc1Byb3AiLCJjdXJyZW50IiwiYXJncyIsInZhbHVlIiwicmVzdCIsInJldHVyblZhbHVlIiwidXNlVW5jb250cm9sbGVkIiwicHJvcHMiLCJjb25maWciLCJyZWR1Y2UiLCJyZXN1bHQiLCJmaWVsZE5hbWUiLCJfcmVmIiwiX2RlZmF1bHRLZXkiLCJwcm9wc1ZhbHVlIiwibWFwIiwiaGFuZGxlck5hbWUiLCJhc3NpZ24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@restart/ui/node_modules/uncontrollable/lib/esm/index.js\n");

/***/ })

};
;